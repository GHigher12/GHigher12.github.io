<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++_Eigen库的使用</title>
    <url>/2023/12/14/C-Eigen%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-Eigen库的使用"><a href="#C-Eigen库的使用" class="headerlink" title="C++_Eigen库的使用"></a>C++_Eigen库的使用</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Eigen是一个C++开源线性代数库。它提供了快速的有关矩阵的线性代数运算和解方程等功能。许多上层的软件库也使用Eigen进行矩阵运算，包括g2o、Sophus等.</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://eigen.tuxfamily.org/index.php?title=Main_Page">https://eigen.tuxfamily.org/index.php?title=Main_Page</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231213155052410.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231213155052410.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231213155052410"></p>
<p>windows下载zip后，进行解压缩</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>CMakeList.txt配置</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(D:\\C++_CLion\\SLAM_Test\\eigen)</span><br></pre></td></tr></table></figure>
<p>填写解压路径</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">// 稠密矩阵的代数运算(逆、特征值)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Core&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MATRTX_SIZE 50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//声明一个2x3的float矩阵</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">2</span>, <span class="number">3</span>&gt; matrix_23;</span><br><span class="line">    <span class="comment">//Vector3d实质上是Eigen::Matrix&lt;double, 3, 1&gt;</span></span><br><span class="line">    Eigen::Vector3d v_3d;</span><br><span class="line">    <span class="comment">//Vector3d实质上是Eigen::Matrix&lt;double, 3, 3&gt;</span></span><br><span class="line">    Eigen::Matrix3d matrix_33 = Eigen::Matrix3d::<span class="built_in">Zero</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不确定矩阵大小，可以使用动态矩阵</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">double</span>, Eigen::Dynamic, Eigen::Dynamic&gt; matrix_dynamic;</span><br><span class="line">    <span class="comment">//或者</span></span><br><span class="line">    Eigen::MatrixXd matrix_x;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//矩阵输入操作</span></span><br><span class="line">    matrix_23 &lt;&lt; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>;</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    cout &lt;&lt; matrix_23 &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//类型</span></span><br><span class="line">    cout &lt;&lt; <span class="built_in"><span class="keyword">typeid</span></span>(matrix_23).<span class="built_in">name</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//访问矩阵中的元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">            cout &lt;&lt; <span class="built_in">matrix_23</span>(i, j) &lt;&lt; endl;</span><br><span class="line">    v_3d &lt;&lt; <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//矩阵和向量相乘, 不能混合两种不同类型的矩阵</span></span><br><span class="line">    <span class="comment">//Eigen::Matrix&lt;double, 2, 1&gt; result_wrong = matrix_23 * v_3d;</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">double</span>, <span class="number">2</span>, <span class="number">1</span>&gt; result = matrix_23.cast&lt;<span class="keyword">double</span>&gt;() * v_3d;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//矩阵运算</span></span><br><span class="line">    matrix_33 = Eigen::Matrix3d::<span class="built_in">Random</span>();</span><br><span class="line">    cout &lt;&lt; matrix_33 &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; matrix_33.<span class="built_in">transpose</span>() &lt;&lt; endl; <span class="comment">// 转置</span></span><br><span class="line">    cout &lt;&lt; matrix_33.<span class="built_in">trace</span>() &lt;&lt; endl; <span class="comment">// 迹</span></span><br><span class="line">    cout &lt;&lt; <span class="number">10</span> * matrix_33 &lt;&lt; endl; <span class="comment">// 数乘</span></span><br><span class="line">    cout &lt;&lt; matrix_33.<span class="built_in">inverse</span>() &lt;&lt; endl; <span class="comment">// 逆</span></span><br><span class="line">    cout &lt;&lt; matrix_33.<span class="built_in">determinant</span>() &lt;&lt; endl; <span class="comment">// 行列式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//特征值</span></span><br><span class="line">    <span class="comment">//实对称矩阵可以保证对角化成功</span></span><br><span class="line">    <span class="function">Eigen::SelfAdjointEigenSolver&lt;Eigen::Matrix3d&gt; <span class="title">eigen_solver</span><span class="params">(matrix_33.transpose() * matrix_33)</span></span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Eigen values = &quot;</span> &lt;&lt; eigen_solver.<span class="built_in">eigenvalues</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Eigen vectors = &quot;</span> &lt;&lt; eigen_solver.<span class="built_in">eigenvectors</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解方程</span></span><br><span class="line">    <span class="comment">//求解 matrix_NN * x = v_Nd</span></span><br><span class="line">    <span class="comment">//N大小为宏定义 矩阵由随机数生成</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">double</span>, MATRTX_SIZE, MATRTX_SIZE&gt; matrix_NN;</span><br><span class="line">    matrix_NN = Eigen::MatrixXd::<span class="built_in">Random</span>(MATRTX_SIZE, MATRTX_SIZE);</span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">double</span>, MATRTX_SIZE, <span class="number">1</span>&gt; v_Nd;</span><br><span class="line">    v_Nd = Eigen::MatrixXd::<span class="built_in">Random</span>(MATRTX_SIZE, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">clock_t</span> time_start = <span class="built_in">clock</span>(); <span class="comment">//计时</span></span><br><span class="line">    <span class="comment">//直接求逆</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">double</span>, MATRTX_SIZE, <span class="number">1</span>&gt; x = matrix_NN.<span class="built_in">inverse</span>() * v_Nd;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;time use in normal inverse is &quot;</span> &lt;&lt; <span class="number">1000</span> * (<span class="built_in">clock</span>() - time_start)/(<span class="keyword">double</span>) CLOCKS_PER_SEC &lt;&lt; <span class="string">&quot;ms&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通常用矩阵分解求解 QR分解</span></span><br><span class="line">    time_start = <span class="built_in">clock</span>();</span><br><span class="line">    x = matrix_NN.<span class="built_in">colPivHouseholderQr</span>().<span class="built_in">solve</span>(v_Nd);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;time use in normal inverse is &quot;</span> &lt;&lt; <span class="number">1000</span> * (<span class="built_in">clock</span>() - time_start)/(<span class="keyword">double</span>) CLOCKS_PER_SEC &lt;&lt; <span class="string">&quot;ms&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">N5Eigen6MatrixIfLi2ELi3ELi0ELi2ELi3EEE</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line"> -0.997497   0.617481  -0.299417</span><br><span class="line">  0.127171   0.170019   0.791925</span><br><span class="line"> -0.613392 -0.0402539    0.64568</span><br><span class="line"></span><br><span class="line"> -0.997497   0.127171  -0.613392</span><br><span class="line">  0.617481   0.170019 -0.0402539</span><br><span class="line"> -0.299417   0.791925    0.64568</span><br><span class="line">-0.181799</span><br><span class="line"> -9.97497   6.17481  -2.99417</span><br><span class="line">  1.27171   1.70019   7.91925</span><br><span class="line"> -6.13392 -0.402539    6.4568</span><br><span class="line">-0.271556    0.7412  -1.03501</span><br><span class="line">  1.08862   1.58676  -1.44134</span><br><span class="line">-0.190108  0.803059  0.475647</span><br><span class="line">-0.521644</span><br><span class="line">Eigen values = 0.145004</span><br><span class="line">   1.136</span><br><span class="line"> 1.65193</span><br><span class="line">Eigen vectors =  0.415633 0.0900561 -0.905063</span><br><span class="line"> 0.906947 0.0339438  0.419875</span><br><span class="line">0.0685336 -0.995358 -0.067568</span><br><span class="line">time use <span class="keyword">in</span> normal inverse is 2ms</span><br><span class="line">time use <span class="keyword">in</span> normal inverse is 2ms</span><br><span class="line"></span><br><span class="line">进程已结束,退出代码0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++基础学习一</title>
    <url>/2022/07/29/C-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a>C++基础入门</h1><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello C++&quot;</span> &lt;&lt; endl;    <span class="comment">//输出“hello c++”</span></span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">hello C++</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/codebowl/article/details/118052278">using namespace std的作用</a></p>
<p><strong>输出中文乱码改编码格式为<code>GBK</code></strong></p>
<h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><ul>
<li><h1 id="define-宏常量：-define-常量名-常量值"><a href="#define-宏常量：-define-常量名-常量值" class="headerlink" title="define 宏常量：#define 常量名 常量值"></a>define 宏常量：<strong>#define 常量名 常量值</strong></h1></li>
</ul>
<p>通常在文件上方定义，表示一个常量</p>
<ul>
<li>const修饰的变量：<strong>const 数据类型 常量名 = 常量值</strong></li>
</ul>
<p>通常在变量定义前加关键字const 修饰变量为常量 不可修改s</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DAY 7</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> month = <span class="number">12</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一周有&quot;</span> &lt;&lt; DAY &lt;&lt;<span class="string">&quot;天&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一年有&quot;</span> &lt;&lt; month &lt;&lt;<span class="string">&quot;月&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">一周有7天</span></span><br><span class="line"><span class="comment">一年有12月</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><div class="table-container">
<table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
<th>取值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>short(短整型)</td>
<td>2字节</td>
<td>(-2^15 ~ 2^15-1)</td>
</tr>
<tr>
<td>int(整型)</td>
<td>4字节</td>
<td>(-2^31 ~ 2^31-1)</td>
</tr>
<tr>
<td>long(长整形)</td>
<td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td>
<td>(-2^31 ~ 2^31-1)</td>
</tr>
<tr>
<td>long long(长长整形)</td>
<td>8字节</td>
<td>(-2^63 ~ 2^63-1)</td>
</tr>
</tbody>
</table>
</div>
<h3 id="sizeof关键字"><a href="#sizeof关键字" class="headerlink" title="sizeof关键字"></a><code>sizeof</code>关键字</h3><p><strong>作用</strong>：利用sizeof关键字可以统计数据类型所占内存大小</p>
<p><strong>语法</strong>： <code>sizeof( 数据类型 / 变量)</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">short</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">long</span> c=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> d = <span class="number">6</span>;</span><br><span class="line">    cout &lt;&lt; <span class="built_in"><span class="keyword">sizeof</span></span>(a)&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(b)&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(c)&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(d)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2448</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="实型（浮点型）"><a href="#实型（浮点型）" class="headerlink" title="实型（浮点型）"></a>实型（浮点型）</h3><div class="table-container">
<table>
<thead>
<tr>
<th><strong>数据类型</strong></th>
<th><strong>占用空间</strong></th>
<th><strong>有效数字范围</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>float</td>
<td>4字节</td>
<td>7位有效数字</td>
</tr>
<tr>
<td>double</td>
<td>8字节</td>
<td>15～16位有效数字</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> pi=<span class="number">3.14f</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;pi=&quot;</span>&lt;&lt;pi&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;float=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">float</span>)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;double=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">double</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//科学计数法</span></span><br><span class="line">    <span class="keyword">float</span> f=<span class="number">3e2</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;f=&quot;</span>&lt;&lt;f&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">pi=3.14</span></span><br><span class="line"><span class="comment">float=4</span></span><br><span class="line"><span class="comment">double=8</span></span><br><span class="line"><span class="comment">f=300</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch=<span class="string">&#x27;a&#x27;</span>; <span class="comment">//单引号</span></span><br><span class="line"><span class="comment">//字符型</span></span><br><span class="line">cout&lt;&lt;ch&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span>)&lt;&lt;endl; <span class="comment">//char类型大小</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;a的ASCII码值&quot;</span>&lt;&lt;(<span class="keyword">int</span>)ch&lt;&lt;endl; <span class="comment">//ASCII码值</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;A的ASCII码值&quot;</span>&lt;&lt;(<span class="keyword">int</span>)<span class="string">&#x27;A&#x27;</span>&lt;&lt;endl; <span class="comment">//ASCII码值</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">a的ASCII码值97</span></span><br><span class="line"><span class="comment">A的ASCII码值65</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><div class="table-container">
<table>
<thead>
<tr>
<th><strong>转义字符</strong></th>
<th><strong>含义</strong></th>
<th><strong>ASCII</strong>码值（十进制）</th>
</tr>
</thead>
<tbody>
<tr>
<td>\a</td>
<td>警报</td>
<td>007</td>
</tr>
<tr>
<td>\b</td>
<td>退格(BS) ，将当前位置移到前一列</td>
<td>008</td>
</tr>
<tr>
<td>\f</td>
<td>换页(FF)，将当前位置移到下页开头</td>
<td>012</td>
</tr>
<tr>
<td><strong>\n</strong></td>
<td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td>
<td><strong>010</strong></td>
</tr>
<tr>
<td>\r</td>
<td>回车(CR) ，将当前位置移到本行开头</td>
<td>013</td>
</tr>
<tr>
<td><strong>\t</strong></td>
<td><strong>水平制表(HT) （跳到下一个TAB位置）</strong></td>
<td><strong>009</strong></td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表(VT)</td>
<td>011</td>
</tr>
<tr>
<td><strong>\\</strong></td>
<td><strong>代表一个反斜线字符””</strong></td>
<td><strong>092</strong></td>
</tr>
<tr>
<td>’</td>
<td>代表一个单引号（撇号）字符</td>
<td>039</td>
</tr>
<tr>
<td>“</td>
<td>代表一个双引号字符</td>
<td>034</td>
</tr>
<tr>
<td>?</td>
<td>代表一个问号</td>
<td>063</td>
</tr>
<tr>
<td>\0</td>
<td>数字0</td>
<td>000</td>
</tr>
<tr>
<td>\ddd</td>
<td>8进制转义字符，d范围0~7</td>
<td>3位8进制</td>
</tr>
<tr>
<td>\xhh</td>
<td>16进制转义字符，h范围09，af，A~F</td>
<td>3位16进制</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;Hello C++\n&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="字符串型"><a href="#字符串型" class="headerlink" title="字符串型"></a>字符串型</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span> <span class="comment">//使用C++风格字符串，包含该头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//C风格字符串</span></span><br><span class="line">    <span class="keyword">char</span> str1[]=<span class="string">&quot;Hello C++1&quot;</span>;</span><br><span class="line">    <span class="comment">//C++风格字符串</span></span><br><span class="line">    string str2=<span class="string">&quot;Hello C++2&quot;</span>;</span><br><span class="line">    cout&lt;&lt;str1&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;str2&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><ul>
<li>true  ——-真 1</li>
<li>false ——-假 0</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> <span class="keyword">flag_t</span>= <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">bool</span> flag_f= <span class="literal">false</span>;</span><br><span class="line">cout&lt;&lt;<span class="keyword">flag_t</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;flag_f&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">bool</span>)&lt;&lt;endl;<span class="comment">//1个字节</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p><code>cin&gt;&gt;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入整型变量：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;a;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> b;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入浮点型变量：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;b;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入字符型变量：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;c;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;c=&quot;</span>&lt;&lt;c&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    string str;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入字符串型变量：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;str;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;str=&quot;</span>&lt;&lt;str&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> flag;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入布尔型变量：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;flag; <span class="comment">//非0即真</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;flag=&quot;</span>&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输入整型变量：</span></span><br><span class="line"><span class="comment">15</span></span><br><span class="line"><span class="comment">a=15</span></span><br><span class="line"><span class="comment">输入浮点型变量：</span></span><br><span class="line"><span class="comment">3.14</span></span><br><span class="line"><span class="comment">b=3.14</span></span><br><span class="line"><span class="comment">输入字符型变量：</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">c=a</span></span><br><span class="line"><span class="comment">输入字符串型变量：</span></span><br><span class="line"><span class="comment">c++</span></span><br><span class="line"><span class="comment">str=c++</span></span><br><span class="line"><span class="comment">输入布尔型变量：</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">flag=1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">进程已结束,退出代码0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>,b=<span class="number">3</span>;</span><br><span class="line">    <span class="comment">//加减乘除</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a+b=&quot;</span>&lt;&lt;a+b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a-b=&quot;</span>&lt;&lt;a-b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a*b=&quot;</span>&lt;&lt;a*b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a/b=&quot;</span>&lt;&lt;a/b&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//取模运算</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a%b=&quot;</span>&lt;&lt;a%b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a+b=13</span></span><br><span class="line"><span class="comment">a-b=7</span></span><br><span class="line"><span class="comment">a*b=30</span></span><br><span class="line"><span class="comment">a/b=3</span></span><br><span class="line"><span class="comment">a%b=1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><strong>两数相除得实际结果</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> c = <span class="number">180</span> / <span class="number">100.f</span>;</span><br><span class="line">cout&lt;&lt;c&lt;&lt;endl;</span><br><span class="line"><span class="comment">//******************</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">180</span>,b = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">float</span> c = <span class="number">0</span>;</span><br><span class="line">c = (<span class="keyword">float</span>)a / b;</span><br><span class="line">cout&lt;&lt;c&lt;&lt;endl;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.8</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><strong>递增递减</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//前置递增，先让变量+1，然后进行表达式运算</span></span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>,b;</span><br><span class="line">    b=++a*<span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//后置递增，先进行表达式运算，然后让变量+1</span></span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">10</span>,d;</span><br><span class="line">    d=c++*<span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;c=&quot;</span>&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;d=&quot;</span>&lt;&lt;d&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//前置递减，先让变量-1，然后进行表达式运算</span></span><br><span class="line">    <span class="keyword">int</span> e=<span class="number">10</span>,f;</span><br><span class="line">    f=--e*<span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;e=&quot;</span>&lt;&lt;e&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;f=&quot;</span>&lt;&lt;f&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//后置递减，先进行表达式运算，然后让变量-1</span></span><br><span class="line">    <span class="keyword">int</span> g=<span class="number">10</span>,h;</span><br><span class="line">    h=g--*<span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;g=&quot;</span>&lt;&lt;g&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;h=&quot;</span>&lt;&lt;h&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=11</span></span><br><span class="line"><span class="comment">b=110</span></span><br><span class="line"><span class="comment">c=11</span></span><br><span class="line"><span class="comment">d=100</span></span><br><span class="line"><span class="comment">e=9</span></span><br><span class="line"><span class="comment">f=90</span></span><br><span class="line"><span class="comment">g=9</span></span><br><span class="line"><span class="comment">h=100</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    a+=<span class="number">2</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a+=2=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    a-=<span class="number">1</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a-=1=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    a*=<span class="number">3</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a*=3=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    a/=<span class="number">5</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a/=5=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">a+=2=12</span></span><br><span class="line"><span class="comment">a-=1=11</span></span><br><span class="line"><span class="comment">a*=3=33</span></span><br><span class="line"><span class="comment">a/=5=6</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><blockquote>
<p>真为1</p>
<p>假为0</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>,b=<span class="number">5</span>;</span><br><span class="line">    cout&lt;&lt;(a==b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a!=b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a&gt;b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a&lt;b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a&gt;=b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a&lt;=b)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"><strong>运算符</strong></th>
<th style="text-align:center"><strong>术语</strong></th>
<th style="text-align:center"><strong>示例</strong></th>
<th style="text-align:center"><strong>结果</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">!</td>
<td style="text-align:center">非</td>
<td style="text-align:center">!a</td>
<td style="text-align:center">如果a为假，则!a为真； 如果a为真，则!a为假。</td>
</tr>
<tr>
<td style="text-align:center">&amp;&amp;</td>
<td style="text-align:center">与</td>
<td style="text-align:center">a &amp;&amp; b</td>
<td style="text-align:center">如果a和b都为真，则结果为真，否则为假。</td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:center">\</td>
<td style="text-align:center"></td>
<td style="text-align:center">或</td>
<td>a \</td>
<td>\</td>
<td>b</td>
<td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td>
</tr>
</tbody>
</table>
</div>
<h2 id="程序流程结构"><a href="#程序流程结构" class="headerlink" title="程序流程结构"></a>程序流程结构</h2><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件语句)</span><br><span class="line">&#123;</span><br><span class="line">	执行语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	执行语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-----------------------------</span></span><br><span class="line"><span class="keyword">if</span>(条件语句)</span><br><span class="line">&#123;</span><br><span class="line">	执行语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(条件语句)</span><br><span class="line">&#123;</span><br><span class="line">	执行语句</span><br><span class="line">&#125;</span><br><span class="line">....</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	执行语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-----------------------------</span></span><br><span class="line"><span class="comment">//嵌套if语句</span></span><br><span class="line"><span class="keyword">if</span>(条件语句)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(嵌套语句)</span><br><span class="line">    &#123;</span><br><span class="line">        执行语句</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p><strong>eg:三个数字比较大小并排序</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1,num2,num3,t;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Input num1:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;num1;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Input num2:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;num2;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Input num3:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;num3;</span><br><span class="line">    <span class="keyword">if</span>(num1&gt;num2)</span><br><span class="line">    &#123;</span><br><span class="line">        t=num1;num1=num2;num2=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num1&gt;num3)</span><br><span class="line">    &#123;</span><br><span class="line">        t=num1;num1=num3;num3=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num2&gt;num3)</span><br><span class="line">    &#123;</span><br><span class="line">        t=num2;num2=num3;num3=t;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;num1&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;num2&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;num3&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Input num1:</span></span><br><span class="line"><span class="comment">15</span></span><br><span class="line"><span class="comment">Input num2:</span></span><br><span class="line"><span class="comment">11</span></span><br><span class="line"><span class="comment">Input num3:</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">6 11 15</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a><strong>三目运算符</strong></h4><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p>
<p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p>
<p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p>
<p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>,b=<span class="number">15</span>,c;</span><br><span class="line">c=(a&gt;b?a:b);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;c=&quot;</span>&lt;&lt;c&lt;&lt;endl;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">c=15</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in"><span class="keyword">switch</span></span>(表达式)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">case</span> 结果<span class="number">1</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> 结果<span class="number">2</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line">	......</span><br><span class="line">	<span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">while</span>(a&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">        a--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>猜数字</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ctime&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//添加随机数种子 利用当前系统时间生成随机数，防止每次随机数都一样</span></span><br><span class="line">    <span class="built_in">srand</span>((<span class="keyword">unsigned</span> <span class="keyword">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> num=<span class="built_in">rand</span>()%<span class="number">100</span>+<span class="number">1</span>; <span class="comment">//生成1-100之间随机数</span></span><br><span class="line">    <span class="keyword">int</span> ans,t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------猜数字游戏开始------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入一个1-100之间的整数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;ans;</span><br><span class="line">    <span class="keyword">while</span>(ans!=num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="literal">true</span>;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;机会已用完,猜测失败!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;正确数字为&quot;</span>&lt;&lt;num&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;num)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;猜大了!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;猜小了!!!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;还有&quot;</span>&lt;&lt;(<span class="number">5</span>-t)&lt;&lt;<span class="string">&quot;次机会！&quot;</span>&lt;&lt;endl;</span><br><span class="line">        t++;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;继续输入1-100之间的整数&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;------恭喜你猜中了!!!------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*******成功案例*******</span></span><br><span class="line"><span class="comment">------猜数字游戏开始------</span></span><br><span class="line"><span class="comment">请输入一个1-100之间的整数</span></span><br><span class="line"><span class="comment">50</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有5次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">75</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有4次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">80</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有3次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">90</span></span><br><span class="line"><span class="comment">猜大了!!!</span></span><br><span class="line"><span class="comment">还有2次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">85</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有1次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">88</span></span><br><span class="line"><span class="comment">------恭喜你猜中了!!!------</span></span><br><span class="line"><span class="comment">请按任意键继续. . .</span></span><br><span class="line"><span class="comment">**********************/</span></span><br><span class="line"><span class="comment">/*******失败案例*******</span></span><br><span class="line"><span class="comment">------猜数字游戏开始------</span></span><br><span class="line"><span class="comment">请输入一个1-100之间的整数</span></span><br><span class="line"><span class="comment">50</span></span><br><span class="line"><span class="comment">猜大了!!!</span></span><br><span class="line"><span class="comment">还有5次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">25</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有4次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">30</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有3次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">36</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有2次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">34</span></span><br><span class="line"><span class="comment">猜小了!!!</span></span><br><span class="line"><span class="comment">还有1次机会！</span></span><br><span class="line"><span class="comment">继续输入1-100之间的整数</span></span><br><span class="line"><span class="comment">40</span></span><br><span class="line"><span class="comment">机会已用完,猜测失败!!!</span></span><br><span class="line"><span class="comment">正确数字为43</span></span><br><span class="line"><span class="comment">请按任意键继续. . .</span></span><br><span class="line"><span class="comment">**********************/</span></span><br></pre></td></tr></table></figure>
<h4 id="do…-while循环语句"><a href="#do…-while循环语句" class="headerlink" title="do….while循环语句"></a>do….while循环语句</h4><p>​    <strong>水仙花数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">100</span>,a,b,c;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        a=num%<span class="number">10</span>; <span class="comment">//个位</span></span><br><span class="line">        b=num%<span class="number">100</span>/<span class="number">10</span>; <span class="comment">//十位</span></span><br><span class="line">        c=num/<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(a*a*a+b*b*b+c*c*c==num)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;<span class="string">&quot;^3&quot;</span>&lt;&lt;<span class="string">&quot;+&quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot;^3&quot;</span>&lt;&lt;<span class="string">&quot;+&quot;</span>&lt;&lt;c&lt;&lt;<span class="string">&quot;^3&quot;</span>&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;num&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(num&lt;<span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3^3+5^3+1^3=153</span></span><br><span class="line"><span class="comment">0^3+7^3+3^3=370</span></span><br><span class="line"><span class="comment">1^3+7^3+3^3=371</span></span><br><span class="line"><span class="comment">7^3+0^3+4^3=407</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h4><p><strong>敲桌子</strong></p>
<p>案例描述:从1开始数到数字100，如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们敲桌子一下，最后打印输出敲桌子总数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">7</span>||i/<span class="number">10</span>==<span class="number">7</span>||i%<span class="number">7</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            t++;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;共&quot;</span>&lt;&lt;t&lt;&lt;<span class="string">&quot;次敲桌子&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">共30次敲桌子</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><strong>for循环的嵌套</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;* &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* * * * * *</span></span><br><span class="line"><span class="comment">* * * * * *</span></span><br><span class="line"><span class="comment">* * * * * *</span></span><br><span class="line"><span class="comment">* * * * * *</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><strong>乘法口诀</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;j&lt;&lt;<span class="string">&quot;*&quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;i*j&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1*1=1</span></span><br><span class="line"><span class="comment">1*2=2 2*2=4</span></span><br><span class="line"><span class="comment">1*3=3 2*3=6 3*3=9</span></span><br><span class="line"><span class="comment">1*4=4 2*4=8 3*4=12 4*4=16</span></span><br><span class="line"><span class="comment">1*5=5 2*5=10 3*5=15 4*5=20 5*5=25</span></span><br><span class="line"><span class="comment">1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36</span></span><br><span class="line"><span class="comment">1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49</span></span><br><span class="line"><span class="comment">1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64</span></span><br><span class="line"><span class="comment">1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h3><h4 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h4><p><strong>作用:</strong> 用于跳出选择结构或者循环结构</p>
<p>break使用的时机：</p>
<ul>
<li>出现在switch条件语句中，作用是终止case并跳出switch</li>
<li>出现在循环语句中，作用是跳出当前的循环语句</li>
<li>出现在嵌套循环中，跳出最近的内层循环语句</li>
</ul>
<h4 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h4><p><strong>作用</strong>：在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p>
<h4 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h4><p><strong>作用</strong>：可以无条件跳转语句</p>
<p><strong>语法：</strong> <code>goto 标记;</code></p>
<p><strong>解释</strong>：如果标记的名称存在，执行到goto语句时，会跳转到标记 的位置</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;11111&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;22222&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">goto</span> FLAG;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;33333&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;44444&quot;</span>&lt;&lt;endl;</span><br><span class="line">    FLAG:</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;55555&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">11111</span></span><br><span class="line"><span class="comment">22222</span></span><br><span class="line"><span class="comment">55555</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++基础学习二</title>
    <url>/2022/07/29/C-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%BA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//数据类型 数组名[数组长度]</span></span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">5</span>];<span class="keyword">int</span> i;</span><br><span class="line">    arr[<span class="number">0</span>]=<span class="number">10</span>; arr[<span class="number">1</span>]=<span class="number">20</span>; arr[<span class="number">2</span>]=<span class="number">30</span>; arr[<span class="number">3</span>]=<span class="number">40</span>; arr[<span class="number">4</span>]=<span class="number">50</span>;</span><br><span class="line">    cout&lt;&lt;arr[<span class="number">0</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;arr[<span class="number">1</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;arr[<span class="number">2</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;arr[<span class="number">3</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;arr[<span class="number">4</span>]&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//数据类型 数组名[数组长度]=&#123;值1，值2....&#125;</span></span><br><span class="line">    <span class="keyword">int</span> arr1[<span class="number">5</span>]=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) &#123;</span><br><span class="line">        cout &lt;&lt; arr1[i] &lt;&lt; endl;  <span class="comment">//如果初始化数据未全部赋值，会用0填补</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    数据类型 数组名[]=&#123;值1，值2，值3.....&#125;</span></span><br><span class="line">     <span class="keyword">int</span> arr2[]=&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">100</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) &#123;</span><br><span class="line">        cout &lt;&lt; arr2[i] &lt;&lt;<span class="string">&#x27; &#x27;</span>;  <span class="comment">//如果初始化数据未全部赋值，会用0填补</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="统计数组在内存中所占空间"><a href="#统计数组在内存中所占空间" class="headerlink" title="统计数组在内存中所占空间"></a><strong>统计数组在内存中所占空间</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;arr2所占内存为:&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(arr2)&lt;&lt;endl;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">arr2所占内存为:20</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="查看数组首地址"><a href="#查看数组首地址" class="headerlink" title="查看数组首地址"></a><strong>查看数组首地址</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;arr2数组的首地址为:&quot;</span>&lt;&lt;arr&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;arr2数组第一个元素的地址为:&quot;</span>&lt;&lt;&amp;arr[<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;arr2数组第二个元素的地址为:&quot;</span>&lt;&lt;&amp;arr[<span class="number">1</span>]&lt;&lt;endl;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">arr2数组的首地址为:0x61fe00</span></span><br><span class="line"><span class="comment">arr2数组第一个元素的地址为:0x61fe00</span></span><br><span class="line"><span class="comment">arr2数组第二个元素的地址为:0x61fe04</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="数组中找最大值"><a href="#数组中找最大值" class="headerlink" title="数组中找最大值"></a><strong>数组中找最大值</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">5</span>]=&#123;<span class="number">300</span>,<span class="number">500</span>,<span class="number">180</span>,<span class="number">400</span>,<span class="number">250</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> max=arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;最大数为&quot;</span>&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">最大数为500</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="数组逆序"><a href="#数组逆序" class="headerlink" title="数组逆序"></a><strong>数组逆序</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> length=<span class="built_in"><span class="keyword">sizeof</span></span>(arr)/<span class="built_in"><span class="keyword">sizeof</span></span>(arr[<span class="number">0</span>]),t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t=arr[i];</span><br><span class="line">        arr[i]=arr[length-i<span class="number">-1</span>];</span><br><span class="line">        arr[length-i<span class="number">-1</span>]=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1 2 3 4 5</span></span><br><span class="line"><span class="comment">5 4 3 2 1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p>
<p>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</p>
<p>针对所有的元素重复以上的步骤，除了最后一个。</p>
<p>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/bubbleSort.gif" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/bubbleSort.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[]=&#123;<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> length=<span class="built_in"><span class="keyword">sizeof</span></span>(arr)/<span class="built_in"><span class="keyword">sizeof</span></span>(arr[<span class="number">0</span>]),t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;length<span class="number">-1</span>-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                t = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;----排序后----&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3 6 1 0 5 9 7</span></span><br><span class="line"><span class="comment">----排序后----</span></span><br><span class="line"><span class="comment">0 1 3 5 6 7 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 数据类型 数组名[ 行数 ][ 列数 ] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</span></span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">2</span>][<span class="number">3</span>]=&#123;</span><br><span class="line">            &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">            &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------1------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;arr[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------2------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="comment">// 数据类型 数组名[ 行数 ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</span></span><br><span class="line">    <span class="keyword">int</span> arr1[<span class="number">2</span>][<span class="number">3</span>]=&#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;arr1[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------3------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//数据类型 数组名[ ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</span></span><br><span class="line">    <span class="keyword">int</span> arr2[][<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;arr2[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">------1------</span></span><br><span class="line"><span class="comment">1 2 3</span></span><br><span class="line"><span class="comment">4 5 6</span></span><br><span class="line"><span class="comment">------2------</span></span><br><span class="line"><span class="comment">7 8 9</span></span><br><span class="line"><span class="comment">10 11 12</span></span><br><span class="line"><span class="comment">------3------</span></span><br><span class="line"><span class="comment">1 2 3</span></span><br><span class="line"><span class="comment">7 8 9</span></span><br><span class="line"><span class="comment">10 11 12</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="二维数组名"><a href="#二维数组名" class="headerlink" title="二维数组名"></a>二维数组名</h3><ul>
<li>查看二维数组所占内存空间</li>
<li>获取二维数组首地址</li>
</ul>
<p>统计每一行数字之和</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">3</span>][<span class="number">3</span>]=&#123;</span><br><span class="line">            &#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">            &#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">            &#123;<span class="number">80</span>,<span class="number">90</span>,<span class="number">85</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">int</span> sum[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum[i]+=score[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">        cout&lt;&lt;sum[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">300 240 255</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><strong>作用：将一段经常使用的代码封装起来，减少重复代码</strong></p>
<p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p>
<h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><p>函数的定义一般主要有5个步骤：</p>
<p>1、返回值类型</p>
<p>2、函数名</p>
<p>3、参数表列</p>
<p>4、函数体语句</p>
<p>5、return 表达式</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line">       函数体语句</span><br><span class="line">       <span class="keyword">return</span> 表达式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">3</span>,b=<span class="number">4</span>,sum;</span><br><span class="line">    sum= <span class="built_in">add</span>(a,b);</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><ul>
<li>所谓值传递，就是函数调用时实参将数值传入给形参</li>
<li>值传递时，如果形参发生改变，并不会影响实参</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;交换前：&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 10</span></span><br><span class="line">    <span class="comment">// 20</span></span><br><span class="line">	<span class="keyword">int</span> temp = num1;</span><br><span class="line">	num1 = num2;</span><br><span class="line">	num2 = temp;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;交换后：&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 20</span></span><br><span class="line">    <span class="comment">// 10</span></span><br><span class="line">	<span class="comment">//return ; 当函数声明void时候，不需要返回值，可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="built_in">swap</span>(a, b);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;main中的 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;main中的 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 10</span></span><br><span class="line">    <span class="comment">// 20</span></span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>总结： 值传递时，形参是修饰不了实参的</strong></p>
<h3 id="函数的常见样式"><a href="#函数的常见样式" class="headerlink" title="函数的常见样式"></a>函数的常见样式</h3><p>常见的函数样式有4种</p>
<ul>
<li>无参无返</li>
<li>有参无返</li>
<li>无参有返</li>
<li>有参有返</li>
</ul>
<h3 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h3><p><strong>作用：</strong> 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p>
<ul>
<li><strong>函数的声明可以多次，但是函数的定义只能有一次</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    .....</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="函数的分文件编写"><a href="#函数的分文件编写" class="headerlink" title="函数的分文件编写"></a>函数的分文件编写</h3><p>作用：<strong>让代码结构更加清晰</strong></p>
<p>函数分文件编写一般有4个步骤</p>
<ol>
<li>创建后缀名为.h的头文件</li>
<li>创建后缀名为.cpp的源文件</li>
<li>在头文件中写函数的声明</li>
<li>在源文件中写函数的定义</li>
</ol>
<p><code>add.h</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEMO01_ADD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEMO01_ADD_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//DEMO01_ADD_H</span></span></span><br></pre></td></tr></table></figure>
<p><code>add.cpp</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;add.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.cpp</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;add.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">3</span>,b=<span class="number">4</span>,sum;</span><br><span class="line">    sum= <span class="built_in">add</span>(a,b);</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><strong>指针的作用：</strong> 可以通过指针间接访问内存</p>
<ul>
<li>内存编号是从0开始记录的，一般用十六进制数字表示</li>
<li>可以利用指针变量保存地址</li>
</ul>
<h3 id="指针变量的定义和使用"><a href="#指针变量的定义和使用" class="headerlink" title="指针变量的定义和使用"></a>指针变量的定义和使用</h3><p>指针变量定义语法： <code>数据类型 * 变量名；</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> *p;</span><br><span class="line">    p=&amp;a;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;&amp;a=&quot;</span>&lt;&lt;&amp;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p=&quot;</span>&lt;&lt;p&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;*p=&quot;</span>&lt;&lt;*p&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&amp;a=0x61fe14</span></span><br><span class="line"><span class="comment">p=0x61fe14</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">*p=10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>指针变量和普通变量的区别</p>
<ul>
<li>普通变量存放的是数据,指针变量存放的是地址</li>
<li>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用</li>
</ul>
<blockquote>
<p>总结1： 我们可以通过 &amp; 符号 获取变量的地址</p>
<p>总结2：利用指针可以记录地址</p>
<p>总结3：对指针变量解引用，可以操作指针指向的内存</p>
</blockquote>
<h3 id="指针内存空间"><a href="#指针内存空间" class="headerlink" title="指针内存空间"></a>指针内存空间</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;sizeof(int *)=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span> *)&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;sizeof(float *)=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">float</span> *)&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;sizeof(double *)=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">double</span> *)&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;sizeof(char *)=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span> *)&lt;&lt;endl;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sizeof(int *)=8</span></span><br><span class="line"><span class="comment">sizeof(float *)=8</span></span><br><span class="line"><span class="comment">sizeof(double *)=8</span></span><br><span class="line"><span class="comment">sizeof(char *)=8</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<ul>
<li>所有指针类型在32位操作系统下是4个字节</li>
<li>所有指针类型在64位操作系统下是8个字节</li>
</ul>
<h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间</p>
<p><strong>用途</strong>：初始化指针变量</p>
<p><strong>注意</strong>：空指针指向的内存是不可以访问的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="comment">//指针变量p指向内存地址编号为0的空间</span></span><br><span class="line">        <span class="comment">//用于指针初始化</span></span><br><span class="line">        <span class="keyword">int</span> * p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//访问空指针报错</span></span><br><span class="line">        <span class="comment">//内存编号0 ~255为系统占用内存，不允许用户访问</span></span><br><span class="line">        cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>野指针</strong>：指针变量指向非法的内存空间</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//指针变量p指向内存地址编号为0x1100的空间</span></span><br><span class="line">	<span class="keyword">int</span> * p = (<span class="keyword">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line">	<span class="comment">//访问野指针报错 </span></span><br><span class="line">	cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>总结：空指针和野指针都不是我们申请的空间，因此不要访问。</strong></p>
<h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><p>const修饰指针有三种情况</p>
<ul>
<li>const修饰指针 — 常量指针</li>
<li>const修饰常量 — 指针常量</li>
<li>const既修饰指针，又修饰常量</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">	<span class="comment">//const修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> * p1 = &amp;a; </span><br><span class="line">	p1 = &amp;b; <span class="comment">//正确</span></span><br><span class="line">	<span class="comment">//*p1 = 100;  报错</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//const修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class="line">	<span class="keyword">int</span> * <span class="keyword">const</span> p2 = &amp;a;</span><br><span class="line">	<span class="comment">//p2 = &amp;b; //错误</span></span><br><span class="line">	*p2 = <span class="number">100</span>; <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p3 = &amp;a;</span><br><span class="line">	<span class="comment">//p3 = &amp;b; //错误</span></span><br><span class="line">	<span class="comment">//*p3 = 100; //错误</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="数组和指针"><a href="#数组和指针" class="headerlink" title="数组和指针"></a>数组和指针</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">6</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *p=arr;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;第一个元素为:&quot;</span>&lt;&lt;*p&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;第二个元素为:&quot;</span>&lt;&lt;*++p&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">int</span> *n=arr;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;*n+i&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">第一个元素为:1</span></span><br><span class="line"><span class="comment">第二个元素为:2</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="指针与函数"><a href="#指针与函数" class="headerlink" title="指针与函数"></a>指针与函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = t;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; *a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b=&quot;</span> &lt;&lt; *b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">swap</span>(&amp;a, &amp;b);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b=&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=3</span></span><br><span class="line"><span class="comment">b=7</span></span><br><span class="line"><span class="comment">a=3</span></span><br><span class="line"><span class="comment">b=7</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="指针与函数和数组"><a href="#指针与函数和数组" class="headerlink" title="指针与函数和数组"></a>指针与函数和数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_arr</span><span class="params">(<span class="keyword">int</span> *p, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, t;</span><br><span class="line">    <span class="keyword">int</span> a=*p;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;length<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;length<span class="number">-1</span>-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p[j] &gt; p[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                t = p[j];</span><br><span class="line">                p[j] = p[j+<span class="number">1</span>];</span><br><span class="line">                p[j+<span class="number">1</span>] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">10</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="built_in"><span class="keyword">sizeof</span></span>(arr)/<span class="built_in"><span class="keyword">sizeof</span></span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">sort_arr</span>(arr, l);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;l<span class="number">-1</span>; i++)</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0 1 2 3 3 4 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="结构体定义"><a href="#结构体定义" class="headerlink" title="结构体定义"></a>结构体定义</h3><p><code>struct 结构体名 &#123;结构体类型&#125;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//创建学生数据类型</span></span><br><span class="line"><span class="comment">//自定义数据类型，一些类型集合组成的一个类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125; s3;</span><br><span class="line"><span class="comment">//定义类型方式</span></span><br><span class="line"><span class="comment">//struct Student s1;</span></span><br><span class="line"><span class="comment">//struct Student s2=&#123;.....&#125;</span></span><br><span class="line"><span class="comment">//struct Student &#123;.....&#125;s3;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//struct关键字可以省略</span></span><br><span class="line">    Student s1;</span><br><span class="line">    <span class="comment">//struct Student s1;</span></span><br><span class="line">    s1.name = <span class="string">&quot;大明&quot;</span>;</span><br><span class="line">    s1.age = <span class="number">18</span>;</span><br><span class="line">    s1.score = <span class="number">90</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;s1.name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;s1.age&lt;&lt;<span class="string">&quot; 分数:&quot;</span>&lt;&lt;s1.score&lt;&lt; endl;</span><br><span class="line">    s3.name = <span class="string">&quot;小丽&quot;</span>;</span><br><span class="line">    s3.age = <span class="number">20</span>;</span><br><span class="line">    s3.score = <span class="number">88</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;s3.name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;s3.age&lt;&lt;<span class="string">&quot; 分数:&quot;</span>&lt;&lt;s3.score&lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">姓名:大明 年龄:18 分数:90</span></span><br><span class="line"><span class="comment">姓名:小丽 年龄:20 分数:88</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><p>作用：将自定义的结构体放入到数组中方便维护</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">People</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">float</span> weight;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    People people_demo[<span class="number">3</span>]=</span><br><span class="line">            &#123;</span><br><span class="line">            &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">18</span>, <span class="number">57</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;小丽&quot;</span>, <span class="number">19</span>, <span class="number">48.2</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;小花&quot;</span>, <span class="number">17</span>, <span class="number">45.6</span>&#125;</span><br><span class="line">            &#125;;</span><br><span class="line">    people_demo[<span class="number">2</span>].name=<span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    people_demo[<span class="number">0</span>].age = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;people_demo[i].name&lt;&lt;<span class="string">&quot; age:&quot;</span>&lt;&lt;people_demo[i].age&lt;&lt;<span class="string">&quot; weight:&quot;</span>&lt;&lt;people_demo[i].weight&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">name:张三 age:19 weight:57</span></span><br><span class="line"><span class="comment">name:小丽 age:19 weight:48.2</span></span><br><span class="line"><span class="comment">name:张三 age:17 weight:45.6</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">People</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">float</span> weight;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    People s = &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">18</span>, <span class="number">58.3</span>&#125;;</span><br><span class="line">    People *p=&amp;s;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;p-&gt;name&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;age:&quot;</span>&lt;&lt;p-&gt;age&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;weight:&quot;</span>&lt;&lt;p-&gt;weight&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">name:张三</span></span><br><span class="line"><span class="comment">age:18</span></span><br><span class="line"><span class="comment">weight:58.3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="结构体嵌套结构体"><a href="#结构体嵌套结构体" class="headerlink" title="结构体嵌套结构体"></a>结构体嵌套结构体</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">float</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Teacher</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Teacher t;</span><br><span class="line">    t.name = <span class="string">&quot;王老师&quot;</span>;</span><br><span class="line">    t.age = <span class="number">56</span>;</span><br><span class="line">    t.stu.name = <span class="string">&quot;小王&quot;</span>;</span><br><span class="line">    t.stu.age = <span class="number">18</span>;</span><br><span class="line">    t.stu.score = <span class="number">90.5</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Teacher name:&quot;</span>&lt;&lt;t.name&lt;&lt;<span class="string">&quot; Teacher age:&quot;</span>&lt;&lt;</span><br><span class="line">    t.age&lt;&lt;<span class="string">&quot; stu name:&quot;</span>&lt;&lt;t.stu.name&lt;&lt;<span class="string">&quot; stu age:&quot;</span></span><br><span class="line">    &lt;&lt;t.stu.age&lt;&lt;<span class="string">&quot; stu score:&quot;</span>&lt;&lt;t.stu.score&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Teacher name:王老师 Teacher age:56 stu name:小王 stu age:18 stu score:90.5</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="结构体做函数参数"><a href="#结构体做函数参数" class="headerlink" title="结构体做函数参数"></a>结构体做函数参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">float</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printfstu1</span><span class="params">(Student stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    stu.age = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------子函数1-------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;stu.name&lt;&lt;<span class="string">&quot; age:&quot;</span>&lt;&lt;stu.age&lt;&lt;<span class="string">&quot; score:&quot;</span>&lt;&lt;stu.score&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printfstu2</span><span class="params">(Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;age = <span class="number">30</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------子函数2-------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;p-&gt;name&lt;&lt;<span class="string">&quot; age:&quot;</span>&lt;&lt;p-&gt;age&lt;&lt;<span class="string">&quot; score:&quot;</span>&lt;&lt;p-&gt;score&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student stu;</span><br><span class="line">    stu.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    stu.age = <span class="number">18</span>;</span><br><span class="line">    stu.score = <span class="number">90.5</span>;</span><br><span class="line">    <span class="built_in">printfstu1</span>(stu);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------主函数1后-------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;stu.name&lt;&lt;<span class="string">&quot; age:&quot;</span>&lt;&lt;stu.age&lt;&lt;<span class="string">&quot; score:&quot;</span>&lt;&lt;stu.score&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">printfstu2</span>(&amp;stu);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------主函数2后-------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;stu.name&lt;&lt;<span class="string">&quot; age:&quot;</span>&lt;&lt;stu.age&lt;&lt;<span class="string">&quot; score:&quot;</span>&lt;&lt;stu.score&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">------子函数1-------</span></span><br><span class="line"><span class="comment">name:张三 age:20 score:90.5</span></span><br><span class="line"><span class="comment">------主函数1后-------</span></span><br><span class="line"><span class="comment">name:张三 age:18 score:90.5</span></span><br><span class="line"><span class="comment">------子函数2-------</span></span><br><span class="line"><span class="comment">name:张三 age:30 score:90.5</span></span><br><span class="line"><span class="comment">------主函数2后-------</span></span><br><span class="line"><span class="comment">name:张三 age:30 score:90.5</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="结构体案例1"><a href="#结构体案例1" class="headerlink" title="结构体案例1"></a>结构体案例1</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Teacher</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    Student Array[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">allowStuTea</span><span class="params">(Teacher array[], <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string nameSeed=<span class="string">&quot;ABCDEFGHIKLMNOP&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">3</span>][<span class="number">5</span>]=&#123;&#123;<span class="number">56</span>, <span class="number">93</span>, <span class="number">86</span>, <span class="number">76</span>, <span class="number">40</span>&#125;,</span><br><span class="line">                     &#123;<span class="number">66</span>, <span class="number">80</span>, <span class="number">33</span>, <span class="number">77</span>, <span class="number">90</span>&#125;,</span><br><span class="line">                     &#123;<span class="number">96</span>, <span class="number">88</span>, <span class="number">47</span>, <span class="number">60</span>, <span class="number">70</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        array[i].name=<span class="string">&quot;teacher_&quot;</span>;</span><br><span class="line">        array[i].name += nameSeed[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            array[i].Array[j].name = <span class="string">&quot;student_&quot;</span>;</span><br><span class="line">            array[i].Array[j].name += nameSeed[i*<span class="number">5</span>+j];</span><br><span class="line">            array[i].Array[j].score = score[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Infomsg</span><span class="params">(Teacher array[], <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;老师姓名:&quot;</span>&lt;&lt;array[i].name&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;学生姓名:&quot;</span>&lt;&lt;array[i].Array[j].name&lt;&lt;<span class="string">&quot; 成绩:&quot;</span>&lt;&lt;array[i].Array[j].score&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;--------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Teacher tArray[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in"><span class="keyword">sizeof</span></span>(tArray)/<span class="built_in"><span class="keyword">sizeof</span></span>(tArray[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">allowStuTea</span>(tArray, len);</span><br><span class="line">    <span class="built_in">Infomsg</span>(tArray, len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">老师姓名:teacher_A</span></span><br><span class="line"><span class="comment">学生姓名:student_A 成绩:56</span></span><br><span class="line"><span class="comment">学生姓名:student_B 成绩:93</span></span><br><span class="line"><span class="comment">学生姓名:student_C 成绩:86</span></span><br><span class="line"><span class="comment">学生姓名:student_D 成绩:76</span></span><br><span class="line"><span class="comment">学生姓名:student_E 成绩:40</span></span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line"><span class="comment">老师姓名:teacher_B</span></span><br><span class="line"><span class="comment">学生姓名:student_F 成绩:66</span></span><br><span class="line"><span class="comment">学生姓名:student_G 成绩:80</span></span><br><span class="line"><span class="comment">学生姓名:student_H 成绩:33</span></span><br><span class="line"><span class="comment">学生姓名:student_I 成绩:77</span></span><br><span class="line"><span class="comment">学生姓名:student_K 成绩:90</span></span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line"><span class="comment">老师姓名:teacher_C</span></span><br><span class="line"><span class="comment">学生姓名:student_L 成绩:96</span></span><br><span class="line"><span class="comment">学生姓名:student_M 成绩:88</span></span><br><span class="line"><span class="comment">学生姓名:student_N 成绩:47</span></span><br><span class="line"><span class="comment">学生姓名:student_O 成绩:60</span></span><br><span class="line"><span class="comment">学生姓名:student_P 成绩:70</span></span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="结构体案例2"><a href="#结构体案例2" class="headerlink" title="结构体案例2"></a>结构体案例2</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hero</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    string sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Infomsg</span><span class="params">(Hero arr[], <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortHero</span><span class="params">(Hero arr[], <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Hero heroArr[<span class="number">5</span>]=&#123;&#123;<span class="string">&quot;刘备&quot;</span>, <span class="number">30</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">                     &#123;<span class="string">&quot;关羽&quot;</span>, <span class="number">32</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">                     &#123;<span class="string">&quot;张飞&quot;</span>, <span class="number">31</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">                     &#123;<span class="string">&quot;赵云&quot;</span>, <span class="number">28</span>, <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">                     &#123;<span class="string">&quot;貂蝉&quot;</span>, <span class="number">24</span>, <span class="string">&quot;女&quot;</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> length=<span class="built_in"><span class="keyword">sizeof</span></span> (heroArr)/<span class="built_in"><span class="keyword">sizeof</span></span> (heroArr[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">Infomsg</span>(heroArr, length);</span><br><span class="line">    <span class="built_in">sortHero</span>(heroArr, length);</span><br><span class="line">    <span class="built_in">Infomsg</span>(heroArr, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Infomsg</span><span class="params">(Hero arr[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;arr[i].name&lt;&lt;<span class="string">&quot; age:&quot;</span>&lt;&lt;arr[i].age&lt;&lt;<span class="string">&quot; sex:&quot;</span>&lt;&lt;arr[i].sex&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortHero</span><span class="params">(Hero arr[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Hero temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len<span class="number">-1</span>-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j].age&gt;arr[j+<span class="number">1</span>].age)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">------------</span></span><br><span class="line"><span class="comment">name:刘备 age:30 sex:男</span></span><br><span class="line"><span class="comment">name:关羽 age:32 sex:男</span></span><br><span class="line"><span class="comment">name:张飞 age:31 sex:男</span></span><br><span class="line"><span class="comment">name:赵云 age:28 sex:男</span></span><br><span class="line"><span class="comment">name:貂蝉 age:24 sex:女</span></span><br><span class="line"><span class="comment">------------</span></span><br><span class="line"><span class="comment">name:貂蝉 age:24 sex:女</span></span><br><span class="line"><span class="comment">name:赵云 age:28 sex:男</span></span><br><span class="line"><span class="comment">name:刘备 age:30 sex:男</span></span><br><span class="line"><span class="comment">name:张飞 age:31 sex:男</span></span><br><span class="line"><span class="comment">name:关羽 age:32 sex:男</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++基础学习四</title>
    <url>/2022/10/22/C-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E5%9B%9B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-基础学习四"><a href="#C-基础学习四" class="headerlink" title="C++基础学习四"></a>C++基础学习四</h1><h2 id="文本文件"><a href="#文本文件" class="headerlink" title="文本文件"></a>文本文件</h2><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><p><strong>步骤：</strong></p>
<ul>
<li>包含头文件:<code>#include &lt;fstream&gt;</code></li>
<li>创建流对象:<code>ofstream ofs;</code></li>
<li>打开文件:<code>ofs.open(&quot;文件路径&quot;, 打开方式);</code></li>
<li>写数据:<code>ofs&lt;&lt;&quot;写入数据&quot;;</code></li>
<li>关闭文件:<code>ofs.close;</code></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">打开方式</th>
<th style="text-align:center">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ios::in</td>
<td style="text-align:center">为读文件而打开文件</td>
</tr>
<tr>
<td style="text-align:center">ios::out</td>
<td style="text-align:center">为写文件而打开文件</td>
</tr>
<tr>
<td style="text-align:center">ios::ate</td>
<td style="text-align:center">初始位置:文件尾</td>
</tr>
<tr>
<td style="text-align:center">ios::app</td>
<td style="text-align:center">追加方式写文件</td>
</tr>
<tr>
<td style="text-align:center">ios::trunc</td>
<td style="text-align:center">如果文件存在先删除，再创建</td>
</tr>
<tr>
<td style="text-align:center">ios::binary</td>
<td style="text-align:center">二进制方式</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ofstream ofs;</span><br><span class="line">    ofs.<span class="built_in">open</span>(<span class="string">&quot;D:\\C++_CLion\\Demo01\\FILE\\test.txt&quot;</span>, ios::out);</span><br><span class="line">    ofs&lt;&lt;<span class="string">&quot;姓名:张三&quot;</span>&lt;&lt;endl;</span><br><span class="line">    ofs&lt;&lt;<span class="string">&quot;年龄:18&quot;</span>&lt;&lt;endl;</span><br><span class="line">    ofs&lt;&lt;<span class="string">&quot;性别:男&quot;</span>&lt;&lt;endl;</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221022193600777.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221022193600777.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221022193600777"></p>
<h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><p><strong>步骤：</strong></p>
<ul>
<li>包含头文件:<code>#include &lt;fstream&gt;</code></li>
<li>创建流对象:<code>ofstream ifs;</code></li>
<li>打开文件:<code>ifs.open(&quot;文件路径&quot;, 打开方式);</code></li>
<li>读数据:四种方式读数据;`</li>
<li>关闭文件:<code>ifs.close;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ofstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(<span class="string">&quot;D:\\C++_CLion\\Demo01\\FILE\\test.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="comment">//    int a;</span></span><br><span class="line">    <span class="keyword">if</span>(!ifs.<span class="built_in">is_open</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件打开失败&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">1024</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//    cin&gt;&gt;a;</span></span><br><span class="line">    <span class="keyword">while</span> (ifs &gt;&gt; buf)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;buf&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    char buf[1024] = &#123;0&#125;;</span></span><br><span class="line"><span class="comment">//    string buf;</span></span><br><span class="line"><span class="comment">//    while (getline(ifs, buf))</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        cout&lt;&lt;buf&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong><em>CLion中读写文件使用绝对路径才可以，不知道是什么原因，等后续找到解决方法再更新。。。</em></strong></p>
<h2 id="职工管理系统"><a href="#职工管理系统" class="headerlink" title="职工管理系统"></a>职工管理系统</h2><h3 id="管理系统需求"><a href="#管理系统需求" class="headerlink" title="管理系统需求"></a>管理系统需求</h3><p>公司中职工分为三类:普通员工、经理、老板，显示信息时，需要显示职工编号、职工姓名、职工岗位、以及职责</p>
<ul>
<li>普通员工职责:完成经理交给的任务</li>
<li>经理职责:完成老板交给的任务，并下发任务给员工</li>
<li>老板职责:管理公司所有事务</li>
</ul>
<p><strong>管理系统中需要实现的功能如下:</strong></p>
<ul>
<li>退出管理程序:退出当前管理系统</li>
<li>增加职工信息:实现批量添加职工功能，将信息录入到文件中，职工信息为:职工编号、姓名、部门编号</li>
<li>显示职工信息:显示公司内部所有职工的信息</li>
<li>删除离职职工:按照编号删除指定的职工·修改职工信息:按照编号修改职工个人信息</li>
<li>查找职工信息:按照职工的编号或者职工的姓名进行查找相关的人员信息·按照编号排序:按照职工编号，进行排序，排序规则由用户指定·</li>
<li>清空所有文档:清空文件中记录的所有职工信息(清空前需要再次确认，防止误删)</li>
</ul>
<h3 id="创建管理类"><a href="#创建管理类" class="headerlink" title="创建管理类"></a>创建管理类</h3><p>创建<code>workermanager.cpp</code>和<code>workermanager.h</code>文件</p>
<p><code>workermanager.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEMO01_WORKERMANGER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEMO01_WORKERMANGER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerManager</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">WorkerManager</span>();</span><br><span class="line">    ~<span class="built_in">WorkerManager</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//DEMO01_WORKERMANGER_H</span></span></span><br></pre></td></tr></table></figure>
<p><code>workermanager.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;workermanger.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">WorkerManager::~<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="菜单功能"><a href="#菜单功能" class="headerlink" title="菜单功能"></a>菜单功能</h3><p><code>workermanager.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerManager</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">WorkerManager</span>();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Show_Menu</span><span class="params">()</span></span>;</span><br><span class="line">    ~<span class="built_in">WorkerManager</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>workermanager.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::Show_Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;************************&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;****欢迎使用职工管理系统***&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 1、增加职工信息 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 2、显示职工信息 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 3、删除离职职工 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 4、修改职工信息 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 5、查找职工信息 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 6、按照编号排序 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 7、清空管理文档 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 0、退出管理程序 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;************************&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新建<code>main_Company.cpp</code>包含<code>main</code>函数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;workermanager.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WorkerManager wm;</span><br><span class="line">    wm.<span class="built_in">Show_Menu</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="退出功能"><a href="#退出功能" class="headerlink" title="退出功能"></a>退出功能</h3><p><code>main_Company.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WorkerManager wm;</span><br><span class="line">    <span class="keyword">int</span> option = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        wm.<span class="built_in">ShowMenu</span>();</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入您的选择:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;option;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (option)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                wm.<span class="built_in">ExitSystem</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>workermanager.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::ExitSystem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;欢迎下次使用....&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="comment">//    system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="创建职工类"><a href="#创建职工类" class="headerlink" title="创建职工类"></a>创建职工类</h3><h4 id="创建父类职工"><a href="#创建父类职工" class="headerlink" title="创建父类职工"></a>创建父类职工</h4><p>用多态方法编写<code>worker.h</code>，纯虚函数编写父类，无实例化对象</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEMO01_WORKER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEMO01_WORKER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ShowInfo</span><span class="params">()</span> </span>= <span class="number">0</span>; <span class="comment">//纯虚函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m_Id;</span><br><span class="line">    string m_Name;</span><br><span class="line">    <span class="keyword">int</span> m_DeptId;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br></pre></td></tr></table></figure>
<h4 id="编写员工类"><a href="#编写员工类" class="headerlink" title="编写员工类"></a>编写员工类</h4><p><code>employee.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEMO01_EMPLOYEE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEMO01_EMPLOYEE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span>:</span><span class="keyword">public</span> Worker <span class="comment">//继承</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Employee</span>(<span class="keyword">int</span> id, string name, <span class="keyword">int</span> did);</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ShowInfo</span><span class="params">()</span></span>; <span class="comment">//子类重写虚构函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br></pre></td></tr></table></figure>
<p>·<code>employee.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;employee.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Employee::<span class="built_in">Employee</span>(<span class="keyword">int</span> id, string name, <span class="keyword">int</span> did)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Id = id;  <span class="comment">// this指针 指向被调用的成员函数 所属的对象---Worker</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_DeptId = did;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Employee::ShowInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;职工编号: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t职工姓名: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t岗位: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t岗位名称:完成经理交给的任务&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee::getDeptName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;员工&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="编写经理类"><a href="#编写经理类" class="headerlink" title="编写经理类"></a>编写经理类</h4><p><code>manager.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEMO01_MANAGER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEMO01_MANAGER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span>:</span><span class="keyword">public</span> Worker</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Manager</span>(<span class="keyword">int</span> id, string name, <span class="keyword">int</span> did);</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ShowInfo</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>manager.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;manager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Manager::<span class="built_in">Manager</span>(<span class="keyword">int</span> id, string name, <span class="keyword">int</span> did)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_DeptId = did;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manager::ShowInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;职工编号: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t职工姓名: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t岗位: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t岗位名称:完成老板交给的任务, 并发布给员工&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Manager::getDeptName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;经理&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="编写老板类"><a href="#编写老板类" class="headerlink" title="编写老板类"></a>编写老板类</h4><p><code>boss.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEMO01_BOSS_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEMO01_BOSS_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boss</span>:</span><span class="keyword">public</span> Worker</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Boss</span>(<span class="keyword">int</span> id, string name, <span class="keyword">int</span> did);</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ShowInfo</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> string <span class="title">getDeptName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>boss.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;boss.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Boss::<span class="built_in">Boss</span>(<span class="keyword">int</span> id, string name, <span class="keyword">int</span> did)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Id = id;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_DeptId = did;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Boss::ShowInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;职工编号: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t职工姓名: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t岗位: &quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;<span class="built_in">getDeptName</span>()</span><br><span class="line">    &lt;&lt;<span class="string">&quot;\t岗位名称:给经理发布任务&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Boss::getDeptName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">&quot;老板&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;boss.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Worker * worker = <span class="literal">NULL</span>;</span><br><span class="line">    worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    worker-&gt;<span class="built_in">ShowInfo</span>();</span><br><span class="line">    <span class="keyword">delete</span> worker;</span><br><span class="line">    worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    worker-&gt;<span class="built_in">ShowInfo</span>();</span><br><span class="line">    <span class="keyword">delete</span> worker;</span><br><span class="line">    worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">3</span>);</span><br><span class="line">    worker-&gt;<span class="built_in">ShowInfo</span>();</span><br><span class="line">    <span class="keyword">delete</span> worker;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//---------------结果------------------</span></span><br><span class="line">职工编号: <span class="number">1</span>	职工姓名: 张三	岗位: 员工	岗位名称:完成经理交给的任务</span><br><span class="line">职工编号: <span class="number">2</span>	职工姓名: 李四	岗位: 经理	岗位名称:完成老板交给的任务, 并发布给员工</span><br><span class="line">职工编号: <span class="number">3</span>	职工姓名: 王五	岗位: 老板	岗位名称:给经理发布任务</span><br></pre></td></tr></table></figure>
<h3 id="添加职工"><a href="#添加职工" class="headerlink" title="添加职工"></a>添加职工</h3><p>功能描述: 批星添加职工，并且保存到文件中</p>
<h4 id="功能分析"><a href="#功能分析" class="headerlink" title="功能分析"></a>功能分析</h4><p>分析:用户在批量创建时，可能会创建不同种类的职工</p>
<p>如果想将所有不同种类的员工都放入到一个数组中，可以将所有员工的指针维护到一个数组里如果想在程序中维护这个不定长度的数组，可以将</p>
<p>数组创建到堆区，并利用<code>Worker **</code>的指针维护</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221215200510436.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221215200510436.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221215200510436"></p>
<h4 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h4><p><code>workermanager.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::AddEmp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入添加员工数量&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">int</span> addNum = <span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;addNum;</span><br><span class="line">    <span class="keyword">if</span>(addNum&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//计算添加空间大小</span></span><br><span class="line">        <span class="keyword">int</span> newSize = <span class="keyword">this</span>-&gt;m_EmpNum + addNum;</span><br><span class="line">        <span class="comment">//开辟新空间</span></span><br><span class="line">        Worker ** newSpace = <span class="keyword">new</span> Worker*[newSize];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>-&gt;m_EmpNum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                newSpace[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//批量添加新数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;addNum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> id;</span><br><span class="line">            string name;</span><br><span class="line">            <span class="keyword">int</span> dSelet;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请输入第&quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&quot;个新职工编号&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin&gt;&gt;id;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请输入第&quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&quot;个新职工姓名&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin&gt;&gt;name;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请选择职工编号&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;1、普通员工&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;2、经理&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;3、老板&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin&gt;&gt;dSelet;</span><br><span class="line">            Worker * worker = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span>(dSelet)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(id, name, <span class="number">1</span>);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, <span class="number">2</span>);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(id, name, <span class="number">3</span>);<span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            newSpace[<span class="keyword">this</span>-&gt;m_EmpNum + i] = worker;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放原有的空间</span></span><br><span class="line">        <span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line">        <span class="comment">//更改新空间指向</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpArray = newSpace;</span><br><span class="line">        <span class="comment">//更新新的职工系数</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpNum = newSize;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;成功添加&quot;</span>&lt;&lt;addNum&lt;&lt;<span class="string">&quot;新职工&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;输入数据有误&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//堆区内存手动释放</span></span><br><span class="line">WorkerManager::~<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure>
<p><code>main_Company.cpp</code>主函数中添加职工函数<code>AddEmp()</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        wm.<span class="built_in">ShowMenu</span>();</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入您的选择:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;option;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (option)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                wm.<span class="built_in">ExitSystem</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                wm.<span class="built_in">AddEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"> 		......</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="文件交互-写文件"><a href="#文件交互-写文件" class="headerlink" title="文件交互-写文件"></a>文件交互-写文件</h3><p>在同目录下新建<code>EMP_FILE</code>文件夹</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FILENAME <span class="meta-string">&quot;D:\\C++_CLion\\Demo01\\Employee\\EMP_FILE\\empfile.txt&quot;</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::AddEmp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="comment">//保存数据</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">SaveFile</span>();</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::SaveFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ofstream ofs;</span><br><span class="line">    ofs.<span class="built_in">open</span>(FILENAME, ios::out);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>-&gt;m_EmpNum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ofs&lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id&lt;&lt;<span class="string">&quot; &quot;</span></span><br><span class="line">        &lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name&lt;&lt;<span class="string">&quot; &quot;</span></span><br><span class="line">        &lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_DeptId&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="文件交互-读文件"><a href="#文件交互-读文件" class="headerlink" title="文件交互-读文件"></a>文件交互-读文件</h3><p>功能描述: 将文件中的内容读取到程序中</p>
<p>虽然我们实现了添加职工后保存到文件的操作，但是每次开始运行程序，并没有将文件中数据读取到程序中</p>
<p>而我们的程序功能中还有清空文件的需求</p>
<p>因此构造函数初始化数据的情况分为三种</p>
<blockquote>
<p>1.第一次使用，文件未创建</p>
<p>2.文件存在，但是数据被用户清空</p>
<p>3.文件存在，并且保存职工的所有数据</p>
</blockquote>
<p><code>workermanager.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerManager</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">WorkerManager</span>();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowMenu</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ExitSystem</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="keyword">int</span> m_EmpNum;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AddEmp</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SaveFile</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//判断读文件是否为空</span></span><br><span class="line">    <span class="keyword">bool</span> m_FileIsEmpty;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetEmpNum</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init_Emp</span><span class="params">()</span></span>;</span><br><span class="line">    Worker ** m_EmpArray;</span><br><span class="line">    ~<span class="built_in">WorkerManager</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>workermanager.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">WorkerManager::<span class="built_in">WorkerManager</span>() &#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(FILENAME, ios::in);</span><br><span class="line">    <span class="comment">//第一次使用，文件未创建</span></span><br><span class="line">    <span class="keyword">if</span>(!ifs.<span class="built_in">is_open</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件不存在&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        ifs.<span class="built_in">close</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//文件存在，但是数据被用户清空</span></span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    ifs&gt;&gt;ch;</span><br><span class="line">    <span class="keyword">if</span>(ifs.<span class="built_in">eof</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件为空&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        ifs.<span class="built_in">close</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="keyword">this</span>-&gt;<span class="built_in">GetEmpNum</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;职工人数为:&quot;</span>&lt;&lt;num&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_EmpNum = num;</span><br><span class="line">    <span class="comment">//***********测试********</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;m_EmpArray = <span class="keyword">new</span> Worker * [<span class="keyword">this</span>-&gt;m_EmpNum];</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">Init_Emp</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>-&gt;m_EmpNum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;职工编号:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id</span><br><span class="line">        &lt;&lt;<span class="string">&quot; 姓名:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name</span><br><span class="line">        &lt;&lt;<span class="string">&quot; 部门编号:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_DeptId&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::AddEmp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="comment">//保存数据</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">false</span>;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获得员工数量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WorkerManager::GetEmpNum</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//打开文件,读</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> dId;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(ifs&gt;&gt;id &amp;&amp; ifs&gt;&gt;name &amp;&amp; ifs&gt;&gt;dId)</span><br><span class="line">    &#123;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//员工初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::Init_Emp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ifstream ifs;</span><br><span class="line">    ifs.<span class="built_in">open</span>(FILENAME, ios::in);</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> dId;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(ifs&gt;&gt;id &amp;&amp; ifs&gt;&gt;name &amp;&amp; ifs&gt;&gt;dId)</span><br><span class="line">    &#123;</span><br><span class="line">        Worker * worker = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span>(dId == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(id, name, dId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dId == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(id, name, dId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dId == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(id, name, dId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_EmpArray[index] = worker;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***********结果************</span></span><br><span class="line">职工人数为:<span class="number">2</span></span><br><span class="line">职工编号:<span class="number">1</span> 姓名:张三 部门编号:<span class="number">3</span></span><br><span class="line">职工编号:<span class="number">2</span> 姓名:李四 部门编号:<span class="number">3</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<h3 id="显示职工"><a href="#显示职工" class="headerlink" title="显示职工"></a>显示职工</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::ShowEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件不存在或者为空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m_EmpNum;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;<span class="built_in">ShowInfo</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        wm.<span class="built_in">ShowMenu</span>();</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入您的选择:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;option;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (option)</span><br><span class="line">        &#123;</span><br><span class="line">         ......</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                wm.<span class="built_in">ShowEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"> 		......</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="删除职工"><a href="#删除职工" class="headerlink" title="删除职工"></a>删除职工</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::DelEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件不存在或者为空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入想要删除的职工编号&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">int</span> id = <span class="number">0</span>;</span><br><span class="line">        cin&gt;&gt;id;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="keyword">this</span>-&gt;<span class="built_in">IsExist</span>(id);</span><br><span class="line">        <span class="keyword">if</span>(index != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//数据迁移</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=index;i&lt;<span class="keyword">this</span>-&gt;m_EmpNum<span class="number">-1</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_EmpArray[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i+<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpNum--;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">SaveFile</span>();</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;删除成功&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;删除失败,未找到职工&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WorkerManager::IsExist</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>-&gt;m_EmpNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id == id)</span><br><span class="line">        &#123;</span><br><span class="line">            index = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="修改职工"><a href="#修改职工" class="headerlink" title="修改职工"></a>修改职工</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::ModEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件不存在或者为空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入修改职工的编号:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">int</span> id;</span><br><span class="line">        cin&gt;&gt;id;</span><br><span class="line">        <span class="keyword">int</span> ret = <span class="keyword">this</span>-&gt;<span class="built_in">IsExist</span>(id);</span><br><span class="line">        <span class="keyword">if</span>(ret != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//查找到编号的职工</span></span><br><span class="line">            <span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[ret];</span><br><span class="line">            <span class="keyword">int</span> newId = <span class="number">0</span>;</span><br><span class="line">            string newName;</span><br><span class="line">            <span class="keyword">int</span> newdId;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;查找到&quot;</span>&lt;&lt;id&lt;&lt;<span class="string">&quot;号职工，请输入新职工号&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin&gt;&gt;newId;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请输入新姓名&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin&gt;&gt;newName;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请输入岗位&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;1、普通员工&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;2、经理&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;3、老板&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin&gt;&gt;newdId;</span><br><span class="line">            Worker * worker = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span>(newdId)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    worker = <span class="keyword">new</span> <span class="built_in">Employee</span>(newId, newName, newdId);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    worker = <span class="keyword">new</span> <span class="built_in">Manager</span>(newId, newName, newdId);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    worker = <span class="keyword">new</span> <span class="built_in">Boss</span>(newId, newName, newdId);<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpArray[ret] = worker;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;修改成功&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">SaveFile</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;修改失败,查无此人&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="查找职工"><a href="#查找职工" class="headerlink" title="查找职工"></a>查找职工</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::FindEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件不存在或者为空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入查找的方式&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;1、按照职工编号查找&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;2、按照职工姓名查找&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">int</span> select;</span><br><span class="line">        cin&gt;&gt;select;</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> id;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请输入查找的职工编号&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin &gt;&gt; id;</span><br><span class="line">            <span class="keyword">int</span> ret = <span class="built_in">IsExist</span>(id);</span><br><span class="line">            <span class="keyword">if</span>(ret != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//找到这个人</span></span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;查找成功&quot;</span>&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_EmpArray[ret]-&gt;<span class="built_in">ShowInfo</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;查找失败,查无此人&quot;</span>&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (select == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            string name;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;请输入查找的职工姓名&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cin &gt;&gt; name;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>-&gt;m_EmpNum;i++)</span><br><span class="line">            &#123;</span><br><span class="line">             <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name == name)</span><br><span class="line">             &#123;</span><br><span class="line">                 cout&lt;&lt;<span class="string">&quot;查找成功, 职工编号为&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id&lt;&lt;<span class="string">&quot;职工信息如下:&quot;</span>&lt;&lt;endl;</span><br><span class="line">                 flag = <span class="literal">true</span>;</span><br><span class="line">                 <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;<span class="built_in">ShowInfo</span>();</span><br><span class="line">             &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;查找失败，查无此人&quot;</span>&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;输入错误!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="职工排序"><a href="#职工排序" class="headerlink" title="职工排序"></a>职工排序</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::SortEmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_FileIsEmpty)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;文件不存在或者为空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请选择排序方式&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;1、按职工号进行升序&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;2、按职工号进行降序&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">int</span> select = <span class="number">0</span>;</span><br><span class="line">        cin&gt;&gt;select;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m_EmpNum;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> minOrMax = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;m_EmpNum;j++)</span><br><span class="line">            &#123;</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_EmpArray[minOrMax]-&gt;m_Id&gt;<span class="keyword">this</span>-&gt;m_EmpArray[j]-&gt;m_Id)</span><br><span class="line">            &#123;</span><br><span class="line">                minOrMax = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_EmpArray[minOrMax]-&gt;m_Id&lt;<span class="keyword">this</span>-&gt;m_EmpArray[j]-&gt;m_Id)</span><br><span class="line">            &#123;</span><br><span class="line">                minOrMax = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">            <span class="comment">//判断一开始认定 最小值或最大值 是不是计算的最小值或最大值 如果不是则交换数据</span></span><br><span class="line">        <span class="keyword">if</span>(i != minOrMax)</span><br><span class="line">        &#123;</span><br><span class="line">            Worker * temp = <span class="keyword">this</span>-&gt;m_EmpArray[i];</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpArray[i] = <span class="keyword">this</span>-&gt;m_EmpArray[minOrMax];</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpArray[minOrMax] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">SaveFile</span>();</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;排序成功, 排序后的结果为:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">ShowEmp</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="清空文件"><a href="#清空文件" class="headerlink" title="清空文件"></a>清空文件</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WorkerManager::CleanFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;确定清空&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;1、yes/2、no&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">int</span> select;</span><br><span class="line">    cin&gt;&gt;select;</span><br><span class="line">    <span class="keyword">if</span>(select == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">ofstream <span class="title">ofs</span><span class="params">(FILENAME, ios::trunc)</span></span>;</span><br><span class="line">        ofs.<span class="built_in">close</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//删除堆区的每个职工对象</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>-&gt;m_EmpNum;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[i];</span><br><span class="line">                <span class="keyword">this</span>-&gt;m_EmpArray[i] = <span class="literal">NULL</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_FileIsEmpty = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;清空成功!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;workermanager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;worker.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;employee.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;manager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;boss.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WorkerManager wm;</span><br><span class="line">    <span class="keyword">int</span> option = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        wm.<span class="built_in">ShowMenu</span>();</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;请输入您的选择:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;option;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (option)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                wm.<span class="built_in">ExitSystem</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                wm.<span class="built_in">AddEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                wm.<span class="built_in">ShowEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                wm.<span class="built_in">DelEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                wm.<span class="built_in">ModEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                wm.<span class="built_in">FindEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                wm.<span class="built_in">SortEmp</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                wm.<span class="built_in">CleanFile</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++基础学习三</title>
    <url>/2022/09/02/C-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-基础学习三"><a href="#C-基础学习三" class="headerlink" title="C++基础学习三"></a>C++基础学习三</h1><h2 id="C-中的引用"><a href="#C-中的引用" class="headerlink" title="C++中的引用"></a>C++中的引用</h2><h3 id="引用基本语法"><a href="#引用基本语法" class="headerlink" title="引用基本语法"></a>引用基本语法</h3><p><code>语法 数据类型 &amp;别名 = 原名</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> &amp;b=a;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    b=<span class="number">100</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">b=10</span></span><br><span class="line"><span class="comment">a=100</span></span><br><span class="line"><span class="comment">b=100</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>引用必须要初始化</p>
<p><code>int &amp;b;//(X)</code></p>
<p>引用一旦初始化，就不可以更改了</p>
<h3 id="引用做函数参数"><a href="#引用做函数参数" class="headerlink" title="引用做函数参数"></a>引用做函数参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//值传递 不可以互换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap_01</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//地址传递 可以互换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap_02</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//引用传递 可以互换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap_03</span><span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-----原ab-----&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">swap_01</span>(a, b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-----swap_01-----&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">swap_02</span>(&amp;a, &amp;b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-----swap_02-----&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">swap_03</span>(a, b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-----swap_03-----&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-----原ab-----</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">b=20</span></span><br><span class="line"><span class="comment">-----swap_01-----</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">b=20</span></span><br><span class="line"><span class="comment">-----swap_02-----</span></span><br><span class="line"><span class="comment">a=20</span></span><br><span class="line"><span class="comment">b=10</span></span><br><span class="line"><span class="comment">-----swap_03-----</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">b=20</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="引用做函数返回值"><a href="#引用做函数返回值" class="headerlink" title="引用做函数返回值"></a>引用做函数返回值</h3><p>不要返回局部变量的引用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//出错</span></span><br><span class="line"><span class="comment">//    int &amp;p1 = test01();</span></span><br><span class="line"><span class="comment">//    cout&lt;&lt;&quot;p1 = &quot;&lt;&lt;p1&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    cout&lt;&lt;&quot;p1 = &quot;&lt;&lt;p1&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">int</span> &amp;p2 = <span class="built_in">test02</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p2 = &quot;</span>&lt;&lt;p2&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p2 = &quot;</span>&lt;&lt;p2&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//如果函数为左值，那么必须返回引用</span></span><br><span class="line">    <span class="built_in">test02</span>() = <span class="number">100</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p2 = &quot;</span>&lt;&lt;p2&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p2 = &quot;</span>&lt;&lt;p2&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p2 = 10</span></span><br><span class="line"><span class="comment">p2 = 10</span></span><br><span class="line"><span class="comment">p2 = 100</span></span><br><span class="line"><span class="comment">p2 = 100</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="引用的本质"><a href="#引用的本质" class="headerlink" title="引用的本质"></a>引用的本质</h3><p><strong>本质：相当于C++的指针常量</strong></p>
<h3 id="常量引用"><a href="#常量引用" class="headerlink" title="常量引用"></a>常量引用</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//加上const会出错</span></span><br><span class="line">    <span class="comment">//a = 1000;//未加const可修改变量值，主函数输出1000</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> &amp;p1 = a;</span><br><span class="line">    <span class="comment">//加上const可以引用变量，变为只读不可修改</span></span><br><span class="line">    <span class="comment">//使用场景：用来修饰形参，防止误操作</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> &amp;p2 = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">show</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="函数高级"><a href="#函数高级" class="headerlink" title="函数高级"></a>函数高级</h2><h3 id="函数的默认参数"><a href="#函数的默认参数" class="headerlink" title="函数的默认参数"></a>函数的默认参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//函数设置默认值</span></span><br><span class="line"><span class="comment">//有一个默认参数后面参数必须有</span></span><br><span class="line"><span class="comment">//eg:int fun(int a, int b=10, int c)(x)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c=<span class="number">20</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b+c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">fun</span>(<span class="number">10</span>, <span class="number">30</span>)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">fun</span>(<span class="number">10</span>,<span class="number">20</span>,<span class="number">40</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">60</span></span><br><span class="line"><span class="comment">70</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="函数的占位参数"><a href="#函数的占位参数" class="headerlink" title="函数的占位参数"></a>函数的占位参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可以有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func02</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span>=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;this is func02&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="comment">//func02(10, 20);</span></span><br><span class="line">    <span class="built_in">func02</span>(<span class="number">10</span>,);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">this is func02</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h3><p><strong>作用：函数名可以相同，提高重复利用</strong></p>
<p>函数重载满足条件：</p>
<ul>
<li>同一个作用域下</li>
<li>函数名称相同</li>
<li>函数参数类型不同，或者个数不同，或者顺序不同</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数重载</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;调用func03()&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;调用func03(int a)  a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;调用func03(double b)  b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;调用func03(int a, double b)  a=&quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot; b=&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数返回值不可以作为重载的条件</span></span><br><span class="line"><span class="comment">//int func(int a, double b)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//    cout&lt;&lt;&quot;调用func03(int a, double b)  a=&quot;&lt;&lt;a&lt;&lt;&quot;b=&quot;&lt;&lt;b&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">double</span> b=<span class="number">3.14</span>;</span><br><span class="line">    <span class="built_in">func</span>();</span><br><span class="line">    <span class="built_in">func</span>(a);</span><br><span class="line">    <span class="built_in">func</span>(b);</span><br><span class="line">    <span class="built_in">func</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">调用func03()</span></span><br><span class="line"><span class="comment">调用func03(int a)  a=5</span></span><br><span class="line"><span class="comment">调用func03(double b)  b=3.14</span></span><br><span class="line"><span class="comment">调用func03(int a, double b)  a=5 b=3.14</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="函数重载注意事项"><a href="#函数重载注意事项" class="headerlink" title="函数重载注意事项"></a>函数重载注意事项</h3><ul>
<li>引用作为重载的条件</li>
<li>函数重载的默认参数</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;func()&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;const func()&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数重载碰到默认值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func_a</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;func(int a, int b=10)&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func_a</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;func(int a)&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="comment">//    func(a);//func()</span></span><br><span class="line"><span class="comment">//    func(10);//const func()</span></span><br><span class="line"><span class="comment">//    func_a(a)//二一性，有歧义，出错</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><h4 id="封装的意义"><a href="#封装的意义" class="headerlink" title="封装的意义"></a>封装的意义</h4><p>封装是C++面向对象的三大特征之一</p>
<p>封装的意义：</p>
<ul>
<li>将属性和行为作为一个整体，表现生活中的事项</li>
<li>将属性和行为加以权限控制</li>
</ul>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>例1：设计一个圆类，求圆的周长</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI=<span class="number">3.14</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//访问权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="keyword">int</span> r;</span><br><span class="line">    <span class="comment">//行为</span></span><br><span class="line">    <span class="comment">//获取圆的周长</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">calcuate_C</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>*PI*r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过圆类，创建具体的对象</span></span><br><span class="line">    Circle c;</span><br><span class="line">    c.r = <span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;圆的周长为&quot;</span>&lt;&lt;c.<span class="built_in">calcuate_C</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowMsg</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;姓名：&quot;</span>&lt;&lt;name&lt;&lt;<span class="string">&quot; 学号：&quot;</span>&lt;&lt;id&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Setname</span><span class="params">(string m_name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        name = m_name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student stu1, stu2;</span><br><span class="line">    stu1.name = <span class="string">&quot;Lihua&quot;</span>;</span><br><span class="line">    stu1.id = <span class="number">24</span>;</span><br><span class="line">    stu1.<span class="built_in">ShowMsg</span>();</span><br><span class="line">    stu2.name = <span class="string">&quot;Daming&quot;</span>;</span><br><span class="line">    stu2.id = <span class="number">20</span>;</span><br><span class="line">    stu2.<span class="built_in">ShowMsg</span>();</span><br><span class="line">    stu2.<span class="built_in">Setname</span>(<span class="string">&quot;Aliy&quot;</span>);</span><br><span class="line">    stu2.<span class="built_in">ShowMsg</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">姓名：Lihua 学号：24</span></span><br><span class="line"><span class="comment">姓名：Daming 学号：20</span></span><br><span class="line"><span class="comment">姓名：Aliy 学号：20</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h4><ul>
<li>公共权限 <code>public</code> 成员 类内可以访问 类外可以访问</li>
<li>保护权限 <code>protected</code> 成员 类内可以访问 类外不可以访问 儿子也可以访问父亲中的保护内容</li>
<li>私有权限  <code>private</code> 成员 类内可以访问 类外不可以访问  儿子不可以访问父亲中的保护内容</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//公共权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    <span class="comment">//保护权限</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    string car;</span><br><span class="line">    <span class="comment">//私有权限</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> Password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        name = <span class="string">&quot;Dad&quot;</span>;</span><br><span class="line">        car = <span class="string">&quot;BWM&quot;</span>;</span><br><span class="line">        Password = <span class="number">16801</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    p.name = <span class="string">&quot;Father&quot;</span>;</span><br><span class="line">    <span class="comment">//不能访问</span></span><br><span class="line"><span class="comment">//    p.car = &quot;Boy&quot;;</span></span><br><span class="line"><span class="comment">//    p.Password = &quot;10238&quot;;</span></span><br><span class="line"><span class="comment">//    p.func();</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;name:&quot;</span>&lt;&lt;p.name&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">name:Father</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="struct与class的区别"><a href="#struct与class的区别" class="headerlink" title="struct与class的区别"></a>struct与class的区别</h4><p>在C++中的struct和class唯一的区别就在于默认的访问权限不同</p>
<p><strong>区别：</strong></p>
<ul>
<li>struct默认权限为公共权限</li>
<li>class默认权限为私有权限</li>
</ul>
<h4 id="成员属性私有化"><a href="#成员属性私有化" class="headerlink" title="成员属性私有化"></a>成员属性私有化</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//提供public接口对私有属性操作</span></span><br><span class="line">    <span class="comment">//控制读写权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//设置姓名</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Setname</span><span class="params">(string m_name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        name = m_name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取姓名</span></span><br><span class="line">    <span class="function">string <span class="title">Getname</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置年龄</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetAge</span><span class="params">(<span class="keyword">int</span> m_age)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">0</span> || age&gt;<span class="number">150</span>) &#123;</span><br><span class="line">            m_age = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        age=m_age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取年龄</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Getage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置情人</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Setlover</span><span class="params">(string lover_name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        lover = lover_name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取情人</span></span><br><span class="line">    <span class="function">string <span class="title">Getlover</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lover;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">//情人</span></span><br><span class="line">    string lover;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    p.<span class="built_in">Setname</span>(<span class="string">&quot;Daming&quot;</span>);</span><br><span class="line">    p.<span class="built_in">SetAge</span>(<span class="number">20</span>);</span><br><span class="line">    p.<span class="built_in">Setlover</span>(<span class="string">&quot;Lily&quot;</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;NAME:&quot;</span>&lt;&lt;p.<span class="built_in">Getname</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;AGE:&quot;</span>&lt;&lt;p.<span class="built_in">Getage</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;LOVER:&quot;</span>&lt;&lt;p.<span class="built_in">Getlover</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">NAME:Daming</span></span><br><span class="line"><span class="comment">AGE:20</span></span><br><span class="line"><span class="comment">LOVER:Lily</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="设计案例1：立方体类"><a href="#设计案例1：立方体类" class="headerlink" title="设计案例1：立方体类"></a>设计案例1：立方体类</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cube</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetLWH</span><span class="params">(<span class="keyword">float</span> c_l, <span class="keyword">float</span> c_w, <span class="keyword">float</span> c_h)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        l = c_l;</span><br><span class="line">        w = c_w;</span><br><span class="line">        h = c_h;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">float</span> <span class="title">Getarea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>*(l*w+l*h+w*h);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">float</span> <span class="title">Getvolume</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l*w*h;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">float</span> l;</span><br><span class="line">    <span class="keyword">float</span> w;</span><br><span class="line">    <span class="keyword">float</span> h;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Cube c;</span><br><span class="line">    c.<span class="built_in">SetLWH</span>(<span class="number">9</span>, <span class="number">5.3</span>, <span class="number">4</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;立方体面积:&quot;</span>&lt;&lt;c.<span class="built_in">Getarea</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;立方体体积:&quot;</span>&lt;&lt;c.<span class="built_in">Getvolume</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">立方体面积:209.8</span></span><br><span class="line"><span class="comment">立方体体积:190.8</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="设计案例2：点和圆的关系"><a href="#设计案例2：点和圆的关系" class="headerlink" title="设计案例2：点和圆的关系"></a>设计案例2：点和圆的关系</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle_point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">float</span> point_x, point_y;</span><br><span class="line">    <span class="keyword">float</span> circle_x, circle_y, circle_r;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Getpose</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> d = (point_x-circle_x)*(point_x-circle_x)+(point_y-circle_y)*(point_y-circle_y);</span><br><span class="line">        <span class="keyword">if</span>(d&gt;circle_r*circle_r)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;点在圆外&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (d&lt;circle_r*circle_r)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;点在圆内&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;点在圆上&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Circle_point c;</span><br><span class="line">    c.point_x = <span class="number">3</span>;</span><br><span class="line">    c.point_y = <span class="number">3</span>;</span><br><span class="line">    c.circle_x = <span class="number">0</span>;</span><br><span class="line">    c.circle_y = <span class="number">0</span>;</span><br><span class="line">    c.circle_r = <span class="number">3</span>;</span><br><span class="line">    c.<span class="built_in">Getpose</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">点在圆外</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="对象特性"><a href="#对象特性" class="headerlink" title="对象特性"></a>对象特性</h3><h4 id="对象的初始化和清理"><a href="#对象的初始化和清理" class="headerlink" title="对象的初始化和清理"></a>对象的初始化和清理</h4><ul>
<li>构造函数：主要作用在于创建对象时对象的成员属性赋值，构造函数有编译器自动调用，无需手动调用</li>
<li>析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作</li>
</ul>
<p>构造函数语法：<code>类名()&#123;&#125;</code></p>
<ol>
<li>构造函数，没有返回值不写<code>void</code></li>
<li>函数名称与类名相同</li>
<li>构造函数可以有参数，因此可以发生重载</li>
<li>程序在调用对象时候会自动调用构造，无需手动调用，而且只会调用一次</li>
</ol>
<p>析构函数语法：<code>~类名()&#123;&#125;</code></p>
<ol>
<li>析构函数，没有返回值不写<code>void</code></li>
<li>函数名称与类名相同，在名称前加上符号~</li>
<li>析构函数不可以有参数，因此不可以发生重载</li>
<li>程序在对象销毁前自动调用析构函数，无需手动调用，而且只会调用一次</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    <span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person 构造函数调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person 析构函数调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Person 构造函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="构造函数的分类及调用"><a href="#构造函数的分类及调用" class="headerlink" title="构造函数的分类及调用"></a>构造函数的分类及调用</h4><p>两种分类方式：</p>
<ul>
<li>按参数分为：有参构造和无参构造</li>
<li>按类型分为：普通构造和拷贝构造</li>
</ul>
<p>三种调用方式：</p>
<ul>
<li>括号法</li>
<li>显示法</li>
<li>隐式转换法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person 构造函数调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">int</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        age = a;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person(int a) 构造函数调用 a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//拷贝构造函数</span></span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">const</span> Person &amp;P)</span><br><span class="line">    &#123;</span><br><span class="line">        age = P.age;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person(const Person &amp;P) 构造函数调用 age=&quot;</span>&lt;&lt;age&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person 析构函数调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//括号法</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;----------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    Person p1;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;----------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;----------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;----------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//显示法</span></span><br><span class="line">    Person p4 = <span class="built_in">Person</span>(p3);</span><br><span class="line">    <span class="comment">//隐式转换法</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;----------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    Person p5 = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"><span class="comment">Person 构造函数调用</span></span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"><span class="comment">Person(int a) 构造函数调用 a=10</span></span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"><span class="comment">Person(const Person &amp;P) 构造函数调用 age=10</span></span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"><span class="comment">Person(const Person &amp;P) 构造函数调用 age=10</span></span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"><span class="comment">Person(int a) 构造函数调用 a=10</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="拷贝构造函数和调用时机"><a href="#拷贝构造函数和调用时机" class="headerlink" title="拷贝构造函数和调用时机"></a>拷贝构造函数和调用时机</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person 构造函数调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">int</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        age = a;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person(int a) 构造函数调用 a=&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//拷贝构造函数</span></span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">const</span> Person &amp;P)</span><br><span class="line">    &#123;</span><br><span class="line">        age = P.age;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person(const Person &amp;P) 构造函数调用 age=&quot;</span>&lt;&lt;age&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person 析构函数调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">(Person p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    <span class="built_in">doWork</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//值传递的方式给函数参数传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;doWork....&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//值方式返回</span></span><br><span class="line"><span class="function">Person <span class="title">doWork01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p = <span class="built_in">doWork01</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;****************&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;****************&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">test03</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Person(int a) 构造函数调用 a=20</span></span><br><span class="line"><span class="comment">Person(const Person &amp;P) 构造函数调用 age=20</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">****************</span></span><br><span class="line"><span class="comment">Person 构造函数调用</span></span><br><span class="line"><span class="comment">Person(const Person &amp;P) 构造函数调用 age=1875955072</span></span><br><span class="line"><span class="comment">doWork....</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">****************</span></span><br><span class="line"><span class="comment">Person 构造函数调用</span></span><br><span class="line"><span class="comment">Person 析构函数调用</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>构造函数调用规则</p>
<p>默认情况下，c++编译至少给一个类添加3个函数</p>
<ul>
<li>默认构造函数（无参， 函数体为空）</li>
<li>默认析构函数（无参， 函数体为空）</li>
<li>默认拷贝构造函数，对属性进行值拷贝</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person的构造函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">const</span> Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person的拷贝构造函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">        age = p.age;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person的析构函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    p.age = <span class="number">18</span>;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(p)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p1.age=&quot;</span>&lt;&lt;p1.age&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Person的构造函数</span></span><br><span class="line"><span class="comment">Person的拷贝构造函数</span></span><br><span class="line"><span class="comment">p1.age=18</span></span><br><span class="line"><span class="comment">Person的析构函数</span></span><br><span class="line"><span class="comment">Person的析构函数</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="初始化列表"><a href="#初始化列表" class="headerlink" title="初始化列表"></a>初始化列表</h4><p><strong>作用：C++提供了初始化的列表语法，用来初始化属性</strong></p>
<p>语法：<code>构造函数():属性1(值1), 属性2(值2).....&#123;&#125;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//传统初始化操作</span></span><br><span class="line"><span class="comment">//    Person(int a, int b, int c)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        A = a;</span></span><br><span class="line"><span class="comment">//        B = b;</span></span><br><span class="line"><span class="comment">//        C = c;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//列表初始化</span></span><br><span class="line"><span class="comment">//    Person ():A(10), B(20), C(30)</span></span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c):<span class="built_in">A</span>(a), <span class="built_in">B</span>(b), <span class="built_in">C</span>(c)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> A, B, C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;A=&quot;</span>&lt;&lt;p.A&lt;&lt;endl;<span class="comment">//A=1</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;B=&quot;</span>&lt;&lt;p.B&lt;&lt;endl;<span class="comment">//B=2</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;C=&quot;</span>&lt;&lt;p.C&lt;&lt;endl;<span class="comment">//C=3</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="类对象作为类成员"><a href="#类对象作为类成员" class="headerlink" title="类对象作为类成员"></a>类对象作为类成员</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Phone</span>(string name):<span class="built_in">pname</span>(name)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    string pname;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(string n, string pn):<span class="built_in">name</span>(n), <span class="built_in">p</span>(pn)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    string name;</span><br><span class="line">    Phone p;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p</span><span class="params">(<span class="string">&quot;Daming&quot;</span>, <span class="string">&quot;PhoneMAX&quot;</span>)</span></span>;</span><br><span class="line">    cout&lt;&lt;p.name&lt;&lt;<span class="string">&quot; take a phone named &quot;</span>&lt;&lt;p.p.pname&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Daming take a phone named PhoneMAX</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h4><h5 id="静态成员变量"><a href="#静态成员变量" class="headerlink" title="静态成员变量:"></a>静态成员变量:</h5><ul>
<li>所有对象都共享同一份数据</li>
<li>编译阶段就分配内存</li>
<li>类内声明，类外初始化操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//类内声明</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> a;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//类外初始化(访问不到私有属性)</span></span><br><span class="line"><span class="keyword">int</span> A::a = <span class="number">100</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过对象访问</span></span><br><span class="line">    A one;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;one.a=&quot;</span>&lt;&lt;one.a&lt;&lt;endl;</span><br><span class="line">    A two;</span><br><span class="line">    two.a = <span class="number">200</span>;</span><br><span class="line">    <span class="comment">//共享同一份数据</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;one.a=&quot;</span>&lt;&lt;one.a&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//通过类名直接访问</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;A::a=&quot;</span>&lt;&lt;A::a&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">one.a=100</span></span><br><span class="line"><span class="comment">one.a=200</span></span><br><span class="line"><span class="comment">A::a=200</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h5 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h5><ul>
<li><p>所有对象共享同一函数</p>
</li>
<li><p>静态成员函数只能访问静态成员变量</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//类内声明</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a = <span class="number">90</span>;</span><br><span class="line"><span class="comment">//        b =10;//静态成员函数，不可以访问非静态变量</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;static void func()&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过对象访问</span></span><br><span class="line">    Person p;</span><br><span class="line">    p.<span class="built_in">func</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;------------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//通过类名访问</span></span><br><span class="line">    Person::<span class="built_in">func</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">static void func()</span></span><br><span class="line"><span class="comment">------------------</span></span><br><span class="line"><span class="comment">static void func()</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="成员变量和成员函数分开存储"><a href="#成员变量和成员函数分开存储" class="headerlink" title="成员变量和成员函数分开存储"></a>成员变量和成员函数分开存储</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> a;<span class="comment">//非静态成员变量 属于类的对象上</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> b;<span class="comment">//静态成员变量 不属于类对象</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span>&#123;&#125;<span class="comment">//非静态成员函数 不属于类对象</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;&#125;<span class="comment">//静态成员函数 不属于类对象</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Person::b = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    <span class="comment">//C++会给每个空对象分配一个字节，区分空对象站内存位置</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;sizeof Person=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(p)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    <span class="comment">//C++会给每个空对象分配一个字节，区分空对象站内存位置</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;sizeof Person=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(p)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    test01();//sizeof Person=1</span></span><br><span class="line">    <span class="built_in">test02</span>();<span class="comment">//sizeof Person=4</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sizeof Person=4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h4><p>C++通过特殊的对象指针，this指针，解决上述问题， <strong>this指针指向被调用的成员函数所属的对象</strong></p>
<p>this指针是<strong>隐含</strong>每一个非静态成员函数内的指针</p>
<p>this指针<strong>不需要定义</strong>，直接使用即可</p>
<p>this指针的用途</p>
<ul>
<li>当形参和成员变量同名时，可用this指针来区分</li>
<li>在类的非静态成员函数中返回对象本身，使用<code>return *this</code></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//age = age;//出错</span></span><br><span class="line">        <span class="comment">//this指针指向 被调用的成员函数 所属的对象</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">Person&amp; <span class="title">Addage</span><span class="params">(Person &amp;p)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line">        <span class="comment">//this指向p2的指针，而*this指向的就是p2这个对象的本体</span></span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Person p1 age=&quot;</span>&lt;&lt;p1.age&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">    p2.<span class="built_in">Addage</span>(p1);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Person p2 age=&quot;</span>&lt;&lt;p2.age&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//链式编程思想</span></span><br><span class="line">    p2.<span class="built_in">Addage</span>(p1);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Person p2 age=&quot;</span>&lt;&lt;p2.age&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Person p1 age=18</span></span><br><span class="line"><span class="comment">-------------</span></span><br><span class="line"><span class="comment">Person p2 age=28</span></span><br><span class="line"><span class="comment">-------------</span></span><br><span class="line"><span class="comment">Person p2 age=46</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="空指针访问成员函数"><a href="#空指针访问成员函数" class="headerlink" title="空指针访问成员函数"></a>空指针访问成员函数</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showMsg</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;void showMsg()&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;void showAge() age=&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;age&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person *p = <span class="literal">NULL</span>;</span><br><span class="line">    p-&gt;<span class="built_in">showMsg</span>();</span><br><span class="line"><span class="comment">//    p-&gt;showAge();//error 传入指针为空，无属性</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void showMsg()</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="const-修饰成员函数"><a href="#const-修饰成员函数" class="headerlink" title="const 修饰成员函数"></a>const 修饰成员函数</h4><p><strong>常函数</strong></p>
<ul>
<li>成员函数后加<code>const</code>后我们称为这个函数为<strong>常函数</strong></li>
<li>常函数内不可以修改成员属性</li>
<li>成员属性同时加关键字<code>mutable</code>后，在常函数中依然可以修改</li>
</ul>
<p><strong>常对象</strong></p>
<ul>
<li>声明对象加<code>const</code>称该对象为常对象</li>
<li>常对象只调用常函数</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//加const后this不可指向</span></span><br><span class="line"><span class="comment">//   const Person * const this</span></span><br><span class="line"><span class="comment">//在成员函数后面加const，修饰的this指向，让指针指向的值也不可以修改</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="comment">//        this-&gt;a = 100;</span></span><br><span class="line">          <span class="keyword">this</span>-&gt;b = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">mutable</span> <span class="keyword">int</span> b;<span class="comment">//加mutable可修改</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> Person p&#123;&#125;;<span class="comment">//在对象前加const,变为常对象</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p.b=&quot;</span>&lt;&lt;p.b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p.b=0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="友元"><a href="#友元" class="headerlink" title="友元"></a>友元</h3><h4 id="全局函数做友元"><a href="#全局函数做友元" class="headerlink" title="全局函数做友元"></a>全局函数做友元</h4><p>在程序里，有些私有属性也想让类外特殊的一些函数或者类进行访问，就需要用到友元技术</p>
<p>友元的目的就是让一个函数或者类 访问另一个类中私有成员</p>
<p>友元的关键字为 <code>friend</code></p>
<p>友元的三种实现</p>
<ul>
<li>全局函数做友元</li>
<li>类做友元</li>
<li>成员函数做友元</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//友元</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//GoodGay全局函数是Building的好朋友，可可以访问私有属性</span></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">GoodGay</span><span class="params">(Building *building)</span></span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Building</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        SittingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">        BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string SittingRoom;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string BedRoom;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//全局函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoodGay</span><span class="params">(Building *building)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;好基友全局函数 正在访问:&quot;</span>&lt;&lt;building-&gt;SittingRoom&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;好基友全局函数 正在访问:&quot;</span>&lt;&lt;building-&gt;BedRoom&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Building building;</span><br><span class="line">    <span class="built_in">GoodGay</span>(&amp;building);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">好基友全局函数 正在访问:客厅</span></span><br><span class="line"><span class="comment">好基友全局函数 正在访问:卧室</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="类做友元"><a href="#类做友元" class="headerlink" title="类做友元"></a>类做友元</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string SettingRoom;</span><br><span class="line">    <span class="comment">//类内有声明</span></span><br><span class="line">    <span class="built_in">Building</span>();</span><br><span class="line">    <span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodGay</span>;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string BedRoom;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//类外写，类内要有声明</span></span><br><span class="line">Building::<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line">    SettingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">    BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="built_in">GoodGay</span>();</span><br><span class="line">    Building * building;</span><br><span class="line">&#125;;</span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>() &#123;</span><br><span class="line">    building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;好基友类正在访问:&quot;</span>&lt;&lt;building-&gt;SettingRoom&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;好基友类正在访问:&quot;</span>&lt;&lt;building-&gt;BedRoom&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GoodGay g;</span><br><span class="line">    g.<span class="built_in">visit</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">好基友类正在访问:客厅</span></span><br><span class="line"><span class="comment">好基友类正在访问:卧室</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="成员函数做友元"><a href="#成员函数做友元" class="headerlink" title="成员函数做友元"></a>成员函数做友元</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GoodGay</span>();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line">    Building * building;</span><br><span class="line">&#125;;</span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>() &#123;</span><br><span class="line">    building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;好基友类正在访问:&quot;</span>&lt;&lt;building-&gt;SettingRoom&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;好基友类正在访问:&quot;</span>&lt;&lt;building-&gt;BedRoom&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string SettingRoom;</span><br><span class="line">    <span class="comment">//类内有声明</span></span><br><span class="line">    <span class="built_in">Building</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string BedRoom;</span><br><span class="line">&#125;;</span><br><span class="line">Building::<span class="built_in">Building</span>() &#123;</span><br><span class="line">    SettingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">    BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GoodGay g;</span><br><span class="line">    g.<span class="built_in">visit</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="C-运算符重载-operator"><a href="#C-运算符重载-operator" class="headerlink" title="C++运算符重载(operator)"></a>C++运算符重载(operator)</h3><p>运算符重载概念：对已有的运算符重新进行定义，赋予其另一种功能，以适应不同的数据类型。</p>
<h4 id="加号运算符重载"><a href="#加号运算符重载" class="headerlink" title="加号运算符重载"></a>加号运算符重载</h4><p>通过自己写成员函数，实现两个对象相加属性后返回新的对象</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">&#125;;</span><br><span class="line">Person <span class="keyword">operator</span>+(Person &amp;p1, Person &amp;p2)</span><br><span class="line">&#123;</span><br><span class="line">    Person t;</span><br><span class="line">    t.a = p1.a + p2.a;</span><br><span class="line">    t.b = p1.b + p2.b;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line">Person <span class="keyword">operator</span>+(Person &amp;p, <span class="keyword">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">    Person t;</span><br><span class="line">    t.a = p.a + num;</span><br><span class="line">    t.b = p.b + num;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p1, p2;</span><br><span class="line">    p1.a = <span class="number">10</span>;</span><br><span class="line">    p1.b = <span class="number">5</span>;</span><br><span class="line">    p2.a = <span class="number">8</span>;</span><br><span class="line">    p2.b = <span class="number">12</span>;</span><br><span class="line">    Person p3 = <span class="keyword">operator</span>+(p1, p2);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p3.a=&quot;</span>&lt;&lt;p3.a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p3.b=&quot;</span>&lt;&lt;p3.b&lt;&lt;endl;</span><br><span class="line">    Person p4 = p1 + <span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p4.a=&quot;</span>&lt;&lt;p4.a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p4.b=&quot;</span>&lt;&lt;p4.b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p3.a=18</span></span><br><span class="line"><span class="comment">p3.b=17</span></span><br><span class="line"><span class="comment">p4.a=20</span></span><br><span class="line"><span class="comment">p4.b=15</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="左移运算符重载"><a href="#左移运算符重载" class="headerlink" title="左移运算符重载"></a>左移运算符重载</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//只能利用全局函重载左移运算符</span></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;cout, Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a=&quot;</span>&lt;&lt;p.a&lt;&lt;<span class="string">&quot; b=&quot;</span>&lt;&lt;p.b;</span><br><span class="line">    <span class="keyword">return</span> cout;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person p;</span><br><span class="line">    p.a = <span class="number">15</span>;</span><br><span class="line">    p.b = <span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;p&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=15 b=10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="递增运算符重载"><a href="#递增运算符重载" class="headerlink" title="递增运算符重载"></a>递增运算符重载</h4><p>作用:通过重载递增运算符重载，实现自己的整形数据</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Myint</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">friend</span> ostream &amp; <span class="keyword">operator</span>&lt;&lt;(ostream &amp;cout, Myint &amp;p);</span><br><span class="line">    <span class="built_in">Myint</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        num = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重载++运算符</span></span><br><span class="line">    <span class="comment">//前置</span></span><br><span class="line">    Myint&amp; <span class="keyword">operator</span>++()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先进行++运算,在返回自身类型</span></span><br><span class="line">        <span class="comment">//返回引用，是对一个变量操作</span></span><br><span class="line">        ++num;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//后置</span></span><br><span class="line">    <span class="comment">//int代表站位参数 区分前置和后置</span></span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">operator</span>++(<span class="keyword">int</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Myint t = *<span class="keyword">this</span>;</span><br><span class="line">        num++;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">&#125;;</span><br><span class="line">ostream &amp; <span class="keyword">operator</span>&lt;&lt;(ostream &amp;cout, Myint &amp;p)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;p.num;</span><br><span class="line">    <span class="keyword">return</span> cout;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Myint p;</span><br><span class="line">    cout&lt;&lt;p&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;p++&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;++p&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="赋值运算符重载"><a href="#赋值运算符重载" class="headerlink" title="赋值运算符重载"></a>赋值运算符重载</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(<span class="keyword">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        Age = <span class="keyword">new</span> <span class="built_in"><span class="keyword">int</span></span>(age);</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Person</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Age != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span> Age;</span><br><span class="line">            Age = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Person&amp; <span class="keyword">operator</span>=(Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Age != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span> Age;</span><br><span class="line">            Age = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//深拷贝</span></span><br><span class="line">        Age = <span class="keyword">new</span> <span class="built_in"><span class="keyword">int</span></span>(*p.Age);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> *Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p1的年龄为:&quot;</span>&lt;&lt;*p1.Age&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p2的年龄为:&quot;</span>&lt;&lt;*p2.Age&lt;&lt;endl;</span><br><span class="line">    p2 = p1;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;p2的年龄为:&quot;</span>&lt;&lt;*p2.Age&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-------------</span></span><br><span class="line"><span class="comment">p1的年龄为:18</span></span><br><span class="line"><span class="comment">-------------</span></span><br><span class="line"><span class="comment">p2的年龄为:20</span></span><br><span class="line"><span class="comment">-------------</span></span><br><span class="line"><span class="comment">p2的年龄为:18</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="关系运算符重载"><a href="#关系运算符重载" class="headerlink" title="关系运算符重载"></a>关系运算符重载</h4><p>相等运算符</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(string n, <span class="keyword">int</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="keyword">this</span>-&gt;name == p.name) &amp;&amp; (<span class="keyword">this</span>-&gt;age==p.age))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;Daming&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;Lily&quot;</span>, <span class="number">19</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (p1==p2)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;p1和p2相等&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;p1和p2不相等&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p1和p2不相等</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>不等运算符</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(string n, <span class="keyword">int</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="keyword">this</span>-&gt;name == p.name) &amp;&amp; (<span class="keyword">this</span>-&gt;age==p.age))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(Person &amp;p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="keyword">this</span>-&gt;name != p.name) || (<span class="keyword">this</span>-&gt;age!=p.age))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;Daming&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;Lily&quot;</span>, <span class="number">19</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (p1!=p2)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;p1和p2不相等&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;p1和p2相等&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同理可以大小比较运算符重载</p>
<h4 id="函数调用运算符重载"><a href="#函数调用运算符重载" class="headerlink" title="函数调用运算符重载"></a>函数调用运算符重载</h4><ul>
<li>函数调用运算符()也可以重载</li>
<li>由于重载后使用的方式非常像函数的调用，因此称为仿函数</li>
<li>仿函数没有固定写法，非常灵活</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Print</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//函数重载运算符</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(string test)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;str= &quot;</span>&lt;&lt;test&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ADD</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (a+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Print print;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello C++&quot;</span>);</span><br><span class="line">    ADD num;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">num</span>(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;t=&quot;</span>&lt;&lt;t&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//匿名函数对象</span></span><br><span class="line">    cout&lt;&lt;<span class="built_in">ADD</span>()(<span class="number">20</span>, <span class="number">30</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">str= hello C++</span></span><br><span class="line"><span class="comment">t=5</span></span><br><span class="line"><span class="comment">50</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p><code>class 子类 : 继承方式 父类</code></p>
<p>未继承前</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JAVA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;首页、公开课、登录、注册&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;帮助中心、交流合作、站内地图。。。（公共底部）&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Java、python、c/c++。。。。&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Java学科&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Python</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;首页、公开课、登录、注册&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;帮助中心、交流合作、站内地图。。。（公共底部）&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Java、python、c/c++。。。。&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Python学科&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JAVA j;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------JAVA------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    j.<span class="built_in">header</span>();</span><br><span class="line">    j.<span class="built_in">footer</span>();</span><br><span class="line">    j.<span class="built_in">left</span>();</span><br><span class="line">    j.<span class="built_in">content</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    Python p;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------Python------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    p.<span class="built_in">header</span>();</span><br><span class="line">    p.<span class="built_in">footer</span>();</span><br><span class="line">    p.<span class="built_in">left</span>();</span><br><span class="line">    p.<span class="built_in">content</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;--------------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-------JAVA------</span></span><br><span class="line"><span class="comment">首页、公开课、登录、注册</span></span><br><span class="line"><span class="comment">帮助中心、交流合作、站内地图。。。（公共底部）</span></span><br><span class="line"><span class="comment">Java、python、c/c++。。。。</span></span><br><span class="line"><span class="comment">Java学科</span></span><br><span class="line"><span class="comment">-------------------</span></span><br><span class="line"><span class="comment">-------Python------</span></span><br><span class="line"><span class="comment">首页、公开课、登录、注册</span></span><br><span class="line"><span class="comment">帮助中心、交流合作、站内地图。。。（公共底部）</span></span><br><span class="line"><span class="comment">Java、python、c/c++。。。。</span></span><br><span class="line"><span class="comment">Python学科</span></span><br><span class="line"><span class="comment">--------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>继承后</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Basic</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;首页、公开课、登录、注册&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;帮助中心、交流合作、站内地图。。。（公共底部）&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Java、python、c/c++。。。。&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JAVA</span>:</span><span class="keyword">public</span> Basic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Java学科&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Python</span>:</span><span class="keyword">public</span> Basic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Python学科&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>优点:</p>
<p>减少重复代码</p>
<h4 id="继承方式"><a href="#继承方式" class="headerlink" title="继承方式"></a>继承方式</h4><ul>
<li>公共继承<code>public</code></li>
<li>保护继承<code>priotected</code></li>
<li>私有继承<code>private</code></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">One</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Two</span>:</span><span class="keyword">public</span> One</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a = <span class="number">10</span>;<span class="comment">//父类的公共权限，在子类为公共权限</span></span><br><span class="line">        b = <span class="number">20</span>;<span class="comment">//父类的保护权限，在子类为保护权限（类内可以访问,类外访问不到）</span></span><br><span class="line">        <span class="comment">//c = 30;//父类私有权限访问不到</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Three</span>:</span> <span class="keyword">protected</span> One</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a = <span class="number">10</span>;<span class="comment">//父类的公共权限，在子类为保护权限（类内可以访问,类外访问不到）</span></span><br><span class="line">        b = <span class="number">20</span>;<span class="comment">//父类的保护权限，在子类为保护权限（类内可以访问,类外访问不到）</span></span><br><span class="line">        <span class="comment">//c = 30;//父类私有权限访问不到</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Four</span>:</span> <span class="keyword">private</span> One</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a = <span class="number">10</span>;<span class="comment">//父类的公共权限，在子类为私有权限访问不到</span></span><br><span class="line">        b = <span class="number">20</span>;<span class="comment">//父类的保护权限，在子类为私有权限访问不到</span></span><br><span class="line">        <span class="comment">//c = 30;//父类私有权限访问不到</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="继承中的对象模型"><a href="#继承中的对象模型" class="headerlink" title="继承中的对象模型"></a>继承中的对象模型</h4><ul>
<li>父类中所有非静态成员属性都会被子类继承下去</li>
<li>父类中私有成员属性 是被编译器给隐藏，因此访问不到，但是会被继承下去</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> A</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    B demo;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;sizeof demo=&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(demo)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sizeof demo=16</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="构造和析构顺序"><a href="#构造和析构顺序" class="headerlink" title="构造和析构顺序"></a>构造和析构顺序</h4><p>先有父类后有子类</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Basic</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Basic</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Basic的构造函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~ <span class="built_in">Basic</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Basic的析构函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span>:</span><span class="keyword">public</span> Basic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Son</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Son的构造函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~ <span class="built_in">Son</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Son的析构函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Son s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Basic的构造函数</span></span><br><span class="line"><span class="comment">Son的构造函数</span></span><br><span class="line"><span class="comment">Son的析构函数</span></span><br><span class="line"><span class="comment">Basic的析构函数</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="同名成员处理"><a href="#同名成员处理" class="headerlink" title="同名成员处理"></a>同名成员处理</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Basic</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span>:</span><span class="keyword">public</span> Basic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Son s;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s.a=&quot;</span>&lt;&lt;s.a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s.Basic::a=&quot;</span>&lt;&lt;s.Basic::a&lt;&lt;endl;</span><br><span class="line">    s.<span class="built_in">func</span>();</span><br><span class="line">    s.Basic::<span class="built_in">func</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">s.a=5</span></span><br><span class="line"><span class="comment">s.Basic::a=10</span></span><br><span class="line"><span class="comment">Son_func</span></span><br><span class="line"><span class="comment">Basic_func</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="同名静态成员"><a href="#同名静态成员" class="headerlink" title="同名静态成员"></a>同名静态成员</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Basic</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> a;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Basic::a=<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span>:</span><span class="keyword">public</span> Basic</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> a;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Son::a=<span class="number">100</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过对象访问</span></span><br><span class="line">    Son s;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s.a=&quot;</span>&lt;&lt;s.a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s.Basic::a=&quot;</span>&lt;&lt;s.Basic::a&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//通过类名访问</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Son::a=&quot;</span>&lt;&lt;Son::a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Son::Basic::a=&quot;</span>&lt;&lt;Son::Basic::a&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">s.a=100</span></span><br><span class="line"><span class="comment">s.Basic::a=10</span></span><br><span class="line"><span class="comment">Son::a=100</span></span><br><span class="line"><span class="comment">Son::Basic::a=10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="多继承语法"><a href="#多继承语法" class="headerlink" title="多继承语法"></a>多继承语法</h4><p><strong>允许一个类继承多个类</strong></p>
<p>语法: <code>class 子类 ：继承方式 父类1, 继承方式 父类2</code></p>
<h4 id="菱形继承"><a href="#菱形继承" class="headerlink" title="菱形继承"></a>菱形继承</h4><p><strong>案例：</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220906165605679.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220906165605679.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220906165605679"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animals</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> age = <span class="number">10</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sheep</span>:</span> <span class="keyword">virtual</span> <span class="keyword">public</span> Animals</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> age=<span class="number">8</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Camel</span>:</span> <span class="keyword">virtual</span> <span class="keyword">public</span> Animals</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> age=<span class="number">5</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Alpaca</span>:</span><span class="keyword">public</span> Sheep, <span class="keyword">public</span> Camel</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Alpaca a;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a.Sheep::age=&quot;</span>&lt;&lt;a.Sheep::age&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a.Camel::age=&quot;</span>&lt;&lt;a.Camel::age&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a.Sheep::age=8</span></span><br><span class="line"><span class="comment">a.Camel::age=5</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><h4 id="基本概念及语法"><a href="#基本概念及语法" class="headerlink" title="基本概念及语法"></a>基本概念及语法</h4><p><strong>多态是C++面向对象三大特性之一</strong></p>
<p>多态分为两类：</p>
<ul>
<li>静态多态：函数重载和运算符重载属于静态多态，复用函数名</li>
<li>动态多态：派生类和虚函数实现运行多态</li>
</ul>
<p>静态多态和动态多态区别：</p>
<ul>
<li>静态多态的函数地址早绑定 - 编译阶段确定函数地址</li>
<li>动态多态的函数地址晚绑定 - 运行阶段确定函数地址</li>
</ul>
<p>条件：</p>
<ul>
<li>有父子关系</li>
<li>子类重写父类中的虚函数</li>
</ul>
<p>动态多态使用：</p>
<ul>
<li>父类的指针或者引用 执行子类对象</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//加上virtual后多种形态 Output:小猫喵喵喵</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;动物在说话&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;小猫喵喵喵&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;小狗汪汪汪&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//如果想执行让猫说话，那么这个函数地址就不能提前绑定</span></span><br><span class="line"><span class="comment">// 需要在运行阶段进行绑定，地址晚绑定</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doSpeak</span><span class="params">(Animal &amp;animal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   animal.<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Cat cat;</span><br><span class="line">    <span class="built_in">doSpeak</span>(cat);<span class="comment">//Output:动物在说话</span></span><br><span class="line">    Dog dog;</span><br><span class="line">    <span class="built_in">doSpeak</span>(dog);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">小猫喵喵喵</span></span><br><span class="line"><span class="comment">小狗汪汪汪</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="多态原理剖析"><a href="#多态原理剖析" class="headerlink" title="多态原理剖析"></a>多态原理剖析</h4><p><strong>多态案例—-计算器类</strong></p>
<p>案例描述</p>
<p>分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类</p>
<p>多态的优点:</p>
<ul>
<li>代码组织结构清晰</li>
<li>可读性强</li>
<li>利于前期和后期的扩展以及维护</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getRes</span><span class="params">(string oper)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(oper ==<span class="string">&quot;+&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> num1+num2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(oper ==<span class="string">&quot;-&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> num1-num2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(oper ==<span class="string">&quot;*&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> num1*num2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> num1;</span><br><span class="line">    <span class="keyword">int</span> num2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//实现计算器抽象类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstracCalc</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span>  <span class="title">getRes</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> num1;</span><br><span class="line">    <span class="keyword">int</span> num2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">AddCalc</span>:</span><span class="keyword">public</span> AbstracCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getRes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> num1 + num2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">MulCalc</span>:</span><span class="keyword">public</span> AbstracCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getRes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num1 * num2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">SubCalc</span>:</span><span class="keyword">public</span> AbstracCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getRes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> num1 - num2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Calculator c;</span><br><span class="line">    c.num1 = <span class="number">10</span>;</span><br><span class="line">    c.num2 = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;---test01---&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;c.num1&lt;&lt;<span class="string">&quot;+&quot;</span>&lt;&lt;c.num2&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;c.<span class="built_in">getRes</span>(<span class="string">&quot;+&quot;</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;---test02---&quot;</span>&lt;&lt;endl;</span><br><span class="line">    AbstracCalc * p = <span class="keyword">new</span> AddCalc;</span><br><span class="line">    p-&gt;num1 = <span class="number">10</span>;</span><br><span class="line">    p-&gt;num2 = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;p-&gt;num1&lt;&lt;<span class="string">&quot;+&quot;</span>&lt;&lt;p-&gt;num2&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;p-&gt;<span class="built_in">getRes</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line">    p = <span class="keyword">new</span> SubCalc;</span><br><span class="line">    p-&gt;num1 = <span class="number">10</span>;</span><br><span class="line">    p-&gt;num2 = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;p-&gt;num1&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;p-&gt;num2&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;p-&gt;<span class="built_in">getRes</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line">    p = <span class="keyword">new</span> MulCalc;</span><br><span class="line">    p-&gt;num1 = <span class="number">10</span>;</span><br><span class="line">    p-&gt;num2 = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;p-&gt;num1&lt;&lt;<span class="string">&quot;*&quot;</span>&lt;&lt;p-&gt;num2&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;p-&gt;<span class="built_in">getRes</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">---test01---</span></span><br><span class="line"><span class="comment">10+20=30</span></span><br><span class="line"><span class="comment">---test02---</span></span><br><span class="line"><span class="comment">10+20=30</span></span><br><span class="line"><span class="comment">10-20=200</span></span><br><span class="line"><span class="comment">10*20=-10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>多态实现好处：</p>
<ul>
<li>如果想扩展新功能，需求修改源码</li>
<li>在真是开发中，提倡开闭原则</li>
<li>开闭原则：对扩展进行开放，对修改进行关闭</li>
</ul>
<h4 id="纯虚函数与抽象类"><a href="#纯虚函数与抽象类" class="headerlink" title="纯虚函数与抽象类"></a>纯虚函数与抽象类</h4><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容</p>
<p>大此可以将虚函数改为纯虚函数</p>
<p><strong>纯虚函数语法:</strong> <code>virtual 返回值类型 函数名〔参数列表)= 0</code></p>
<p>当类中有了纯虚函数，这个类也称为抽象类</p>
<p><strong>抽象类特点：</strong></p>
<ul>
<li>无法实例化对象</li>
<li>子类必须<strong>重写</strong>抽象类中的纯虚函数，否则也属于抽象类</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//无法实例化对象</span></span><br><span class="line">    <span class="comment">//抽象类子类必须重写纯虚函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span>:</span><span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;func调用&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//多态调用</span></span><br><span class="line">    Base *base = <span class="keyword">new</span> Son;</span><br><span class="line">    base-&gt;<span class="built_in">func</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">func调用</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><strong>多态案例二-制作饮品</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractDrink</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//煮水</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//冲泡</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//导入杯中</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//放入辅料</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Make</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">Boil</span>();</span><br><span class="line">        <span class="built_in">Brew</span>();</span><br><span class="line">        <span class="built_in">PourInCup</span>();</span><br><span class="line">        <span class="built_in">PutSomething</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span>:</span><span class="keyword">public</span> AbstractDrink</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//煮水</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;煮水&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//冲泡</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;冲泡咖啡&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//导入杯中</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;放入杯子&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//放入辅料</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;加糖&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Milktea</span>:</span><span class="keyword">public</span> AbstractDrink</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//煮水</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;煮水&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//冲泡</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;冲泡奶茶&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//导入杯中</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;放入杯子&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//放入辅料</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;加糖加奶&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">(AbstractDrink *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    abs-&gt;<span class="built_in">Make</span>();</span><br><span class="line">    <span class="keyword">delete</span> abs;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">doWork</span>(<span class="keyword">new</span> Coffee);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;--------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">doWork</span>(<span class="keyword">new</span> Milktea);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">煮水</span></span><br><span class="line"><span class="comment">冲泡咖啡</span></span><br><span class="line"><span class="comment">放入杯子</span></span><br><span class="line"><span class="comment">加糖</span></span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line"><span class="comment">煮水</span></span><br><span class="line"><span class="comment">冲泡奶茶</span></span><br><span class="line"><span class="comment">放入杯子</span></span><br><span class="line"><span class="comment">加糖加奶</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h4 id="虚析构和纯虚析构"><a href="#虚析构和纯虚析构" class="headerlink" title="虚析构和纯虚析构"></a>虚析构和纯虚析构</h4><p>多态使用时，如果子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码</p>
<p>解决方式:将父类中的析构函数改为虚析构或者纯虚析构</p>
<p>虚析构和纯虚析构共性:</p>
<p><strong>可以解决父类指针释放子类对象都需要有具体的函数实现</strong></p>
<p>虚析构和纯虚析构区别:</p>
<p><strong>如果是纯虚析构，该类属于抽象类，无法实例化对象</strong></p>
<p>虚析构语法：</p>
<p><code>virtual ~类名()&#123;&#125;</code></p>
<p>纯虚析构语法:</p>
<p><code>virtual ~类名()&#123;&#125;=0</code></p>
<p><code>类名::~类名()&#123;&#125;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Animal</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Animal的构造函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//利用虚析构可以解决父类指针释放不干净</span></span><br><span class="line">    <span class="comment">//不加virtual不会输出Cat的析构函数</span></span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">Animal</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Animal的析构函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Cat</span> (string name)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Cat的构造函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">        Cat_name = <span class="keyword">new</span> <span class="built_in">string</span> (name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;*Cat_name&lt;&lt;<span class="string">&quot;小猫喵喵瞄&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Cat</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Cat_name != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Cat的析构函数&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">delete</span> Cat_name;</span><br><span class="line">            Cat_name = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    string *Cat_name;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Animal *cat = <span class="keyword">new</span> <span class="built_in">Cat</span>(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">    cat-&gt;<span class="built_in">speak</span>();</span><br><span class="line">    <span class="keyword">delete</span> cat;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Animal的构造函数</span></span><br><span class="line"><span class="comment">Cat的构造函数</span></span><br><span class="line"><span class="comment">Tom小猫喵喵瞄</span></span><br><span class="line"><span class="comment">Cat的析构函数</span></span><br><span class="line"><span class="comment">Animal的析构函数</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p><strong>多态案例三-电脑组装需求分析</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CPU</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memory</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Computer</span>(CPU *cpu, Video *video, Memory *mem)</span><br><span class="line">    &#123;</span><br><span class="line">        m_cpu = cpu;</span><br><span class="line">        m_cv = video;</span><br><span class="line">        m_mem = mem;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m_cpu-&gt;<span class="built_in">calculate</span>();</span><br><span class="line">        m_cv-&gt;<span class="built_in">display</span>();</span><br><span class="line">        m_mem-&gt;<span class="built_in">storage</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Computer</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(m_cpu != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span> m_cpu;</span><br><span class="line">            m_cpu = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m_cv != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span> m_cv;</span><br><span class="line">            m_cv = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m_mem != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span> m_mem;</span><br><span class="line">            m_mem = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    CPU *m_cpu;</span><br><span class="line">    Video * m_cv;</span><br><span class="line">    Memory * m_mem;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelCPU</span>:</span><span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Intel的CPU开始工作&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelVideo</span>:</span><span class="keyword">public</span> Video</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Intel的Video开始工作&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelMemory</span>:</span><span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Intel的Memory开始工作&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoCPU</span>:</span><span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Lenovo的CPU开始工作&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoVideo</span>:</span><span class="keyword">public</span> Video</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Lenovo的Video开始工作&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoMemory</span>:</span><span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Lenovo的Memory开始工作&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    CPU * intelcpu = <span class="keyword">new</span> IntelCPU;</span><br><span class="line">    Video * intelvideo = <span class="keyword">new</span> IntelVideo;</span><br><span class="line">    Memory * intelmem = <span class="keyword">new</span> IntelMemory;</span><br><span class="line">    <span class="comment">//组装第一台</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------组装第一台--------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    Computer * computer1 = <span class="keyword">new</span> <span class="built_in">Computer</span>(intelcpu, intelvideo, intelmem);</span><br><span class="line">    computer1-&gt;<span class="built_in">doWork</span>();</span><br><span class="line">    <span class="keyword">delete</span> computer1;<span class="comment">//只释放了电脑，为释放零件，需要在析构函数中释放</span></span><br><span class="line">    <span class="comment">//组装第二胎</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------组装第二台--------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    Computer * computer2 = <span class="keyword">new</span> <span class="built_in">Computer</span>(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> LenovoVideo, <span class="keyword">new</span> LenovoMemory);</span><br><span class="line">    computer2-&gt;<span class="built_in">doWork</span>();</span><br><span class="line">    <span class="keyword">delete</span> computer2;<span class="comment">//只释放了电脑，为释放零件，需要在析构函数中释放</span></span><br><span class="line">    <span class="comment">//组装第三胎</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-------组装第三台--------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    Computer * computer3 = <span class="keyword">new</span> <span class="built_in">Computer</span>(<span class="keyword">new</span> LenovoCPU, <span class="keyword">new</span> IntelVideo, <span class="keyword">new</span> LenovoMemory);</span><br><span class="line">    computer3-&gt;<span class="built_in">doWork</span>();</span><br><span class="line">    <span class="keyword">delete</span> computer3;<span class="comment">//只释放了电脑，为释放零件，需要在析构函数中释放</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-------组装第一台--------</span></span><br><span class="line"><span class="comment">Intel的CPU开始工作</span></span><br><span class="line"><span class="comment">Intel的Video开始工作</span></span><br><span class="line"><span class="comment">Intel的Memory开始工作</span></span><br><span class="line"><span class="comment">-------组装第二台--------</span></span><br><span class="line"><span class="comment">Lenovo的CPU开始工作</span></span><br><span class="line"><span class="comment">Lenovo的Video开始工作</span></span><br><span class="line"><span class="comment">Lenovo的Memory开始工作</span></span><br><span class="line"><span class="comment">-------组装第三台--------</span></span><br><span class="line"><span class="comment">Lenovo的CPU开始工作</span></span><br><span class="line"><span class="comment">Intel的Video开始工作</span></span><br><span class="line"><span class="comment">Lenovo的Memory开始工作</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++提高编程——模板/容器</title>
    <url>/2022/12/16/C-%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B%E2%80%94%E2%80%94%E6%A8%A1%E6%9D%BF%E3%80%81%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-提高编程——模板-容器"><a href="#C-提高编程——模板-容器" class="headerlink" title="C++提高编程——模板/容器"></a>C++提高编程——模板/容器</h1><p>本阶段主要针对C++泛型编程和STL技术做详细讲解，探讨C++更深层的使用</p>
<h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><h3 id="模板的概念"><a href="#模板的概念" class="headerlink" title="模板的概念"></a>模板的概念</h3><p>模板就是建立通用的模具，大大提高复用性。</p>
<h3 id="函数模板"><a href="#函数模板" class="headerlink" title="函数模板"></a>函数模板</h3><ul>
<li>C++另一种编程思想称为<strong>泛型编程</strong>，主要利用的技术就是模板</li>
<li>C++提供两种模板机制:函数模板和类模板</li>
</ul>
<h4 id="函数模板语法"><a href="#函数模板语法" class="headerlink" title="函数模板语法"></a>函数模板语法</h4><p><strong>函数模板作用:</strong></p>
<p>建立一个通用函数，其函数返回值类型和形参类型可以不具体制定，用一个<strong>虚拟的类型</strong>来代表。</p>
<p>语法：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="comment">//函数声明或定义</span></span><br></pre></td></tr></table></figure>
<p>解释:</p>
<ul>
<li><code>template</code> —-声明创建模板</li>
<li><code>typename</code> —-表面其后面的符号是一种数据类型，可以用class代替</li>
<li><code>T</code>—-通用的数据类型，名称可以替换，通常为大写字母</li>
</ul>
<p>eg:</p>
<p>普通写法</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Swap_Int</span><span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Swap_Double</span><span class="params">(<span class="keyword">double</span> &amp;a, <span class="keyword">double</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Before Swap_Int&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">Swap_Int</span>(a, b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;After Swap_Int&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">double</span> x = <span class="number">3.14</span>, y = <span class="number">2.15</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Before Swap_Double&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;y = &quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">Swap_Double</span>(x, y);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;After Swap_Double&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;y = &quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>模板方式：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;<span class="comment">//声明一个模板，告诉编译器后面代码中紧跟着的T不要报错，T是一个通用数据类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MySwap</span><span class="params">(T &amp;a, T &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//利用函数模板交换</span></span><br><span class="line">    <span class="comment">//两种使用方法推到</span></span><br><span class="line">    <span class="comment">//1.自动类型推导</span></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Before MySwap&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">MySwap</span>(a, b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;After MySwap&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//2.显示指定类型</span></span><br><span class="line">    <span class="keyword">double</span> x = <span class="number">3.14</span>, y = <span class="number">2.15</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Before MySwap&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;y = &quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    MySwap&lt;<span class="keyword">double</span>&gt;(x, y);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;After MySwap&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;x = &quot;</span>&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;y = &quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    test01();</span></span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************</span></span><br><span class="line">Before MySwap</span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">After MySwap</span><br><span class="line">a = <span class="number">20</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line">Before MySwap</span><br><span class="line">x = <span class="number">3.14</span></span><br><span class="line">y = <span class="number">2.15</span></span><br><span class="line">After MySwap</span><br><span class="line">x = <span class="number">2.15</span></span><br><span class="line">y = <span class="number">3.14</span></span><br></pre></td></tr></table></figure>
<p>注意事项:</p>
<ul>
<li>自动类型推导，必须推导出一致的数据类型T,才可以使用</li>
<li>模板必须要确定出T的数据类型，才可以使用</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span><span class="comment">//声明一个模板，告诉编译器后面代码中紧跟着的T不要报错，T是一个通用数据类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MySwap</span><span class="params">(T &amp;a, T &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Before MySwap&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">MySwap</span>(a, b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;After MySwap&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test03</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总结:</p>
<ul>
<li>使用模板时必须确定出通用数据类型T，并且能够推导出一致的类型</li>
</ul>
<h4 id="函数模板案例"><a href="#函数模板案例" class="headerlink" title="函数模板案例"></a>函数模板案例</h4><p>案例描述:</p>
<ul>
<li>利用函数模板封装一个排序的函数，可以对不同数据类型数组进行排序</li>
<li>排序规则从大到小，排序算法为选择排序</li>
<li>分别利用<code>char</code>数组和<code>int</code>数组进行测试</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class S&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sort</span><span class="params">(S &amp;a, S &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    S t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MySort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> max = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[max]&lt;arr[j])</span><br><span class="line">            &#123;</span><br><span class="line">                max = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max != i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Sort</span>(arr[i], arr[max]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Printf_Arr</span><span class="params">(P arr[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> charArr[] = <span class="string">&quot;bsagc&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> length = <span class="built_in"><span class="keyword">sizeof</span></span>(charArr)/<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span>);</span><br><span class="line">    <span class="built_in">Printf_Arr</span>(charArr, length);</span><br><span class="line">    <span class="built_in">MySort</span>(charArr, length);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;sort.....&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">Printf_Arr</span>(charArr, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> numArr[] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> length = <span class="built_in"><span class="keyword">sizeof</span></span>(numArr)/<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">Printf_Arr</span>(numArr, length);</span><br><span class="line">    <span class="built_in">MySort</span>(numArr, length);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;sort.....&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">Printf_Arr</span>(numArr, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Test01&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">Test01</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Test02&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">Test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*****************************</span></span><br><span class="line">Test01</span><br><span class="line">b s a g c</span><br><span class="line">sort.....</span><br><span class="line">s g c b a</span><br><span class="line">Test02</span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">8</span> <span class="number">5</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span></span><br><span class="line">sort.....</span><br><span class="line"><span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="普通函数与函数模板的区别"><a href="#普通函数与函数模板的区别" class="headerlink" title="普通函数与函数模板的区别"></a>普通函数与函数模板的区别</h4><p>普通函数与函数模板区别:</p>
<ul>
<li>普通函数调用时可以发生自动类型转换（隐式类型转换)</li>
<li>函数模板调用时，如果利用自动类型推导，不会发生隐式类型转换</li>
<li>如果利用显示指定类型的方式，可以发生隐式类型转换</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a = <span class="string">&#x27;a&#x27;</span>;<span class="comment">//ASC &#x27;a&#x27;=97</span></span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">5</span>;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">Add</span>(a, b)&lt;&lt;endl;<span class="comment">//自动将char类型转换为int类型,即隐式转换</span></span><br><span class="line">    <span class="comment">//cout&lt;&lt;MyAdd(a, b)&lt;&lt;endl;//不可以自动推到为隐式转换,Error</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;MyAdd&lt;int&gt;(a, b)&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;MyAdd&lt;<span class="keyword">int</span>&gt;(a, b)&lt;&lt;endl;<span class="comment">//显示指定类型隐式转换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//********************************</span></span><br><span class="line"><span class="number">102</span></span><br><span class="line">MyAdd&lt;<span class="keyword">int</span>&gt;(a, b)</span><br><span class="line"><span class="number">102</span></span><br></pre></td></tr></table></figure>
<h4 id="普通函数模板与函数模板的调用规则"><a href="#普通函数模板与函数模板的调用规则" class="headerlink" title="普通函数模板与函数模板的调用规则"></a>普通函数模板与函数模板的调用规则</h4><p>调用规则如下:</p>
<ul>
<li>如果函数模板和普通函数都可以实现，优先调用普通函数</li>
<li>可以通过空模板参数列表来强制调用函数模板</li>
<li>函数模板也可以发生重载</li>
<li>如果函数模板可以产生更好的匹配,优先调用函数模板</li>
</ul>
<h4 id="模板的局限性"><a href="#模板的局限性" class="headerlink" title="模板的局限性"></a>模板的局限性</h4><p>局限性:</p>
<ul>
<li>模板的通用性并不是万能的</li>
</ul>
<p>eg:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T a, T b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在上述代码中提供的赋值操作，如果传入的a和b是一个数组，就无法实现了</p>
<p>eg:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T a, T b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)&#123;....&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在上述代码中，如果T的数据类型传入的是像Person这样的自定义数据类型，也无法正常运行</p>
<p>因此C++为了解决这种问题，提供模板的重载，可以为这些<strong>特定的类型提供具体化的模板</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(string name, <span class="keyword">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;P_name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;P_age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    string P_name;</span><br><span class="line">    <span class="keyword">int</span> P_age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MyCompare</span><span class="params">(T &amp;a, T &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用具体化Person版本实现代码,具体优化调用</span></span><br><span class="line"><span class="keyword">template</span>&lt;&gt; <span class="function"><span class="keyword">bool</span> <span class="title">MyCompare</span><span class="params">(Person &amp;a, Person &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.P_age == b.P_age)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">bool</span> res = <span class="built_in">MyCompare</span>(a, b);</span><br><span class="line">    <span class="keyword">if</span>(res)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;两数相等&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;两数不相等&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person <span class="title">a</span><span class="params">(<span class="string">&quot;Daming&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">b</span><span class="params">(<span class="string">&quot;Lilei&quot;</span>, <span class="number">19</span>)</span></span>;</span><br><span class="line">    <span class="keyword">bool</span> res = <span class="built_in">MyCompare</span>(a, b);</span><br><span class="line">    <span class="keyword">if</span>(res)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;a = b&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;a != b&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************</span></span><br><span class="line">两数不相等</span><br><span class="line">a != b</span><br></pre></td></tr></table></figure>
<p>总结:</p>
<ul>
<li>利用具体化的模板，可以解决自定义类型的通用化</li>
<li>学习模板并不是为了写模板，而是在STL能够运用系统提供的模板</li>
</ul>
<h3 id="类模板"><a href="#类模板" class="headerlink" title="类模板"></a>类模板</h3><h4 id="类模板语法"><a href="#类模板语法" class="headerlink" title="类模板语法"></a>类模板语法</h4><p>类模板作用:</p>
<ul>
<li>建立一个通用类，类中的成员数据类型可以不具体制定，用一个虚拟的类型来代表。</li>
</ul>
<p>语法：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">类</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">NameType</span>, <span class="keyword">class</span> <span class="title">AgeType</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(NameType name, AgeType age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;P_name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;P_age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPerson</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Name:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;P_name&lt;&lt;<span class="string">&quot; Age:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;P_age&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    string P_name;</span><br><span class="line">    <span class="keyword">int</span> P_age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">a</span><span class="params">(<span class="string">&quot;Daming&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    a.<span class="built_in">ShowPerson</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="类模板中成员函数的创建时机"><a href="#类模板中成员函数的创建时机" class="headerlink" title="类模板中成员函数的创建时机"></a>类模板中成员函数的创建时机</h4><p>类模板中成员函数和普通类中成员函数创建时机是有区别的:</p>
<ul>
<li>普通类中的成员函数—开始就可以创建</li>
<li>类模板中的成墨函数在调用时才创建</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPerson1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       cout&lt;&lt;<span class="string">&quot;Person1&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ShowPerson2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Person2&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    T obj;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        obj.<span class="built_in">ShowPerson1</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        obj.<span class="built_in">ShowPerson2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MyClass&lt;Person1&gt; p;</span><br><span class="line">    p.<span class="built_in">func1</span>();</span><br><span class="line"><span class="comment">//    p.func2();</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*******************************</span></span><br><span class="line">Person1</span><br></pre></td></tr></table></figure>
<h4 id="类模板对象做函数参数"><a href="#类模板对象做函数参数" class="headerlink" title="类模板对象做函数参数"></a>类模板对象做函数参数</h4><p>学习目标：</p>
<p>类模板实例化出的对象，向函数传参的方式。</p>
<p>三种传入方式：</p>
<ul>
<li>指定传入的类型—-直接显示对象的数据类型</li>
<li>参数模板化—-将对象中的参数变为模板进行传递</li>
<li>整个类模板化干-将这个对象类型模板化进行传递 </li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(T1 name, T2 age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">show_person</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Age&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    T1 m_Name;</span><br><span class="line">    T2 m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//1、指定传入类型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintPerson</span><span class="params">( Person&lt;string, <span class="keyword">int</span>&gt; &amp;p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p.<span class="built_in">show_person</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">110</span>)</span></span>;</span><br><span class="line">    <span class="built_in">PrintPerson</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、参数模板化</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintPerson2</span><span class="params">( Person&lt;T1, T2&gt; &amp;p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p.<span class="built_in">show_person</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;T1的类型：&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">typeid</span></span>(T1).<span class="built_in">name</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;T2的类型：&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">typeid</span></span>(T2).<span class="built_in">name</span>()&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">&quot;猪八戒&quot;</span>, <span class="number">100</span>)</span></span>;</span><br><span class="line">    <span class="built_in">PrintPerson2</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3、整个类模板化</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintPerson3</span><span class="params">(T  &amp;p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p.<span class="built_in">show_person</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;T的类型：&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">typeid</span></span>(T).<span class="built_in">name</span>()&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">&quot;唐僧&quot;</span>, <span class="number">45</span>)</span></span>;</span><br><span class="line">    <span class="built_in">PrintPerson3</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="built_in">test03</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***************************</span></span><br><span class="line">姓名:孙悟空 年龄:<span class="number">110</span></span><br><span class="line">姓名:猪八戒 年龄:<span class="number">100</span></span><br><span class="line">T1的类型：NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</span><br><span class="line">T2的类型：i</span><br><span class="line">姓名:唐僧 年龄:<span class="number">45</span></span><br><span class="line">T的类型：<span class="number">6</span>PersonINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiE</span><br></pre></td></tr></table></figure>
<p>总结:</p>
<ul>
<li>通过类模板创建的对象，可以有三种方式向函数中进行传参</li>
<li>使用比较广泛是第一种:指定传入的类型</li>
</ul>
<h4 id="类模板与继承"><a href="#类模板与继承" class="headerlink" title="类模板与继承"></a>类模板与继承</h4><p>当类模板碰到继承时，需要注意一下几点:</p>
<ul>
<li>当子类继承的父类是一个类模板时，子类在声明的时候，要指定出父类中T的类型</li>
<li>如果不指定，编译器无法给子类分配内存</li>
<li>如果想灵活指定出父类中T的类型，子类也需变为类模板</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    T m;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son1</span>:</span><span class="keyword">public</span> Base&lt;<span class="keyword">int</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Son1 s1;<span class="comment">//T为int类型</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果想灵活指定父类中的T类型，子类需要类变模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son2</span>:</span><span class="keyword">public</span> Base&lt;T2&gt;</span><br><span class="line">&#123;</span><br><span class="line">    T1 obj;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Son2&lt;<span class="keyword">int</span>, string&gt; s2;<span class="comment">//T为string类型</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="类模板函数的类外实现"><a href="#类模板函数的类外实现" class="headerlink" title="类模板函数的类外实现"></a>类模板函数的类外实现</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(T1 name, T2 age);</span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        this-&gt;m_Name = name;</span></span><br><span class="line"><span class="comment">//        this-&gt;m_Age = age;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        cout&lt;&lt;&quot;姓名：&quot;&lt;&lt;this-&gt;m_Name&lt;&lt;&quot; 年龄:&quot;&lt;&lt;this-&gt;m_Age&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    T1 m_Name;</span><br><span class="line">    T2 m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//构造函数类外实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line">Person&lt;T1, T2&gt;::<span class="built_in">Person</span>(T1 name, T2 age)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员函数类外实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="keyword">void</span> Person&lt;T1, T2&gt;::<span class="built_in">showPerson</span>()</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;姓名：&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Age&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">&quot;大明&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    p.<span class="built_in">showPerson</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="类模板分文件编写"><a href="#类模板分文件编写" class="headerlink" title="类模板分文件编写"></a>类模板分文件编写</h4><p>第一种解决方式将.h头文件改为.cpp源文件</p>
<p><code>person.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MODULE_STL_PERSON_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MODULE_STL_PERSON_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(T1 name, T2 age);</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span></span>;</span><br><span class="line">    T1 m_Name;</span><br><span class="line">    T2 m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br></pre></td></tr></table></figure>
<p><code>person.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;person.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line">Person&lt;T1, T2&gt;::<span class="built_in">Person</span>(T1 name, T2 age)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员函数类外实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="keyword">void</span> Person&lt;T1, T2&gt;::<span class="built_in">showPerson</span>()</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;姓名：&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Age&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">//第一种解决方式将.h头文件改为.cpp源文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;person.cpp&quot;</span></span></span><br><span class="line"><span class="comment">//第二种解决方式将.h头文件和.cpp源文件结合后缀改为.hpp文件</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">&quot;大明&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    p.<span class="built_in">showPerson</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第二种解决方式将.h头文件和.cpp源文件结合后缀改为.hpp文件</p>
<p><code>person.hpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(T1 name, T2 age);</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span></span>;</span><br><span class="line">    T1 m_Name;</span><br><span class="line">    T2 m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line">Person&lt;T1, T2&gt;::<span class="built_in">Person</span>(T1 name, T2 age)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员函数类外实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="keyword">void</span> Person&lt;T1, T2&gt;::<span class="built_in">showPerson</span>()</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;姓名：&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Age&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;person.hpp&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Person&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">&quot;大明&quot;</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line">    p.<span class="built_in">showPerson</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***********************</span></span><br><span class="line">姓名：大明 年龄:<span class="number">18</span></span><br></pre></td></tr></table></figure>
<h4 id="类模板与友元"><a href="#类模板与友元" class="headerlink" title="类模板与友元"></a>类模板与友元</h4><h4 id="类模板案例"><a href="#类模板案例" class="headerlink" title="类模板案例"></a>类模板案例</h4><p>案例描述：实现一个通用的数组类，要求如下：</p>
<ul>
<li>可以对内置数据类型以及自定义数据类型的数据进行存储</li>
<li>将数组中的数据存储到堆区</li>
<li>构造函数中可以传入数组的容量</li>
<li>提供对应的拷贝构造函数以及operator=防止浅拷贝问题</li>
<li>提供尾插法和尾删法对数组中的数据进行增加和删除</li>
<li>可以通过下标的方式访问数组中的元素</li>
<li>可以获取数组中当前元素个数和数组的容量</li>
</ul>
<p>eg:</p>
<p><code>myArray.hpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYARRAY_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYARRAY_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyArray</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyArray</span>(<span class="keyword">int</span> capacity)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;MyArray的有参构造&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Capacity = capacity;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;pAddress = <span class="keyword">new</span> T[<span class="keyword">this</span>-&gt;m_Capacity];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//拷贝构造</span></span><br><span class="line">    <span class="built_in">MyArray</span>(<span class="keyword">const</span> MyArray&amp; arr)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;MyArray的拷贝构造&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Capacity = arr.m_Capacity;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size = arr.m_Size;</span><br><span class="line">        <span class="comment">//深拷贝</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;pAddress = <span class="keyword">new</span> T[arr.m_Capacity];</span><br><span class="line">        <span class="comment">//将arr中的数据拷贝过来</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>-&gt;m_Size;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;pAddress[i] = arr.pAddress[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    MyArray&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> MyArray&amp; arr)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;MyArray的operatot=&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;pAddress != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;pAddress;</span><br><span class="line">            <span class="keyword">this</span>-&gt;pAddress = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Capacity = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//深拷贝</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Capacity = arr.m_Capacity;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size = arr.m_Size;</span><br><span class="line">        <span class="keyword">this</span>-&gt;pAddress = <span class="keyword">new</span> T[arr.m_Capacity];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>-&gt;m_Size;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;pAddress[i] = arr.pAddress[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//尾插</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Push_Back</span><span class="params">(<span class="keyword">const</span> T &amp; val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断容量是否等于大小</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_Capacity == <span class="keyword">this</span>-&gt;m_Size)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>-&gt;pAddress[<span class="keyword">this</span>-&gt;m_Size] = val;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//尾删</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Pop_Back</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//让用户访问不到最后一个元素，即尾删，逻辑删除</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_Size == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Size--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过下标方式访问数据元素 arr[0]=100</span></span><br><span class="line">    T&amp; <span class="keyword">operator</span>[](<span class="keyword">int</span> index)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>-&gt;pAddress[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回数组容量</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetCapacity</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>-&gt;m_Capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回数组大小</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetSize</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>-&gt;m_Size;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">MyArray</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;pAddress != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;pAddress;</span><br><span class="line">            <span class="keyword">this</span>-&gt;pAddress = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;MyArray的析构&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T * pAddress;</span><br><span class="line">    <span class="keyword">int</span> m_Capacity;</span><br><span class="line">    <span class="keyword">int</span> m_Size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>main.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MyArray.hpp&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintArr</span><span class="params">(MyArray&lt;<span class="keyword">int</span>&gt;&amp; arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.<span class="built_in">GetSize</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">MyArray&lt;<span class="keyword">int</span>&gt; <span class="title">arr1</span><span class="params">(<span class="number">5</span>)</span></span>;</span><br><span class="line"><span class="comment">//    MyArray&lt;int&gt; arr2(arr1);</span></span><br><span class="line"><span class="comment">//    MyArray&lt;int&gt; arr3(100);</span></span><br><span class="line"><span class="comment">//    arr2 = arr3;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr1.<span class="built_in">Push_Back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr1的打印输出:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">PrintArr</span>(arr1);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr1的容量为:&quot;</span>&lt;&lt;arr1.<span class="built_in">GetCapacity</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr1的大小为:&quot;</span>&lt;&lt;arr1.<span class="built_in">GetSize</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="function">MyArray&lt;<span class="keyword">int</span>&gt; <span class="title">arr2</span><span class="params">(arr1)</span></span>;</span><br><span class="line">    arr2.<span class="built_in">Pop_Back</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr2的打印输出:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">PrintArr</span>(arr2);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr2尾删后&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr2的容量为:&quot;</span>&lt;&lt;arr2.<span class="built_in">GetCapacity</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr2的大小为:&quot;</span>&lt;&lt;arr2.<span class="built_in">GetSize</span>()&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试自定义数据类型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Person</span>(string name, <span class="keyword">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    string m_Name;</span><br><span class="line">    <span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintPerson</span><span class="params">(MyArray&lt;Person&gt; &amp;arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.<span class="built_in">GetSize</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;arr[i].m_Name&lt;&lt;<span class="string">&quot; 年龄：&quot;</span>&lt;&lt;arr[i].m_Age&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">MyArray&lt;Person&gt; <span class="title">arr</span><span class="params">(<span class="number">7</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;李白&quot;</span>, <span class="number">35</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;韩信&quot;</span>, <span class="number">33</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">&quot;赵云&quot;</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span><span class="params">(<span class="string">&quot;典韦&quot;</span>, <span class="number">35</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span> <span class="params">(<span class="string">&quot;亚瑟&quot;</span>, <span class="number">34</span>)</span></span>;</span><br><span class="line">    arr.<span class="built_in">Push_Back</span>(p1);</span><br><span class="line">    arr.<span class="built_in">Push_Back</span>(p2);</span><br><span class="line">    arr.<span class="built_in">Push_Back</span>(p3);</span><br><span class="line">    arr.<span class="built_in">Push_Back</span>(p4);</span><br><span class="line">    arr.<span class="built_in">Push_Back</span>(p5);</span><br><span class="line">    <span class="built_in">PrintPerson</span>(arr);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr的容量为:&quot;</span>&lt;&lt;arr.<span class="built_in">GetCapacity</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;arr的大小为:&quot;</span>&lt;&lt;arr.<span class="built_in">GetSize</span>()&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;--------------test01()-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;--------------test02()-------------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">test02</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h3><h4 id="STL基本概念"><a href="#STL基本概念" class="headerlink" title="STL基本概念"></a>STL基本概念</h4><ul>
<li>STL(Standard Template Library,标准模板库)</li>
<li>STL从广义上分为:容器(container)算法(algorithm)迭代器(iterator)</li>
<li>容器和算法之间通过迭代器进行无缝连接。</li>
<li>STL几乎所有的代码都采用了模板类或者模板函数</li>
</ul>
<h4 id="STL六大组件"><a href="#STL六大组件" class="headerlink" title="STL六大组件"></a>STL六大组件</h4><p>STL大体分为六大组件，分别是:容器、算法、迭代器、仿函数、适配器（配接器)．空间配置器。</p>
<ol>
<li>容器:各种数据结构，如vector、list、deque、set、map等,用来存放数据。</li>
<li>算法:各种常用的算法，如sort、find、copy、for_each等</li>
<li>迭代器:扮演了容器与算法之间的胶合剂。</li>
<li>仿函数:行为类似函数，可作为算法的某种策略。</li>
<li>适配器:一种用来修饰容器或者仿函数或迭代器接口的东西。6.空间配置器:负责空间的配置与管理。</li>
</ol>
<h4 id="STL容器、算法、迭代器"><a href="#STL容器、算法、迭代器" class="headerlink" title="STL容器、算法、迭代器"></a>STL容器、算法、迭代器</h4><p>常用的数据结构:<strong>数组,链表,树,栈,队列,集合,映射表</strong>等</p>
<p>这些容器分为序列式容器和关联式容器两种:</p>
<p>列式容器:强调值的排序，序列式容器中的每个元素均有固定的位置。</p>
<p>关联式容器:二叉树结构，各元素之间没有严格的物理上的顺序关系</p>
<p><strong>迭代器种类：</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230111150333928.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230111150333928.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230111150333928"></p>
<h4 id="vector存放内置数据类型"><a href="#vector存放内置数据类型" class="headerlink" title="vector存放内置数据类型"></a>vector存放内置数据类型</h4><p>容器：<code>vector</code></p>
<p>算法：<code>for_each</code></p>
<p>迭代器: <code>vector&lt;int&gt;:iterator</code></p>
<p><strong>第一种遍历方式</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="comment">//向容器中插入数据</span></span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">10</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">20</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">30</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">40</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">50</span>);</span><br><span class="line">    <span class="comment">//通过迭代器访问容器中的数据</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt;::iterator itBegin = v.<span class="built_in">begin</span>();<span class="comment">//起始迭代器 指向容器中的第一个元素</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt;::iterator itEnd = v.<span class="built_in">end</span>();<span class="comment">//结束迭代器 指向容器中的最后一个元素的下一个位置</span></span><br><span class="line">    <span class="comment">//第一种遍历方式</span></span><br><span class="line">    <span class="keyword">while</span>(itBegin != itEnd)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;*itBegin&lt;&lt;endl;</span><br><span class="line">        itBegin++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>第二种遍历方式</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(vector&lt;<span class="keyword">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>(); it != v.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;*it&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>第三种遍历方式</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">(<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;val&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="comment">//向容器中插入数据</span></span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">10</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">20</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">30</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">40</span>);</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">50</span>);</span><br><span class="line">    <span class="comment">//第三章遍历方式 STL提供遍历方法</span></span><br><span class="line">    for_each(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), Print);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************************</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">40</span></span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure>
<h4 id="vector存放自定义数据类型"><a href="#vector存放自定义数据类型" class="headerlink" title="vector存放自定义数据类型"></a>vector存放自定义数据类型</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(string name, <span class="keyword">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;Age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    string Name;</span><br><span class="line">    <span class="keyword">int</span> Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;Person&gt; arr;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;aaa&quot;</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;hhh&quot;</span>, <span class="number">9</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">&quot;fff&quot;</span>, <span class="number">7</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span><span class="params">(<span class="string">&quot;eee&quot;</span>, <span class="number">13</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p5</span><span class="params">(<span class="string">&quot;ddd&quot;</span>, <span class="number">6</span>)</span></span>;</span><br><span class="line">    arr.<span class="built_in">push_back</span>(p1);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(p2);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(p3);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(p4);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(p5);</span><br><span class="line">    <span class="keyword">for</span>(vector&lt;Person&gt;::iterator i=arr.<span class="built_in">begin</span>();i!=arr.<span class="built_in">end</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;(*i).Name&lt;&lt;<span class="string">&quot; 年龄:&quot;</span>&lt;&lt;(*i).Age&lt;&lt;endl;</span><br><span class="line">        <span class="comment">//  cout&lt;&lt;&quot;姓名:&quot;&lt;&lt;i-&gt;Name&lt;&lt;&quot; 年龄:&quot;&lt;&lt;i-&gt;Age&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//**********************</span></span><br><span class="line">姓名:aaa 年龄:<span class="number">5</span></span><br><span class="line">姓名:hhh 年龄:<span class="number">9</span></span><br><span class="line">姓名:fff 年龄:<span class="number">7</span></span><br><span class="line">姓名:eee 年龄:<span class="number">13</span></span><br><span class="line">姓名:ddd 年龄:<span class="number">6</span></span><br></pre></td></tr></table></figure>
<h4 id="vector容器嵌套容器"><a href="#vector容器嵌套容器" class="headerlink" title="vector容器嵌套容器"></a>vector容器嵌套容器</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; arr;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v1;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v2;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v3;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v4;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v1.<span class="built_in">push_back</span>(i);</span><br><span class="line">        v2.<span class="built_in">push_back</span>(i+<span class="number">1</span>);</span><br><span class="line">        v3.<span class="built_in">push_back</span>(i+<span class="number">2</span>);</span><br><span class="line">        v4.<span class="built_in">push_back</span>(i+<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将小容器插入大容器中</span></span><br><span class="line">    arr.<span class="built_in">push_back</span>(v1);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(v2);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(v3);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(v4);</span><br><span class="line"><span class="comment">//    cout&lt;&lt;arr&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;::iterator i = arr.<span class="built_in">begin</span>(); i != arr.<span class="built_in">end</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(vector&lt;<span class="keyword">int</span>&gt;::iterator j = (*i).<span class="built_in">begin</span>(); j != (*i).<span class="built_in">end</span>(); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;*j&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//******************</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>
<h4 id="string构造函数"><a href="#string构造函数" class="headerlink" title="string构造函数"></a>string构造函数</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> * str = <span class="string">&quot;hello c++&quot;</span>;</span><br><span class="line">    <span class="function">string <span class="title">s2</span><span class="params">(str)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s2=&quot;</span>&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">    <span class="function">string <span class="title">s3</span><span class="params">(s2)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s3=&quot;</span>&lt;&lt;s3&lt;&lt;endl;</span><br><span class="line">    <span class="function">string <span class="title">s4</span><span class="params">(<span class="number">10</span>, <span class="string">&#x27;a&#x27;</span>)</span></span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s4=&quot;</span>&lt;&lt;s4&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***********************</span></span><br><span class="line">s2=hello c++</span><br><span class="line">s3=hello c++</span><br><span class="line">s4=aaaaaaaaaa</span><br></pre></td></tr></table></figure>
<h4 id="string赋值操作"><a href="#string赋值操作" class="headerlink" title="string赋值操作"></a>string赋值操作</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1;</span><br><span class="line">    s1 = <span class="string">&quot;hello c++&quot;</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s1=&quot;</span>&lt;&lt;s1&lt;&lt;endl;</span><br><span class="line">    string s2;</span><br><span class="line">    s2 = s1;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s2=&quot;</span>&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">    string s3;</span><br><span class="line">    s3.<span class="built_in">assign</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s3=&quot;</span>&lt;&lt;s3&lt;&lt;endl;</span><br><span class="line">    string s4;</span><br><span class="line">    s4.<span class="built_in">assign</span>(<span class="string">&quot;hello c++&quot;</span>, <span class="number">5</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s4=&quot;</span>&lt;&lt;s4&lt;&lt;endl;</span><br><span class="line">    string s5;</span><br><span class="line">    s5.<span class="built_in">assign</span>(s4);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s5=&quot;</span>&lt;&lt;s5&lt;&lt;endl;</span><br><span class="line">    string s6;</span><br><span class="line">    s6.<span class="built_in">assign</span>(<span class="number">6</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s6=&quot;</span>&lt;&lt;s6&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//*************</span></span><br><span class="line">s1=hello c++</span><br><span class="line">s2=hello c++</span><br><span class="line">s3=hello world</span><br><span class="line">s4=hello</span><br><span class="line">s5=hello</span><br><span class="line">s6=wwwwww</span><br></pre></td></tr></table></figure>
<h4 id="string查找和替换"><a href="#string查找和替换" class="headerlink" title="string查找和替换"></a>string查找和替换</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str1 = <span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> pos = str1.<span class="built_in">find</span>(<span class="string">&quot;de&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> pos1 = str1.<span class="built_in">find</span>(<span class="string">&quot;ade&quot;</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;pos=&quot;</span>&lt;&lt;pos&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;pos1=&quot;</span>&lt;&lt;pos1&lt;&lt;endl;</span><br><span class="line">    str1.<span class="built_in">replace</span>(<span class="number">1</span>, <span class="number">3</span>, <span class="string">&quot;hjk&quot;</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;str1=&quot;</span>&lt;&lt;str1&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//****************************</span></span><br><span class="line">pos=<span class="number">3</span></span><br><span class="line">pos1=<span class="number">-1</span></span><br><span class="line">str1=ahjkefg</span><br></pre></td></tr></table></figure>
<h4 id="string字符串比较"><a href="#string字符串比较" class="headerlink" title="string字符串比较"></a>string字符串比较</h4><p><code>str1.compare(str2)</code></p>
<h4 id="string字符存取"><a href="#string字符存取" class="headerlink" title="string字符存取"></a>string字符存取</h4><p><code>str1[index]</code></p>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>CLion开发STM32</title>
    <url>/2022/07/16/CLion%E5%BC%80%E5%8F%91STM32/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CLion开发STM32"><a href="#CLion开发STM32" class="headerlink" title="CLion开发STM32"></a>CLion开发STM32</h1><p>[TOC]</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h3><ul>
<li>Windows10</li>
<li><a href="https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-configurators-and-code-generators/stm32cubemx.html">STM32CubeMx</a></li>
<li><a href="https://www.jetbrains.com/clion/">CLion</a></li>
<li><a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-posix/sjlj/x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z/download?use_mirror=udomain">MinGW</a></li>
<li><a href="https://gnutoolchains.com/arm-eabi/openocd/">OpenOCD</a></li>
<li><a href="https://developer.arm.com/downloads/-/gnu-rm">arm-none-eabi-gcc</a></li>
</ul>
<h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><ul>
<li>STM32F103RCT6</li>
<li>ST-LINK V2</li>
</ul>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p><strong><em>注意安装路径尽量不要出现中文！！！</em></strong></p>
<h3 id="MIninGW"><a href="#MIninGW" class="headerlink" title="MIninGW"></a>MIninGW</h3><p>mingw，是Minimalist GNU on Windows 的缩写。它实际上是将经典的开源 C语言 编译器 GCC 移植到了 Windows 下，并且包含了 Win32API ，因此可以将源代码编译生成 Windows 下的可执行程序。</p>
<p>下载完成之后找到<code>bin</code>目录，添加到系统环境变量Path中</p>
<p><code>系统属性-&gt;高级-&gt;环境变量</code><br><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348835.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348835.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716153406866"></p>
<p><code>系统变量-&gt;Path-&gt;新建</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348839.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348839.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716153648820"></p>
<h3 id="OpenOCD"><a href="#OpenOCD" class="headerlink" title="OpenOCD"></a>OpenOCD</h3><p>OpenOCD（Open On-Chip Debugger）是一个开源的片上调试器，旨在提供针对嵌入式设备的调试、系统编程和边界扫描功能。OpenOCD的功能需要调试仿真器来辅助完成，调试仿真器是一个提供调试目标电信号的小型硬件单元。常用的有JLink、STLink等，一些开发板直接集成了调试仿真器。</p>
<p>下载完之后将<code>bin</code>或<code>bin-x64</code>目录（两者都可）加到环境变量中去，方法同上。</p>
<h3 id="arm-none-eabi-gcc"><a href="#arm-none-eabi-gcc" class="headerlink" title="arm-none-eabi-gcc"></a>arm-none-eabi-gcc</h3><p>编译软件，或是准确点叫⼯具链。ARM框架、无供应商、无系统、嵌入式二进制接口，一般适合ARM7、Cortex-M、Cortex-R内核的芯片使用，所以不支持跟操作系统密切相关的函数。</p>
<p>同理将安装目录下的<code>bin</code>目录添加到系统环境变量中去。</p>
<h2 id="STM32CubeMx新建工程及配置"><a href="#STM32CubeMx新建工程及配置" class="headerlink" title="STM32CubeMx新建工程及配置"></a>STM32CubeMx新建工程及配置</h2><p><code>File-&gt;New Project-&gt;Part Number</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348842.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348842.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716090923564"></p>
<p>System Core-&gt;SYS-&gt;Debug设置调试器类型</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Debug</th>
<th style="text-align:center">调试器类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">No Debug</td>
<td style="text-align:center">无调试器</td>
</tr>
<tr>
<td style="text-align:center">Serial Wrie</td>
<td style="text-align:center">SWD调试器</td>
</tr>
<tr>
<td style="text-align:center">JTAG（4pins）</td>
<td style="text-align:center">4线JTAG调试器</td>
</tr>
<tr>
<td style="text-align:center">JTAG（5pins）</td>
<td style="text-align:center">5线JTAG调试器</td>
</tr>
<tr>
<td style="text-align:center">Trace Asynchroous Sw</td>
<td style="text-align:center">带异步Trace的调试器</td>
</tr>
</tbody>
</table>
</div>
<p>本次硬件使用的是SWD调试器，所以Debug为<code>Serial Wrie</code></p>
<p>设置时钟RCC-&gt;High Speed Clock(HSE)-&gt; Crystal/Ceramic Resonator</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348866.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348866.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716161025499"></p>
<p>设置PD2为GPIO_Output</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348871.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348871.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716150433102"></p>
<p>更改Clock Configuration，HCLK设置为72MHz</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348881.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348881.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716161111038"></p>
<p>Project Manager-&gt;Project-&gt;Toolchain/IDE-&gt;SW4STM32</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348445.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348445.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716151548301"></p>
<p>Code Generator配置<img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348449.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348449.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716154840694"></p>
<p>最后GENERATE CODE生成代码</p>
<h2 id="CLion配置"><a href="#CLion配置" class="headerlink" title="CLion配置"></a>CLion配置</h2><h3 id="工具链"><a href="#工具链" class="headerlink" title="工具链"></a>工具链</h3><p><code>设置-&gt;构件、执行、部署-&gt;工具链</code></p>
<p>配置如下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348490.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348490.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716155402481"></p>
<h3 id="CMake"><a href="#CMake" class="headerlink" title="CMake"></a>CMake</h3><p>配置如下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348516.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348516.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716155605976"></p>
<p>可勾选<code>在编辑CMakeLists.txt或其他 CMake配置文件时重新加载 CMake项目</code>自动重装置CMakeLists.txt</p>
<h3 id="嵌入式开发"><a href="#嵌入式开发" class="headerlink" title="嵌入式开发"></a>嵌入式开发</h3><p>配置如下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348510.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348510.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716155917803"></p>
<p>点击一旁的<code>Test</code>按键，确认一下路径是否正确。<br>如果出现绿色的提示框，则说明路径正确。</p>
<h2 id="程序编写及烧录"><a href="#程序编写及烧录" class="headerlink" title="程序编写及烧录"></a>程序编写及烧录</h2><p>在STM32CubeMx生成的文件目录，右击在CLion中打开。</p>
<p>在工程主目录下建立新文件夹config，在config中新建<code>stlink.cfg</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348513.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348513.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716160348617"></p>
<p>stlink.cfg文件内容为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source [find interface/stlink-v2.cfg]</span><br><span class="line"></span><br><span class="line">transport select hla_swd</span><br><span class="line"></span><br><span class="line">source [find target/stm32f1x.cfg]</span><br><span class="line"></span><br><span class="line">reset_config none</span><br></pre></td></tr></table></figure>
<p>其他的芯片或者下载器的配置，可以参考<code>OpenOCD</code>自带的一系列配置文件，路径在<code>OpenOCD</code>安装目录的<code>share\openocd\scripts</code>下。</p>
<p>在小锤子旁边下拉，点击编辑配置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348113.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348113.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716151441227"></p>
<p>将刚才创建的<code>stlink.cfg</code>文件添加到<code>面板配置文件</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348117.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348117.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716160739274"></p>
<p>在<code>main.c</code>中编写流水灯程序测试</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);</span><br><span class="line">    HAL_Delay(<span class="number">500</span>);</span><br><span class="line">    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line">    HAL_Delay(<span class="number">500</span>);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348140.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348140.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716161303580"></p>
<p>三个符号分别表示编译、烧录和调试。</p>
<p>编译文件生成相应的<code>hex</code>和<code>bin</code>文件，则表示编译成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348154.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348154.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716161448534"></p>
<p>烧录程序，连接好下载器，点击运行按钮</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348171.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162348171.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716161623984"></p>
<p>如图提示已下载固件，则表示烧录成功。</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>CLion</tag>
      </tags>
  </entry>
  <entry>
    <title>C++项目通讯管理系统</title>
    <url>/2022/08/30/C-%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%AE%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="显示菜单"><a href="#显示菜单" class="headerlink" title="显示菜单"></a>显示菜单</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;*********************&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 1、添加联系人 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 2、显示联系人 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 3、删除联系人 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 4、查找联系人 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 5、修改联系人 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 6、清空联系人 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;**** 0、退出通讯录 ****&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;*********************&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="添加联系人"><a href="#添加联系人" class="headerlink" title="添加联系人"></a>添加联系人</h2><h3 id="设计联系人结构体"><a href="#设计联系人结构体" class="headerlink" title="设计联系人结构体"></a>设计联系人结构体</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">int</span> phone;</span><br><span class="line">    string add;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="设计通讯录结构体"><a href="#设计通讯录结构体" class="headerlink" title="设计通讯录结构体"></a>设计通讯录结构体</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Addressbooks</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Person array[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="显示联系人"><a href="#显示联系人" class="headerlink" title="显示联系人"></a>显示联系人</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showperson</span><span class="params">(Addressbooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(abs-&gt;size == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;联系人为空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;联系人数量为&quot;</span>&lt;&lt;abs-&gt;size+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;abs-&gt;size;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;------第&quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&quot;个联系人------&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;abs-&gt;array[i].name&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;性别:&quot;</span>&lt;&lt;abs-&gt;array[i].sex&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;年龄:&quot;</span>&lt;&lt;abs-&gt;array[i].age&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;电话:&quot;</span>&lt;&lt;abs-&gt;array[i].phone&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;地址:&quot;</span>&lt;&lt;abs-&gt;array[i].add&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="删除联系人"><a href="#删除联系人" class="headerlink" title="删除联系人"></a>删除联系人</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isExist</span><span class="params">(Addressbooks *abs, string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;abs-&gt;size;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (abs-&gt;array[i].name == name)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DelPerson</span><span class="params">(Addressbooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string name;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入删除人的姓名:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;name;</span><br><span class="line">    <span class="keyword">int</span> re = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line">    <span class="keyword">if</span> (re != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=re;i&lt;abs-&gt;size;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            abs-&gt;array[i] = abs-&gt;array[i+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        abs-&gt;size--;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;删除成功!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;没有此人!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="查找联系人"><a href="#查找联系人" class="headerlink" title="查找联系人"></a>查找联系人</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectPerson</span><span class="params">(Addressbooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string name;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入要查找的人的姓名:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;name;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line">    <span class="keyword">if</span> (res != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;查到此人!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;姓名:&quot;</span>&lt;&lt;abs-&gt;array[res].name&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;性别:&quot;</span>&lt;&lt;abs-&gt;array[res].sex&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;年龄:&quot;</span>&lt;&lt;abs-&gt;array[res].age&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;电话:&quot;</span>&lt;&lt;abs-&gt;array[res].phone&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;地址:&quot;</span>&lt;&lt;abs-&gt;array[res].add&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;查无此人!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="修改联系人"><a href="#修改联系人" class="headerlink" title="修改联系人"></a>修改联系人</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ModifyPerson</span><span class="params">(Addressbooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string name;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入要修改的人的姓名:&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;name;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line">    <span class="keyword">if</span> (res != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        string new_name;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;修改后姓名&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;new_name;</span><br><span class="line">        abs-&gt;array[res].name = new_name;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入性别:&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;男/女&quot;</span> &lt;&lt; endl;</span><br><span class="line">        string sex = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; sex;</span><br><span class="line">            <span class="comment">//如果输入正确值则退出，输入有误可重新输入</span></span><br><span class="line">            <span class="keyword">if</span> (sex == <span class="string">&quot;男&quot;</span> || sex == <span class="string">&quot;女&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                abs-&gt;array[res].sex = sex;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;输入错误,请重新配置&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> new_age;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;修改后年龄&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cin&gt;&gt;new_age;</span><br><span class="line">        abs-&gt;array[res].age = new_age;</span><br><span class="line">        <span class="comment">//电话</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;修改后电话:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        string new_phone;</span><br><span class="line">        cin&gt;&gt;new_phone;</span><br><span class="line">        abs-&gt;array[res].phone = new_phone;</span><br><span class="line">        <span class="comment">//地址</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;修改后地址:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        string new_add;</span><br><span class="line">        cin&gt;&gt;new_add;</span><br><span class="line">        abs-&gt;array[res].add = new_add;</span><br><span class="line"></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;修改成功&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;查无此人!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="清空联系人"><a href="#清空联系人" class="headerlink" title="清空联系人"></a>清空联系人</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClcPerson</span><span class="params">(Addressbooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    abs-&gt;size = <span class="number">0</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;联系人已清空!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建通讯录结构体变量</span></span><br><span class="line">    Addressbooks abs;</span><br><span class="line">    <span class="comment">//初始化通讯录人员个数</span></span><br><span class="line">    abs.size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">showMenu</span>();</span><br><span class="line">        cin &gt;&gt; select;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (select)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">AddPerson</span>(&amp;abs); <span class="comment">//利用地址传传递，可以修改形参</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">ShowPerson</span>(&amp;abs);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">DelPerson</span>(&amp;abs);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">SelectPerson</span>(&amp;abs);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">ModifyPerson</span>(&amp;abs);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">ClcPerson</span>(&amp;abs);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;**** 欢迎下次使用!!! ****&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>CLion编译STM32解决FLASH溢出问题</title>
    <url>/2023/03/31/CLion%E7%BC%96%E8%AF%91STM32%E8%A7%A3%E5%86%B3FLASH%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Clion编译STM32解决FLASH溢出问题"><a href="#Clion编译STM32解决FLASH溢出问题" class="headerlink" title="Clion编译STM32解决FLASH溢出问题"></a>Clion编译STM32解决FLASH溢出问题</h1><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ld.exe: MPU6050.elf section `.data&#x27;  will not fit in region `FLASH&#x27;</span><br><span class="line">ld.exe: region `FLASH‘ overflowed by xxx bytes</span><br></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>改变<code>STM32F103C8Tx_FLASH.ld</code>中FLASH大小</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b030187d80005917ab1e4d8da4000585.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b030187d80005917ab1e4d8da4000585.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230329183345675"></p>
<p>改为256K</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MEMORY</span><br><span class="line">&#123;</span><br><span class="line">RAM (xrw)      : ORIGIN = <span class="number">0x20000000</span>, LENGTH = <span class="number">20</span>K</span><br><span class="line">FLASH (rx)      : ORIGIN = <span class="number">0x8000000</span>, LENGTH = <span class="number">256</span>K</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="错误-1"><a href="#错误-1" class="headerlink" title="错误"></a>错误</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arm-none-eabi-gcc: error: Core/Inc/test.h: No such file or directory</span><br><span class="line">arm-none-eabi-gcc: error: Core/Src/test.c: No such file or directory</span><br></pre></td></tr></table></figure>
<h2 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h2><p>修改<code>CMakeList.txt</code><br><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/125f38b9d5d33ec72338dba6fdefe0ad.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/125f38b9d5d33ec72338dba6fdefe0ad.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230329193312612"></p>
<p>去掉后面的test.h和test.c文件及路径</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>CLion</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake学习</title>
    <url>/2022/12/14/CMake%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CMake学习"><a href="#CMake学习" class="headerlink" title="CMake学习"></a>CMake学习</h1><p>eg:</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">PROJECT</span> (HELLO)</span><br><span class="line"><span class="keyword">SET</span>(SRC_LIST main.cpp)</span><br><span class="line"><span class="keyword">MESSAGE</span>(STATUS <span class="string">&quot;This is BINARY_DIR&quot;</span> <span class="variable">$&#123;HELLO_BINARY_DIR&#125;</span>)</span><br><span class="line"><span class="keyword">MESSAGE</span>(STATUS <span class="string">&quot;This is SOURCE_DIR&quot;</span> <span class="variable">$&#123;HELLO_SOURCE_DIR&#125;</span>)</span><br><span class="line"><span class="keyword">ADD_EXECUTABLE</span>(hello <span class="variable">$&#123;SRC_LIST&#125;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="PROJECT关键字"><a href="#PROJECT关键字" class="headerlink" title="PROJECT关键字"></a>PROJECT关键字</h2><p>可以用来指定工程的名字和支持的语言，默认支持所有语言</p>
<blockquote>
<p>PROJECT (HELLO)指定了工程的名字，并且支持所有语言一建议</p>
<p>PROJECT (HELLO CXX) 指定了工程的名字，并且支持语言是C++</p>
<p>PROJECT (HELLO c cxx) 指定了工程的名字，并且支持语言是C和C++</p>
</blockquote>
<p>该指定隐式定义了两个CMAKE的变量</p>
<p><projectname>_BINARY_DIR，本例中是HELLO_BINARY_DIR</p>
<p><projectname>_SOURCE_DIR，本例中是HELLO_SOURCE_DIR</p>
<p><code>MESSAGE</code>关键字就可以直接使用者两个变量，当前都指向当前的工作目录，如果改了工程名，这两个变量名也会改变</p>
<p>解决:又定义两个预定义变量:PROJECT_BINARY_DIR和PROJECT_SOURCE_DIR，这两个变量和</p>
<h2 id="SET关键字"><a href="#SET关键字" class="headerlink" title="SET关键字"></a>SET关键字</h2><p>用来显示的指定变量的</p>
<p><code>SET(SRC_LIST main.cpp)</code>,SRC_LIST变量就包含了main.cpp</p>
<p>也可以<code>SET(SRC_LIST main.cpp t1.cpp t2.cpp)</code></p>
<h2 id="MESSAGE关键字"><a href="#MESSAGE关键字" class="headerlink" title="MESSAGE关键字"></a>MESSAGE关键字</h2><p>向终端输出用户自定义的信息主要包含三种信息:</p>
<blockquote>
<p>SEND_ERROR，产生错误，生成过程被跳过。.</p>
<p>SATUS，输出前缀为一的信息。</p>
<p>FATAL_ERROR，立即终止所有cmake过程.</p>
</blockquote>
<h2 id="ADD-EXECUTABLE关键字"><a href="#ADD-EXECUTABLE关键字" class="headerlink" title="ADD_EXECUTABLE关键字"></a>ADD_EXECUTABLE关键字</h2><p>生成可执行文件</p>
<p><code>ADD_EXECUTABLE(hello $&#123;SRC_LIST&#125;)</code> ,生成的可执行文件名是hello，源文件读取变量SRC_LIST中的内容</p>
<p>也可以直接写<code>ADD_EXECUTABLE(hello main.cpp)</code></p>
<p>上述例子可以简化的写成</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">PROJECT</span>(HELLO)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD_EXECUTABLE</span>(hello main.cpp)</span><br></pre></td></tr></table></figure>
<p><strong><em>注意:工程名的 HELLO和生成的可执行文件 hello是没有任何关系的</em></strong></p>
<h2 id="语法基本原则"><a href="#语法基本原则" class="headerlink" title="语法基本原则"></a>语法基本原则</h2><ul>
<li>变量使用<code>$&#123;&#125;</code>方式取值，但是在<code>IF</code>控制语句中是直接使用变量名</li>
<li>指令(参数1参数.⒉..)参数使用括弧括起，参数之间使用<strong>空格或分号</strong>分开。</li>
<li>以上面的ADD_EXECUTABLE指令为例，如果存在另外一个func.cpp源文件就要写成:ADD_EXECUTABLE(hello main.cpp func.cpp),或者ADD_EXECUTABLE(hello main.cpp;func.cpp)</li>
<li>指令是大小写无关的，参数和变量是大小写相关的。但，推荐你全部使用大写指令</li>
</ul>
<p><strong>语法注意事项:</strong></p>
<ul>
<li>SET(SRC_LIST main.cpp)可以写成SET(SRC_LIST “main.cpp”)，如果源文件名中含有空格，就必须要加双引号</li>
<li>ADD_EXECUTABLE(hello main)后缀可以不行，他会自动去找.c和.cpp，最好不要这样写，可能会有这两个文件main.cpp和main</li>
</ul>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32和Micropython点亮LED</title>
    <url>/2022/07/27/ESP32%E5%92%8CMicropython%E7%82%B9%E4%BA%AELED/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>Thonny下载地址 官网 <a href="https://thonny.org/">https://thonny.org/</a></p>
<p>MicroPython下载地址：<a href="https://micropython.org/download/esp32/">https://micropython.org/download/esp32/</a></p>
<p><a href="http://micropython.com.cn/en/latet/esp32/tutorial/intro.html">ESP32的Micropython教程</a></p>
<h2 id="Thonny配置"><a href="#Thonny配置" class="headerlink" title="Thonny配置"></a>Thonny配置</h2><p>打开软件，运行-&gt;选择解释器-&gt;Micropython，然后点击右下角<code>Install or update firmware</code>,烧录固件（Firmware）。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728203146466.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728203146466.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220728203146466"></p>
<p>将上位机与ESP32用USB数据线连接，设置端口号，然后选择下载好的固件(Firmware),按图中设置，点击安装。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728203558024.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728203558024.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220728203558024"></p>
<p>等待左下角安装进度条完成后，出现<code>Done</code>时，安装完成。</p>
<p>返回解释器选中端口号。</p>
<p>新建脚本在左上角，保存时选择<strong>Micropython设备</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728203925429.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728203925429.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220728203925429"></p>
<h2 id="点亮LED"><a href="#点亮LED" class="headerlink" title="点亮LED"></a>点亮LED</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> machine</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">pin2 = machine.Pin(<span class="number">2</span>,machine.Pin.OUT)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    pin2.value(<span class="number">1</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    pin2.value(<span class="number">0</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p>编写完成后执行<img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728204052369.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220728204052369.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220728204052369">运行按钮即可烧录程序。</p>
<h2 id="PWM呼吸灯"><a href="#PWM呼吸灯" class="headerlink" title="PWM呼吸灯"></a>PWM呼吸灯</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin,PWM</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">led2 = PWM(Pin(<span class="number">2</span>))</span><br><span class="line">led2.freq(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">1024</span>):</span><br><span class="line">        led2.duty(i)</span><br><span class="line">        time.sleep_ms(<span class="number">5</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1023</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        led2.duty(i)</span><br><span class="line">        time.sleep_ms(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
        <category>ESP32</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>Micropython</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown中添加数学公式</title>
    <url>/2022/05/24/Markdown%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>超链接：</p>
<p><a href="https://blog.csdn.net/weixin_51002159/article/details/124783998"> Markdown中添加数学公式</a></p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux双系统安装</title>
    <url>/2023/03/25/Linux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux双系统的安装"><a href="#Linux双系统的安装" class="headerlink" title="Linux双系统的安装"></a>Linux双系统的安装</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>联想小新Air14</li>
<li>U盘&gt;8G</li>
</ul>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul>
<li><p>镜像工具Win32diskimage</p>
</li>
<li><p>Ubuntu 22.04.2 LTS镜像</p>
</li>
</ul>
<p>镜像下载地址：<a href="https://cn.ubuntu.com/download/desktop">https://cn.ubuntu.com/download/desktop</a></p>
<h2 id="制作Ubuntu安装盘"><a href="#制作Ubuntu安装盘" class="headerlink" title="制作Ubuntu安装盘"></a>制作Ubuntu安装盘</h2><ul>
<li>电脑插入U盘</li>
<li>打开下载的win32镜像烧录工具</li>
<li>选择Ubuntu镜像</li>
<li>烧录</li>
</ul>
<h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>在win搜索磁盘管理</p>
<p>选则要分区的磁盘-&gt;压缩卷选为40000M(40G)</p>
<p><strong>查看磁盘属性</strong></p>
<p>右击磁盘0-&gt;属性-&gt;卷</p>
<p>显示磁盘分区形式：GUID分区表(GPT)</p>
<h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><p>插入U盘</p>
<p>重启电脑，在电脑未进入Logo前，按F2进入BIOS界面</p>
<p>Security-&gt;Cure Boot-&gt;Disable</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325161109874.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325161109874.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325161109874"></p>
<p>然后F10保存退出</p>
<p>重启在未进入Logo前按F12</p>
<p>然后选则没有windows的选项，进入U盘启动</p>
<p>然后就会获得一个ubuntu界面</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325161934046.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325161934046.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325161934046"></p>
<p>安装步骤只在安装类型处，选择其他选项</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325162140056.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325162140056.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325162140056"></p>
<p>在空闲的40000多M就是刚才自己的磁盘分区</p>
<p>分区类型为：</p>
<ul>
<li>500M 引导区efi</li>
<li>8G  交换空间</li>
<li>20G /根挂在节点</li>
<li>10G /home挂载点</li>
</ul>
<p>然后在安装启动引导器的设备，换成efi的设备地址，安装即可</p>
<p>然后设置用户名和密码。</p>
<h2 id="更改默认启动系统"><a href="#更改默认启动系统" class="headerlink" title="更改默认启动系统"></a>更改默认启动系统</h2><p>终端输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/default/grub</span><br></pre></td></tr></table></figure>
<p>将GRUB_DEFAULT=0这一项改为windows的序号</p>
<p>然后</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure>
<p>保存，重启</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Git基础命令</title>
    <url>/2023/04/04/Git%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git基础命令"><a href="#Git基础命令" class="headerlink" title="Git基础命令"></a>Git基础命令</h1><h2 id="克隆到本地"><a href="#克隆到本地" class="headerlink" title="克隆到本地"></a>克隆到本地</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 仓库地址</span><br></pre></td></tr></table></figure>
<h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;commit&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab学习01</title>
    <url>/2022/03/23/Matlab%E5%AD%A6%E4%B9%A001/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MATLAB学习01"><a href="#MATLAB学习01" class="headerlink" title="MATLAB学习01"></a>MATLAB学习01</h1><h3 id="input请求用户输入"><a href="#input请求用户输入" class="headerlink" title="input请求用户输入"></a>input请求用户输入</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = input(prompt)</span><br><span class="line">str = input(prompt,<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><code>x = input(prompt)</code> 显示 <code>prompt</code> 中的文本并等待用户输入值后按 <strong>Return</strong> 键。用户可以输入 <code>pi/4</code> 或 <code>rand(3)</code> 之类的表达式，并可以使用工作区中的变量。</p>
<ul>
<li>如果用户不输入任何内容直接按下 <strong>Return</strong> 键，则 <code>input</code> 会返回空矩阵。</li>
<li>如果用户在提示下输入无效的表达式，则 MATLAB® 会显示相关的错误消息，然后重新显示提示。</li>
</ul>
<p><code>str = input(prompt,&#39;s&#39;)</code> 返回输入的文本，而不会将输入作为表达式来计算。</p>
<h3 id="disp显示变量的值"><a href="#disp显示变量的值" class="headerlink" title="disp显示变量的值"></a>disp显示变量的值</h3><p><code>disp(x)</code>  </p>
<p><code>disp(X)</code> 显示变量 <code>X</code> 的值，而不打印变量名称。显示变量的另一种方法是键入它的名称，这种方法会在值前面显示一个前导“<code>X =</code>”。</p>
<p>如果变量包含空数组，则会返回 <code>disp</code>，但不显示任何内容。</p>
<p>eg:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">disp</span>([‘my test=’,num2str(test)])</span><br><span class="line"><span class="comment">% num2str()函数将数字转换为字符串</span></span><br><span class="line"><span class="comment">% -----------------------------</span></span><br><span class="line">my test=<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="isempty确定数组是否为空"><a href="#isempty确定数组是否为空" class="headerlink" title="isempty确定数组是否为空"></a>isempty确定数组是否为空</h3><p><code>TF = isempty(A)</code></p>
<p>如果 <code>A</code> 为空，<code>TF = isempty(A)</code> 返回逻辑值 <code>1</code> (<code>true</code>)，否则返回逻辑值 <code>0</code> (<code>false</code>)。</p>
<h3 id="应用F2C函数"><a href="#应用F2C函数" class="headerlink" title="应用F2C函数"></a>应用F2C函数</h3><p>创建F2C函数，输入华氏温度，输出摄氏温度，当输入值为空是，退出函数。</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>=<span class="title">F2C</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">true</span></span><br><span class="line">    f=input(<span class="string">&#x27;请输入华氏温度:&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isempty</span>(f)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        C=(f<span class="number">-32</span>)*<span class="number">5</span>/<span class="number">9</span>;</span><br><span class="line">        <span class="built_in">disp</span>([<span class="string">&#x27;摄氏温度是&#x27;</span>,num2str(C)]);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p><strong>测试</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; F2C</span><br><span class="line">请输入华氏温度:<span class="number">80</span></span><br><span class="line">摄氏温度是<span class="number">26.6667</span></span><br><span class="line">请输入华氏温度:<span class="number">45</span></span><br><span class="line">摄氏温度是<span class="number">7.2222</span></span><br><span class="line">请输入华氏温度:<span class="number">50</span></span><br><span class="line">摄氏温度是<span class="number">10</span></span><br><span class="line">请输入华氏温度:</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">10</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab学习02</title>
    <url>/2022/08/12/Matlab%E5%AD%A6%E4%B9%A002/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="管理会话的命令"><a href="#管理会话的命令" class="headerlink" title="管理会话的命令"></a>管理会话的命令</h2><p>MATLAB提供了各种用于管理会话的命令。下表提供了所有这些命令 -</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>描述说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>clc</code></td>
<td>清除命令窗口</td>
</tr>
<tr>
<td><code>clear</code></td>
<td>从内存中删除变量</td>
</tr>
<tr>
<td><code>exist</code></td>
<td>检查文件或变量是否存在</td>
</tr>
<tr>
<td><code>global</code></td>
<td>声明变量为全局变量</td>
</tr>
<tr>
<td><code>help</code></td>
<td>搜索帮助主题</td>
</tr>
<tr>
<td><code>lookfor</code></td>
<td>搜索帮助关键字的条目。</td>
</tr>
<tr>
<td><code>quit</code></td>
<td>停止MATLAB</td>
</tr>
<tr>
<td><code>who</code></td>
<td>列出当前变量</td>
</tr>
<tr>
<td><code>whos</code></td>
<td>列出当前变量(长显示详细信息)</td>
</tr>
</tbody>
</table>
</div>
<h2 id="使用系统命令"><a href="#使用系统命令" class="headerlink" title="使用系统命令"></a>使用系统命令</h2><p>MATLAB提供了各种有用的命令来处理系统，比如将工作区中的当前工作保存为文件，稍后加载文件。</p>
<p>它还为其他系统相关活动提供各种命令，如显示日期，列出目录中的文件，显示当前目录等。</p>
<p>下表显示了一些常用的系统相关命令 -</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>描述说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>cd</code></td>
<td>更改当前目录(进入指定目录)</td>
</tr>
<tr>
<td><code>date</code></td>
<td>显示当前日期</td>
</tr>
<tr>
<td><code>delete</code></td>
<td>删除文件</td>
</tr>
<tr>
<td><code>diary</code></td>
<td>打开/关闭日记文件记录</td>
</tr>
<tr>
<td><code>dir</code></td>
<td>列出当前目录下的所有文件</td>
</tr>
<tr>
<td><code>load</code></td>
<td>从文件加载工作区变量</td>
</tr>
<tr>
<td><code>path</code></td>
<td>显示搜索路径</td>
</tr>
<tr>
<td><code>pwd</code></td>
<td>显示当前目录</td>
</tr>
<tr>
<td><code>save</code></td>
<td>将工作空间变量保存在文件中</td>
</tr>
<tr>
<td><code>type</code></td>
<td>显示文件的内容</td>
</tr>
<tr>
<td><code>what</code></td>
<td>列出当前目录中的所有MATLAB文件</td>
</tr>
<tr>
<td><code>wklread</code></td>
<td>读取<code>.wk1</code>电子表格文件</td>
</tr>
</tbody>
</table>
</div>
<p>控制数字显示格式命令，只改变显示格式，数值不会改变</p>
<p><code>format + 数据类型</code></p>
<p>format shot(默认)</p>
<p>format long</p>
<p>format rat(小数分数显示)</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="number">1</span>/<span class="number">3</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">0.3333</span></span><br><span class="line">&gt;&gt; format <span class="built_in">rat</span></span><br><span class="line">&gt;&gt; <span class="number">1</span>/<span class="number">3</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">       <span class="number">1</span>/<span class="number">3</span>     </span><br></pre></td></tr></table></figure>
<h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234109104.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234109104.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220811234109104"></p>
<h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234004532.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234004532.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220811234004532"></p>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"><strong>&amp;</strong></th>
<th style="text-align:center"><strong>与</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">**\</td>
<td style="text-align:center">**</td>
<td><strong>或</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>~</strong></td>
<td style="text-align:center"><strong>非</strong></td>
</tr>
</tbody>
</table>
</div>
<h2 id="复数运算"><a href="#复数运算" class="headerlink" title="复数运算"></a>复数运算</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234632087.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234632087.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220811234632087"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">complex</span>(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">2.0000</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span>+<span class="number">2</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">2.0000</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure>
<h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234829122.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811234829122.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220811234829122"></p>
<p>反三角函数<code>asin</code>、<code>acos</code>、<code>atan</code></p>
<h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a><strong>向量</strong></h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811235447898.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220811235447898.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220811235447898"></p>
<h3 id="创建向量"><a href="#创建向量" class="headerlink" title="创建向量"></a>创建向量</h3><h4 id="直接创建"><a href="#直接创建" class="headerlink" title="直接创建"></a>直接创建</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  <span class="comment">% 行向量</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b = [<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>] <span class="comment">% 列向量</span></span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span></span><br></pre></td></tr></table></figure>
<h4 id="冒号法-对增量要求"><a href="#冒号法-对增量要求" class="headerlink" title="冒号法(对增量要求)"></a>冒号法(对增量要求)</h4><p><code>x = 0:2:10</code></p>
<p>输出<code>x =   0     2     4     6     8    10</code></p>
<p><code>y = 10:-3:1</code></p>
<p>输出<code>y = 10     7     4     1</code></p>
<h4 id="linspace（对数量要求）"><a href="#linspace（对数量要求）" class="headerlink" title="linspace（对数量要求）"></a>linspace（对数量要求）</h4><p><code>x = linspace(0,10,5)</code></p>
<p>输出<code>x =   0    2.5000    5.0000    7.5000   10.0000</code></p>
<p><code>x = linspace(100, 0, 5)</code></p>
<p>输出<code>x = 100    75    50    25     0</code></p>
<h3 id="向量元素的引用"><a href="#向量元素的引用" class="headerlink" title="向量元素的引用"></a>向量元素的引用</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt; x = <span class="number">0</span>: <span class="number">10</span></span><br><span class="line">x =</span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span></span><br><span class="line">&gt;&gt; x(<span class="number">3</span>)  <span class="comment">% 下标从1开始</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span></span><br><span class="line">&gt;&gt; x(<span class="number">2</span>:<span class="number">5</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">&gt;&gt; x(<span class="number">2</span>:<span class="number">2</span>:<span class="number">10</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span>     <span class="number">7</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; <span class="number">2</span>:<span class="number">2</span>:<span class="number">10</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span>     <span class="number">6</span>     <span class="number">8</span>    <span class="number">10</span></span><br><span class="line">&gt;&gt; a = [<span class="number">6</span>, <span class="number">2</span>, <span class="number">11</span>];</span><br><span class="line">&gt;&gt; x(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">5</span>     <span class="number">1</span>    <span class="number">10</span></span><br><span class="line">&gt;&gt; x([<span class="number">2</span>:<span class="number">5</span> a])</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">1</span>    <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h3 id="向量运算"><a href="#向量运算" class="headerlink" title="向量运算"></a>向量运算</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x = <span class="number">0</span>:<span class="number">2</span>:<span class="number">10</span></span><br><span class="line">x =</span><br><span class="line">     <span class="number">0</span>     <span class="number">2</span>     <span class="number">4</span>     <span class="number">6</span>     <span class="number">8</span>    <span class="number">10</span></span><br><span class="line">&gt;&gt; y = <span class="number">0</span>:<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">y =</span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">&gt;&gt; x+y   <span class="comment">% 维度一直</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">0</span>     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span>    <span class="number">12</span>    <span class="number">15</span></span><br><span class="line">&gt;&gt; x-y	 <span class="comment">% 维度一直</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">&gt;&gt; x.*y  <span class="comment">% 维度一直</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">0</span>     <span class="number">2</span>     <span class="number">8</span>    <span class="number">18</span>    <span class="number">32</span>    <span class="number">50</span></span><br><span class="line">&gt;&gt; x./y	 <span class="comment">% 维度一直</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   NaN     <span class="number">2</span>     <span class="number">2</span>     <span class="number">2</span>     <span class="number">2</span>     <span class="number">2</span></span><br><span class="line">&gt;&gt; <span class="built_in">dot</span>(x,y)	<span class="comment">% 点积</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">110</span></span><br><span class="line">    </span><br><span class="line">&gt;&gt; a = <span class="number">1</span>:<span class="number">3</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">&gt;&gt; b = <span class="number">2</span>:<span class="number">4</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">&gt;&gt; <span class="built_in">cross</span>(a,b) <span class="comment">% 叉积向量必须是三维，求出与两个向量想垂直的向量（法向量）</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">-1</span>     <span class="number">2</span>    <span class="number">-1</span></span><br><span class="line">&gt;&gt; c = [<span class="number">7</span> <span class="number">5</span> <span class="number">1</span>]</span><br><span class="line">c =</span><br><span class="line">     <span class="number">7</span>     <span class="number">5</span>     <span class="number">1</span></span><br><span class="line">&gt;&gt; <span class="built_in">dot</span>(a, <span class="built_in">cross</span>(b,c)) <span class="comment">% 混合积先叉积在点积</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h2 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h2><h3 id="创建多项式"><a href="#创建多项式" class="headerlink" title="创建多项式"></a>创建多项式</h3><h4 id="直接创建-1"><a href="#直接创建-1" class="headerlink" title="直接创建"></a>直接创建</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="string">&#x27;a*x^n+b*x^(n-1)&#x27;</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;a*x^n+b*x^(n-1)&#x27;</span></span><br></pre></td></tr></table></figure>
<h4 id="poly2sym"><a href="#poly2sym" class="headerlink" title="poly2sym"></a>poly2sym</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>]</span><br><span class="line">p =</span><br><span class="line">     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">&gt;&gt; poly2sym(p)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">3</span>*x^<span class="number">3</span> + <span class="number">4</span>*x^<span class="number">2</span> + <span class="number">5</span>*x + <span class="number">7</span></span><br><span class="line">&gt;&gt; a = [<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>];</span><br><span class="line">&gt;&gt; poly2sym(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">2</span>*x^<span class="number">6</span> + <span class="number">3</span>*x^<span class="number">5</span> + <span class="number">4</span>*x^<span class="number">4</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="根据跟来构建多项式"><a href="#根据跟来构建多项式" class="headerlink" title="根据跟来构建多项式"></a>根据跟来构建多项式</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; root = [<span class="number">1</span> <span class="number">-1</span>];</span><br><span class="line">&gt;&gt; p=poly(root)</span><br><span class="line">p =</span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>    <span class="number">-1</span></span><br><span class="line">&gt;&gt; poly2sym(p)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">x^<span class="number">2</span> - <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="多项式运算"><a href="#多项式运算" class="headerlink" title="多项式运算"></a>多项式运算</h3><h4 id="加法和减法运算"><a href="#加法和减法运算" class="headerlink" title="加法和减法运算"></a>加法和减法运算</h4><p>同向量的加减法运算，维度需要一致，用0补齐</p>
<h4 id="乘法运算-conv"><a href="#乘法运算-conv" class="headerlink" title="乘法运算(conv)"></a>乘法运算(conv)</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p1=[<span class="number">1</span> <span class="number">2</span>];</span><br><span class="line">&gt;&gt; p2=[<span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">&gt;&gt; conv(p1, p2)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">3</span>    <span class="number">10</span>     <span class="number">8</span></span><br><span class="line">&gt;&gt; poly2sym(conv(p1,p2))</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">3</span>*x^<span class="number">2</span> + <span class="number">10</span>*x + <span class="number">8</span></span><br></pre></td></tr></table></figure>
<h4 id="除法运算-deconv"><a href="#除法运算-deconv" class="headerlink" title="除法运算(deconv)"></a>除法运算(deconv)</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; [k, r]=deconv(p1, p2)</span><br><span class="line">k =</span><br><span class="line">    <span class="number">0.3333</span></span><br><span class="line">r =</span><br><span class="line">         <span class="number">0</span>    <span class="number">0.6667</span></span><br></pre></td></tr></table></figure>
<h4 id="求导（polyder）"><a href="#求导（polyder）" class="headerlink" title="求导（polyder）"></a>求导（polyder）</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p = [<span class="number">2</span> <span class="number">3</span> <span class="number">8</span> <span class="number">-5</span> <span class="number">6</span>];</span><br><span class="line">&gt;&gt; poly2sym(p)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">2</span>*x^<span class="number">4</span> + <span class="number">3</span>*x^<span class="number">3</span> + <span class="number">8</span>*x^<span class="number">2</span> - <span class="number">5</span>*x + <span class="number">6</span></span><br><span class="line">&gt;&gt; q=polyder(p)</span><br><span class="line">q =</span><br><span class="line">     <span class="number">8</span>     <span class="number">9</span>    <span class="number">16</span>    <span class="number">-5</span></span><br></pre></td></tr></table></figure>
<h3 id="多项式求解"><a href="#多项式求解" class="headerlink" title="多项式求解"></a>多项式求解</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p = [<span class="number">2</span> <span class="number">3</span> <span class="number">1</span>];</span><br><span class="line">&gt;&gt; poly2sym(p)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">2</span>*x^<span class="number">2</span> + <span class="number">3</span>*x + <span class="number">1</span></span><br><span class="line">&gt;&gt; roots(p)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">-1.0000</span></span><br><span class="line">   <span class="number">-0.5000</span></span><br><span class="line"><span class="comment">%-------------------------------</span></span><br><span class="line">&gt;&gt; syms x	<span class="comment">% 声明变量</span></span><br><span class="line">&gt;&gt; f = x^<span class="number">2</span>+x<span class="number">-1</span>==<span class="number">0</span>	<span class="comment">% 输入方程</span></span><br><span class="line">f = </span><br><span class="line">x^<span class="number">2</span> + x - <span class="number">1</span> == <span class="number">0</span></span><br><span class="line">&gt;&gt; solve(f)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">- <span class="number">5</span>^(<span class="number">1</span>/<span class="number">2</span>)/<span class="number">2</span> - <span class="number">1</span>/<span class="number">2</span></span><br><span class="line">  <span class="number">5</span>^(<span class="number">1</span>/<span class="number">2</span>)/<span class="number">2</span> - <span class="number">1</span>/<span class="number">2</span></span><br><span class="line">&gt;&gt; vpa(<span class="built_in">ans</span>)	<span class="comment">% 转化成小数</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">-1.6180339887498948482045868343656</span></span><br><span class="line"><span class="number">0.61803398874989484820458683436564</span></span><br><span class="line">&gt;&gt; double(<span class="built_in">ans</span>)	<span class="comment">% 精度</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">-1.6180</span></span><br><span class="line">    <span class="number">0.6180</span></span><br></pre></td></tr></table></figure>
<h2 id="单元型变量"><a href="#单元型变量" class="headerlink" title="单元型变量"></a>单元型变量</h2><p>单元型变量是以单元为元素的数组，每个元素称为单元，每个单元可以包含其他类型的数组，如实数矩阵、字符串、复数向量。单元型变量通常由“”创建，其数据通过数组下标来引用。（可包括不同的数据类型）</p>
<h3 id="创建、引用及赋值"><a href="#创建、引用及赋值" class="headerlink" title="创建、引用及赋值"></a>创建、引用及赋值</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a = <span class="number">2</span>;</span><br><span class="line">&gt;&gt; b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">&gt;&gt; c = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">&gt;&gt; d = <span class="number">3</span>+<span class="number">2</span><span class="built_in">i</span>;</span><br><span class="line">&gt;&gt; e = &#123;a, b, c, d&#125;</span><br><span class="line">e =</span><br><span class="line">  <span class="number">1</span>×<span class="number">4</span> cell 数组</span><br><span class="line">    &#123;[<span class="number">2</span>]&#125;    &#123;[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]&#125;    &#123;<span class="string">&#x27;abc&#x27;</span>&#125;    &#123;[<span class="number">3.0000</span> + <span class="number">2.0000</span><span class="built_in">i</span>]&#125;</span><br><span class="line">&gt;&gt; e&#123;<span class="number">1</span>&#125;	<span class="comment">% 引用</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span></span><br><span class="line"><span class="comment">%-----------------------------</span></span><br><span class="line">&gt;&gt; e=cell(<span class="number">1</span>, <span class="number">3</span>)	<span class="comment">% 生成空cell</span></span><br><span class="line">e =</span><br><span class="line">  <span class="number">1</span>×<span class="number">3</span> cell 数组</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">&gt;&gt; e&#123;<span class="number">1</span>,<span class="number">1</span>&#125;=[<span class="number">1</span>,<span class="number">2</span>;<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">e =</span><br><span class="line">  <span class="number">1</span>×<span class="number">3</span> cell 数组</span><br><span class="line">    &#123;<span class="number">2</span>×<span class="number">2</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">&gt;&gt; e&#123;<span class="number">1</span>,<span class="number">2</span>&#125;=<span class="string">&#x27;cfg&#x27;</span></span><br><span class="line">e =</span><br><span class="line">  <span class="number">1</span>×<span class="number">3</span> cell 数组</span><br><span class="line">    &#123;<span class="number">2</span>×<span class="number">2</span> double&#125;    &#123;<span class="string">&#x27;cfg&#x27;</span>&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">&gt;&gt; e&#123;<span class="number">1</span>,<span class="number">3</span>&#125;=<span class="number">2</span></span><br><span class="line">e =</span><br><span class="line">  <span class="number">1</span>×<span class="number">3</span> cell 数组</span><br><span class="line">    &#123;<span class="number">2</span>×<span class="number">2</span> double&#125;    &#123;<span class="string">&#x27;cfg&#x27;</span>&#125;    &#123;[<span class="number">2</span>]&#125;</span><br></pre></td></tr></table></figure>
<h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812101238471.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812101238471.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812101238471"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s = <span class="string">&#x27;123&#x27;</span></span><br><span class="line">s =</span><br><span class="line">    <span class="string">&#x27;123&#x27;</span></span><br><span class="line">&gt;&gt; str2num(s)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">123</span></span><br><span class="line">&gt;&gt; class(s)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;char&#x27;</span></span><br><span class="line">&gt;&gt; class(str2num(s))</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;double&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="结构性变量"><a href="#结构性变量" class="headerlink" title="结构性变量"></a>结构性变量</h2><p>结构型变量是根据属性名(field)组织起来的不同数据类型的集合。结构的任何一个属性可以包含不同的数据类型，如字符串、矩阵等。结</p>
<p>构型变量用函数 struct来创建。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812102005272.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812102005272.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812102005272"></p>
<h3 id="创建、引用及赋值-1"><a href="#创建、引用及赋值-1" class="headerlink" title="创建、引用及赋值"></a>创建、引用及赋值</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; m=struct(<span class="string">&#x27;color&#x27;</span>,&#123;<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>&#125;,<span class="string">&#x27;number&#x27;</span>,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,<span class="string">&#x27;str&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">m = </span><br><span class="line">  包含以下字段的 <span class="number">1</span>×<span class="number">2</span> struct 数组:</span><br><span class="line">    color</span><br><span class="line">    number</span><br><span class="line">    str</span><br><span class="line">&gt;&gt; m(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line">     color: <span class="string">&#x27;red&#x27;</span></span><br><span class="line">    number: <span class="number">1</span></span><br><span class="line">       str: <span class="string">&#x27;a&#x27;</span></span><br><span class="line">&gt;&gt; m(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line">     color: <span class="string">&#x27;blue&#x27;</span></span><br><span class="line">    number: <span class="number">2</span></span><br><span class="line">       str: <span class="string">&#x27;a&#x27;</span></span><br><span class="line">&gt;&gt; m(<span class="number">1</span>).color</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;red&#x27;</span></span><br><span class="line">&gt;&gt; m.color</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;red&#x27;</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;blue&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="相关函数-1"><a href="#相关函数-1" class="headerlink" title="相关函数"></a>相关函数</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812102434344.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812102434344.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812102434344"></p>
<h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a><strong>矩阵</strong></h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812102635984.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812102635984.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812102635984"></p>
<h3 id="矩阵创建"><a href="#矩阵创建" class="headerlink" title="矩阵创建"></a>矩阵创建</h3><p><strong><em>矩阵创建是注意：</em></strong></p>
<ul>
<li>输入矩阵时要以“[]”为其标识符号，矩阵的所有元素必须都在括号内。</li>
<li>矩阵同行元素之间由空格（个数不限）或逗号分隔，行与行之间用分号或回车键分隔。矩阵大小不需要预先定义。</li>
<li>矩阵元素可以是运算表达式。</li>
<li>若“[]”中无元素，表示空矩阵。</li>
<li>如果不想显示中间结果，可以用“;”结束。</li>
</ul>
<h4 id="直接创建-2"><a href="#直接创建-2" class="headerlink" title="直接创建"></a>直接创建</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a = [<span class="number">1</span>, <span class="number">2</span>; <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line"><span class="comment">%--------------------------</span></span><br><span class="line">&gt;&gt; load test.txt	<span class="comment">% 通过txt文件导入</span></span><br><span class="line">&gt;&gt; test	<span class="comment">% 变量以文件名为名</span></span><br><span class="line">test =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; class(test)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;double&#x27;</span></span><br><span class="line">&gt;&gt; test(<span class="number">1</span>,:)	# 提取第一行</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">&gt;&gt; test(:,<span class="number">1</span>)	# 提取第一列</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">7</span></span><br></pre></td></tr></table></figure>
<h4 id="函数创建"><a href="#函数创建" class="headerlink" title="函数创建"></a>函数创建</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812104035587.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812104035587.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812104035587"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">eye</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line">&gt;&gt; <span class="built_in">eye</span>(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">&gt;&gt; <span class="built_in">ones</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">&gt;&gt; <span class="built_in">ones</span>(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">&gt;&gt; <span class="built_in">zeros</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">&gt;&gt; <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">&gt;&gt; <span class="built_in">rand</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">0.8147</span>    <span class="number">0.9134</span>    <span class="number">0.2785</span></span><br><span class="line">    <span class="number">0.9058</span>    <span class="number">0.6324</span>    <span class="number">0.5469</span></span><br><span class="line">    <span class="number">0.1270</span>    <span class="number">0.0975</span>    <span class="number">0.9575</span></span><br><span class="line">&gt;&gt; <span class="built_in">rand</span>(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">0.9649</span>    <span class="number">0.9706</span>    <span class="number">0.4854</span></span><br><span class="line">    <span class="number">0.1576</span>    <span class="number">0.9572</span>    <span class="number">0.8003</span></span><br><span class="line">&gt;&gt; n = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">n =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">&gt;&gt; <span class="built_in">diag</span>(n)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">2</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">3</span></span><br><span class="line">&gt;&gt; <span class="built_in">hilb</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">0.5000</span>    <span class="number">0.3333</span></span><br><span class="line">    <span class="number">0.5000</span>    <span class="number">0.3333</span>    <span class="number">0.2500</span></span><br><span class="line">    <span class="number">0.3333</span>    <span class="number">0.2500</span>    <span class="number">0.2000</span></span><br><span class="line">&gt;&gt; <span class="built_in">magic</span>(<span class="number">3</span>)	<span class="comment">%魔方矩阵每行每列及对角线之和相等</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">8</span>     <span class="number">1</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">9</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h3 id="矩阵引用及修改"><a href="#矩阵引用及修改" class="headerlink" title="矩阵引用及修改"></a>矩阵引用及修改</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; test</span><br><span class="line">test =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; e=[<span class="number">6</span>;<span class="number">4</span>;<span class="number">7</span>];</span><br><span class="line">&gt;&gt; f=[<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">&gt;&gt; a=[test, e; f]</span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line"><span class="comment">%--------------------------------</span></span><br><span class="line">&gt;&gt; a(<span class="number">3</span>,<span class="number">2</span>)	<span class="comment">% 第3行第2列</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">8</span></span><br><span class="line">&gt;&gt; a(<span class="number">3</span>,[<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>])	<span class="comment">% 第3行第2/1/3列</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">8</span>     <span class="number">7</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; a(<span class="number">2</span>,:)	<span class="comment">% 第二行所以元素</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line">&gt;&gt; a(:,<span class="number">3</span>)	<span class="comment">% 第3列所有元素</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">9</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">&gt;&gt; a(<span class="number">2</span>,:)=[]	<span class="comment">% 删除第2行</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">&gt;&gt; a(<span class="number">1</span>,:)=[]	<span class="comment">% 删除第1行</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">&gt;&gt; a=[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">6</span>];a]	<span class="comment">% 添加元素</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">&gt;&gt; a(:,<span class="number">1</span>)=[]	<span class="comment">% 删除第1列</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span>     <span class="number">9</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">3</span>     <span class="number">4</span></span><br></pre></td></tr></table></figure>
<h3 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h3><h4 id="变维-reshape"><a href="#变维-reshape" class="headerlink" title="变维(reshape)"></a>变维(reshape)</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a = <span class="number">1</span>:<span class="number">12</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span>    <span class="number">11</span>    <span class="number">12</span></span><br><span class="line">&gt;&gt; <span class="built_in">reshape</span>(a,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span>    <span class="number">10</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span>    <span class="number">11</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span>    <span class="number">12</span></span><br></pre></td></tr></table></figure>
<h4 id="加减运算"><a href="#加减运算" class="headerlink" title="加减运算"></a>加减运算</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a = [<span class="number">1</span>:<span class="number">3</span>;<span class="number">6</span>:<span class="number">8</span>;<span class="number">4</span>:<span class="number">6</span>]</span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">&gt;&gt; b=[<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">&gt;&gt; a+b</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">7</span>    <span class="number">10</span>    <span class="number">12</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">8</span>    <span class="number">10</span></span><br><span class="line">&gt;&gt; a-b</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">0</span>    <span class="number">-1</span>    <span class="number">-1</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">4</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">2</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h4 id="乘法运算"><a href="#乘法运算" class="headerlink" title="乘法运算"></a>乘法运算</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812114841186.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812114841186.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812114841186"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a =</span><br><span class="line">     1     2     3</span><br><span class="line">     4     5     6</span><br><span class="line">     7     8     9</span><br><span class="line">&gt;&gt; b=a;</span><br><span class="line">&gt;&gt; a.*b</span><br><span class="line">ans =</span><br><span class="line">     1     4     9</span><br><span class="line">    16    25    36</span><br><span class="line">    49    64    81</span><br><span class="line">&gt;&gt; a*b</span><br><span class="line">ans =</span><br><span class="line">    30    36    42</span><br><span class="line">    66    81    96</span><br><span class="line">   102   126   150</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812115308681.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812115308681.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812115308681"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812120036281.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812120036281.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812120036281"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812120540240.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812120540240.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812120540240"></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p=<span class="number">3.4</span></span><br><span class="line">p =</span><br><span class="line">    <span class="number">3.4000</span></span><br><span class="line">&gt;&gt; sym(p)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">17</span>/<span class="number">5</span></span><br><span class="line">&gt;&gt; eval(<span class="built_in">ans</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">3.4000</span></span><br></pre></td></tr></table></figure>
<h4 id="转置（’或traspose）"><a href="#转置（’或traspose）" class="headerlink" title="转置（’或traspose）"></a>转置（’或traspose）</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a</span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; a&#x27;</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br><span class="line">&gt;&gt; transpose(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h4 id="行列式求值-det"><a href="#行列式求值-det" class="headerlink" title="行列式求值(det)"></a>行列式求值(det)</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x y z	<span class="comment">% 声明变量</span></span><br><span class="line">&gt;&gt; a = [x, y; z, x]</span><br><span class="line">a =</span><br><span class="line">[x, y]</span><br><span class="line">[z, x]</span><br><span class="line">&gt;&gt; det(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">x^<span class="number">2</span> - y*z</span><br></pre></td></tr></table></figure>
<h4 id="特征值、特征向量-eig"><a href="#特征值、特征向量-eig" class="headerlink" title="特征值、特征向量(eig)"></a>特征值、特征向量(eig)</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a =</span><br><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">7</span></span><br><span class="line">     <span class="number">7</span>    <span class="number">10</span>    <span class="number">12</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">8</span>    <span class="number">10</span></span><br><span class="line">&gt;&gt; [c, d] = eig(a) <span class="comment">%  c的每一列值表示矩阵a的一个特征向量，这里有3个特征向量，d的对角元素值代表a矩阵的特征值</span></span><br><span class="line">c =</span><br><span class="line">    <span class="number">0.3649</span>    <span class="number">0.8407</span>    <span class="number">0.3244</span></span><br><span class="line">    <span class="number">0.7267</span>   <span class="number">-0.5414</span>   <span class="number">-0.8111</span></span><br><span class="line">    <span class="number">0.5820</span>    <span class="number">0.0115</span>    <span class="number">0.4867</span></span><br><span class="line">d =</span><br><span class="line">   <span class="number">23.1244</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">         <span class="number">0</span>   <span class="number">-1.1244</span>         <span class="number">0</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>    <span class="number">0.0000</span></span><br><span class="line">&gt;&gt; <span class="built_in">diag</span>(d)	<span class="comment">% 取出d的对角线元素值，也就是a矩阵的特征值</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">23.1244</span></span><br><span class="line">   <span class="number">-1.1244</span></span><br><span class="line">    <span class="number">0.0000</span></span><br></pre></td></tr></table></figure>
<h4 id="矩阵的秩-rank"><a href="#矩阵的秩-rank" class="headerlink" title="矩阵的秩(rank)"></a>矩阵的秩(rank)</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; help rank</span><br><span class="line"> rank - 矩阵的秩</span><br><span class="line">    此 MATLAB 函数 返回矩阵 A 的秩。</span><br><span class="line">    k = rank(A)</span><br><span class="line">    k = rank(A,tol)</span><br><span class="line">    See also sprank, svd, orth, null</span><br><span class="line">    rank 的文档</span><br><span class="line">    名为 rank 的其他函数</span><br><span class="line">    </span><br><span class="line">&gt;&gt; rank(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h2 id="符号与数值"><a href="#符号与数值" class="headerlink" title="符号与数值"></a>符号与数值</h2><h3 id="符号声明（syms）"><a href="#符号声明（syms）" class="headerlink" title="符号声明（syms）"></a>符号声明（syms）</h3><p><code>syms x y z</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812121934583.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220812121934583.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220812121934583"></p>
<h3 id="符号展开-expand"><a href="#符号展开-expand" class="headerlink" title="符号展开(expand)"></a>符号展开(expand)</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt;`syms x</span><br><span class="line">&gt;&gt; a = (x+<span class="number">3</span>)^<span class="number">4</span></span><br><span class="line">a =</span><br><span class="line">(x + <span class="number">3</span>)^<span class="number">4</span></span><br><span class="line">&gt;&gt; expand(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">x^<span class="number">4</span> + <span class="number">12</span>*x^<span class="number">3</span> + <span class="number">54</span>*x^<span class="number">2</span> + <span class="number">108</span>*x + <span class="number">81</span></span><br></pre></td></tr></table></figure>
<h3 id="符号简化-simplify"><a href="#符号简化-simplify" class="headerlink" title="符号简化(simplify)"></a>符号简化(simplify)</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; b = <span class="built_in">sin</span>(x)^<span class="number">2</span> + <span class="built_in">cos</span>(x)^<span class="number">2</span></span><br><span class="line">b =</span><br><span class="line"><span class="built_in">cos</span>(x)^<span class="number">2</span> + <span class="built_in">sin</span>(x)^<span class="number">2</span></span><br><span class="line">&gt;&gt; simplify(b)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="分式通分-numden"><a href="#分式通分-numden" class="headerlink" title="分式通分(numden)"></a>分式通分(numden)</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x y</span><br><span class="line">&gt;&gt; a = x/y - y/x</span><br><span class="line">a =</span><br><span class="line">x/y - y/x</span><br><span class="line">&gt;&gt; [n, d]= numden(a)</span><br><span class="line">n =</span><br><span class="line">x^<span class="number">2</span> - y^<span class="number">2</span></span><br><span class="line">d =</span><br><span class="line">x*y</span><br></pre></td></tr></table></figure>
<h3 id="代入数值-subs"><a href="#代入数值-subs" class="headerlink" title="代入数值(subs)"></a>代入数值(subs)</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; z = [x+y, x;y x-y]</span><br><span class="line">z =</span><br><span class="line">[x + y,     x]</span><br><span class="line">[    y, x - y]</span><br><span class="line">&gt;&gt; subs(z, x, <span class="number">1</span>)	<span class="comment">% 部分代入</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">[y + <span class="number">1</span>,     <span class="number">1</span>]</span><br><span class="line">[    y, <span class="number">1</span> - y]</span><br><span class="line">&gt;&gt; subs(z, [x, y], [<span class="number">1</span>, <span class="number">2</span>])	<span class="comment">% 全部代入</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">[<span class="number">3</span>,  <span class="number">1</span>]</span><br><span class="line">[<span class="number">2</span>, <span class="number">-1</span>]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab学习——曲柄滑块的运动仿真</title>
    <url>/2022/05/24/Matlab%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%9B%B2%E6%9F%84%E6%BB%91%E5%9D%97%E7%9A%84%E8%BF%90%E5%8A%A8%E4%BB%BF%E7%9C%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>链接：<a href="https://blog.csdn.net/weixin_51002159/article/details/124784161">Matlab学习——曲柄滑块的运动仿真</a></p>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenMV初体验</title>
    <url>/2023/04/16/OpenMV%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Openmv初体验"><a href="#Openmv初体验" class="headerlink" title="Openmv初体验"></a>Openmv初体验</h1><p>OpenMV IDE</p>
<p>OPENMV4-STM32H743</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sensor, image, time</span><br><span class="line">sensor.reset()</span><br><span class="line">sensor.set_pixformat(sensor.RGB565) <span class="comment"># 图像彩色/灰白</span></span><br><span class="line">sensor.set_framesize(sensor.QVGA) <span class="comment"># 图像大小</span></span><br><span class="line">sensor.skip_frames(time = <span class="number">2000</span>) <span class="comment"># 几秒后开始或跳过几帧</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="comment">#sensor.set_windowing((120, 120)) # 设置中间窗口区域</span></span><br><span class="line"><span class="comment"># 翻转</span></span><br><span class="line">sensor.set_hmirror(<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#sensor.set_vflip(True)</span></span><br><span class="line"><span class="built_in">print</span>(sensor.width(), sensor.height(), sep=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(sensor.get_pixformat())</span><br><span class="line">ROI = [<span class="number">60</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">60</span>]</span><br><span class="line">Red = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">Green = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">Blue = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">White = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cnt += <span class="number">1</span></span><br><span class="line">    img = sensor.snapshot() <span class="comment"># 获取图像</span></span><br><span class="line">    static = img.get_statistics(roi = ROI)</span><br><span class="line">    <span class="comment">#time.sleep(1.0)</span></span><br><span class="line">    <span class="comment">#print(type(img))</span></span><br><span class="line">    <span class="comment">#print(img.get_pixel(160, 120))</span></span><br><span class="line">    <span class="comment">#img.set_pixel(160, 120, (255, 255, 0))</span></span><br><span class="line">    <span class="comment">#img.invert() # 二值化图像</span></span><br><span class="line">    <span class="keyword">if</span> cnt == <span class="number">20</span>:</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="comment">#print(img.width(), img.height(), img.format(), img.size(), sep=&quot; &quot;)</span></span><br><span class="line">        color_l = static.l_mode()</span><br><span class="line">        color_a = static.a_mode()</span><br><span class="line">        color_b = static.b_mode()</span><br><span class="line">        <span class="built_in">print</span>(color_l, color_a, color_b, sep=<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="comment"># 绘图</span></span><br><span class="line">    img.draw_rectangle(ROI, color=Red, thickness=<span class="number">5</span>) <span class="comment"># (x, y, w, h)</span></span><br><span class="line">    <span class="comment">#img.draw_line((10, 10, 100, 200), color=Green) # x0, y0, x1, y1</span></span><br><span class="line">    img.draw_circle(<span class="number">160</span>, <span class="number">120</span>, <span class="number">50</span>, color=Blue, fill=<span class="literal">True</span>) <span class="comment"># x, y, r</span></span><br><span class="line">    img.draw_cross(<span class="number">10</span>, <span class="number">20</span>, size=<span class="number">10</span>, color=White)</span><br><span class="line">    img.draw_string(<span class="number">100</span>, <span class="number">150</span>, <span class="string">&quot;OpenMV&quot;</span>, color=Red)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ef313d885c4c8ef30479ef883d3ffb0f.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ef313d885c4c8ef30479ef883d3ffb0f.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230415212017939"></p>
<p>颜色识别</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sensor, image, time</span><br><span class="line"></span><br><span class="line">sensor.reset()</span><br><span class="line">sensor.set_pixformat(sensor.RGB565)</span><br><span class="line">sensor.set_framesize(sensor.QVGA)</span><br><span class="line">sensor.skip_frames(time = <span class="number">2000</span>)</span><br><span class="line">w = sensor.width()</span><br><span class="line">h = sensor.height()</span><br><span class="line">sensor.set_windowing((h//<span class="number">2</span>, h//<span class="number">2</span>))</span><br><span class="line">clock = time.clock()</span><br><span class="line">red = (<span class="number">29</span>, <span class="number">61</span>, <span class="number">32</span>, <span class="number">127</span>, -<span class="number">128</span>, <span class="number">127</span>) <span class="comment"># 阈值</span></span><br><span class="line">blue = (<span class="number">32</span>, <span class="number">61</span>, <span class="number">10</span>, <span class="number">44</span>, -<span class="number">128</span>, -<span class="number">53</span>)</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    clock.tick()</span><br><span class="line">    img = sensor.snapshot()</span><br><span class="line">    <span class="comment">#print(clock.fps())</span></span><br><span class="line">    blobred = img.find_blobs([red],merge=<span class="literal">True</span>)</span><br><span class="line">    blobblue = img.find_blobs([blue],merge=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> blob <span class="keyword">in</span> blobred:</span><br><span class="line">        <span class="comment">#print(blob)</span></span><br><span class="line">        img.draw_rectangle(blob.rect(), thickness=<span class="number">5</span>, color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> blobblue:</span><br><span class="line">        <span class="comment">#print(blob)</span></span><br><span class="line">        img.draw_rectangle(i.rect(), thickness=<span class="number">5</span>, color=(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>))</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ab434b8ef7cd3c5c5172dfcbe89021f9.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ab434b8ef7cd3c5c5172dfcbe89021f9.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230415222308909"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;x&quot;</span>:<span class="number">12</span>, <span class="string">&quot;y&quot;</span>:<span class="number">16</span>, <span class="string">&quot;w&quot;</span>:<span class="number">28</span>, <span class="string">&quot;h&quot;</span>:<span class="number">24</span>, <span class="string">&quot;pixels&quot;</span>:<span class="number">584</span>, <span class="string">&quot;cx&quot;</span>:<span class="number">25</span>, <span class="string">&quot;cy&quot;</span>:<span class="number">28</span>, <span class="string">&quot;rotation&quot;</span>:<span class="number">3.102839</span>, <span class="string">&quot;code&quot;</span>:<span class="number">1</span>, <span class="string">&quot;count&quot;</span>:<span class="number">1</span>, <span class="string">&quot;perimeter&quot;</span>:<span class="number">142</span>, <span class="string">&quot;roundness&quot;</span>:<span class="number">0.815352</span>&#125;</span><br></pre></td></tr></table></figure>
<p>blob有多个方法：</p>
<ul>
<li><p>blob.rect() 返回这个色块的外框——矩形元组(x, y, w, h)，可以直接在image.draw_rectangle中使用。</p>
</li>
<li><p>blob.x() 返回色块的外框的x坐标（int），也可以通过blob[0]来获取。</p>
</li>
<li><p>blob.y() 返回色块的外框的y坐标（int），也可以通过blob[1]来获取。</p>
</li>
<li><p>blob.w() 返回色块的外框的宽度w（int），也可以通过blob[2]来获取。</p>
</li>
<li><p>blob.h() 返回色块的外框的高度h（int），也可以通过blob[3]来获取。</p>
</li>
<li><p>blob.pixels() 返回色块的像素数量（int），也可以通过blob[4]来获取。</p>
</li>
<li><p>blob.cx() 返回色块的外框的中心x坐标（int），也可以通过blob[5]来获取。</p>
</li>
<li><p>blob.cy() 返回色块的外框的中心y坐标（int），也可以通过blob[6]来获取。</p>
</li>
<li><p>blob.rotation() 返回色块的旋转角度（单位为弧度）（float）。如果色块类似一个铅笔，那么这个值为0~180°。如果色块是一个圆，那么这个值是无用的。如果色块完全没有对称性，那么你会得到0~360°，也可以通过blob[7]来获取。</p>
</li>
<li><p>blob.code() 返回一个16bit数字，每一个bit会对应每一个阈值。举个例子：</p>
<p>blobs = img.find_blobs([red, blue, yellow], merge=True)</p>
</li>
</ul>
<p>如果这个色块是红色，那么它的code就是0001，如果是蓝色，那么它的code就是0010。注意：一个blob可能是合并的，如果是红色和蓝色的blob，那么这个blob就是0011。这个功能可以用于查找颜色代码。也可以通过blob[8]来获取。</p>
<ul>
<li>blob.count() 如果merge=True，那么就会有多个blob被合并到一个blob，这个函数返回的就是这个的数量。如果merge=False，那么返回值总是1。也可以通过blob[9]来获取。</li>
<li>blob.area() 返回色块的外框的面积。应该等于(w * h)</li>
<li>blob.density() 返回色块的密度。这等于色块的像素数除以外框的区域。如果密度较低，那么说明目标锁定的不是很好。<br>比如，识别一个红色的圆，返回的blob.pixels()是目标圆的像素点数，blob.area()是圆的外接正方形的面积。</li>
</ul>
<p>颜色识别亮灯：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sensor, image, time, pyb</span><br><span class="line"></span><br><span class="line"><span class="comment">#将蓝灯赋值给变量led</span></span><br><span class="line">led = pyb.LED(<span class="number">3</span>) <span class="comment"># Red LED = 1, Green LED = 2, Blue LED = 3, IR LEDs = 4.</span></span><br><span class="line">usb = pyb.USB_VCP() <span class="comment"># This is a serial port object that allows you to</span></span><br><span class="line"><span class="comment"># communciate with your computer. While it is not open the code below runs.</span></span><br><span class="line"></span><br><span class="line">sensor.reset()</span><br><span class="line">sensor.set_pixformat(sensor.RGB565)</span><br><span class="line">sensor.set_framesize(sensor.QVGA)</span><br><span class="line">sensor.skip_frames(time = <span class="number">2000</span>)</span><br><span class="line">w = sensor.width()</span><br><span class="line">h = sensor.height()</span><br><span class="line">sensor.set_windowing((h//<span class="number">2</span>, h//<span class="number">2</span>))</span><br><span class="line">clock = time.clock()</span><br><span class="line">red = (<span class="number">29</span>, <span class="number">61</span>, <span class="number">32</span>, <span class="number">127</span>, -<span class="number">128</span>, <span class="number">127</span>)</span><br><span class="line">blue = (<span class="number">32</span>, <span class="number">61</span>, <span class="number">10</span>, <span class="number">44</span>, -<span class="number">128</span>, -<span class="number">53</span>)</span><br><span class="line">clock = time.clock()</span><br><span class="line"><span class="keyword">while</span>(usb.isconnected()):</span><br><span class="line">    img = sensor.snapshot()</span><br><span class="line">    blobblue = img.find_blobs([blue],merge=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(blobblue) != <span class="number">0</span>:</span><br><span class="line">        led.on()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        led.off()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> blobblue:</span><br><span class="line">        img.draw_rectangle(i.rect(), thickness=<span class="number">5</span>, color=(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
        <category>Openmv</category>
      </categories>
      <tags>
        <tag>Openmv</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab学习——滑块曲线生成APP设计</title>
    <url>/2022/04/16/Matlab%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%BB%91%E5%9D%97%E6%9B%B2%E7%BA%BF%E7%94%9F%E6%88%90APP%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>因为在以后的版本中将会删除GUIDE，<br>在删除GUIDE后，App可以继续运行，<br>但不能在GUIDE中对其进行编辑。所<br>以本文使用App设计工具创建新App。</p>
</blockquote>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><div style="position: relative; width: 30%; height: 100%;">
<iframe src="//player.bilibili.com/player.html?aid=425684335&bvid=BV1n3411n7a5&cid=577594010&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>

<h2 id="Edit-Field-编辑字段文本"><a href="#Edit-Field-编辑字段文本" class="headerlink" title="Edit Field(编辑字段文本)"></a>Edit Field(编辑字段文本)</h2><p>为了更好的提供用户操作，未使用数值文本框，这样更方便用户可以输入数字表达式来计算结果。分别为<code>主动件杆长(mm)</code>、<code>连杆杆长(mm)</code>、<code>角速度/(rad/s)</code>。</p>
<h2 id="UIAxies-坐标区"><a href="#UIAxies-坐标区" class="headerlink" title="UIAxies(坐标区)"></a>UIAxies(坐标区)</h2><blockquote>
<p>title:滑块位移曲线、滑块速度曲线、滑块加速度曲线</p>
<p>ylabel:理论位移/(mm)、滑块速度v/(m/s)、滑块加速度曲线a/(m/s^2)</p>
<p>xlabel:曲柄转角\theta/(°)</p>
</blockquote>
<h2 id="Button-按钮"><a href="#Button-按钮" class="headerlink" title="Button(按钮)"></a>Button(按钮)</h2><h3 id="绘图按钮"><a href="#绘图按钮" class="headerlink" title="绘图按钮"></a>绘图按钮</h3><p><strong>回调函数</strong>：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ButtonPushed</span><span class="params">(app, event)</span></span></span><br><span class="line">            theta = <span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">4</span>*<span class="built_in">pi</span>;</span><br><span class="line">            r = eval(app.radius.Value);</span><br><span class="line">            l = eval(app.<span class="built_in">length</span>.Value);</span><br><span class="line">            w = eval(app.rad.Value);</span><br><span class="line">            s = r*<span class="built_in">cos</span>(theta)+l*(<span class="number">1</span>-(r*<span class="built_in">sin</span>(theta)/l).^<span class="number">2</span>).^<span class="number">0.5</span>;</span><br><span class="line">            v = -r*w*(<span class="built_in">sin</span>(theta)+<span class="number">0.5</span>*(r/l)*<span class="built_in">sin</span>(<span class="number">2</span>*theta)/(l-(r*<span class="built_in">sin</span>(theta)/l).^<span class="number">2</span>).^<span class="number">0.5</span>);</span><br><span class="line">            a = -r*w.^<span class="number">2</span>*(<span class="built_in">cos</span>(theta)+r*(l.^<span class="number">2</span>*(<span class="number">1</span><span class="number">-2</span>*<span class="built_in">cos</span>(theta))-r.^<span class="number">2</span>*<span class="built_in">sin</span>(theta).^<span class="number">4</span>)/(l.^<span class="number">2</span>-(r*<span class="built_in">sin</span>(theta)).^<span class="number">2</span>).^<span class="number">1.5</span>);</span><br><span class="line">            yyaxis(app.UIAxes, <span class="string">&#x27;left&#x27;</span>);</span><br><span class="line">            <span class="built_in">plot</span>(app.UIAxes, theta/<span class="built_in">pi</span>*<span class="number">180</span>, s, <span class="string">&#x27;--r&#x27;</span>);</span><br><span class="line">            xlim(app.UIAxes,[<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line">            x_new = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">720</span>, <span class="number">9</span>);</span><br><span class="line">            xticks(app.UIAxes,x_new);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">plot</span>(app.UIAxes2, theta/<span class="built_in">pi</span>*<span class="number">180</span>, v/<span class="number">1e3</span>, <span class="string">&#x27;--r&#x27;</span>);</span><br><span class="line">            xlim(app.UIAxes2,[<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line">            x_new = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">720</span>, <span class="number">9</span>);</span><br><span class="line">            xticks(app.UIAxes2,x_new);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">plot</span>(app.UIAxes2_2, theta/<span class="built_in">pi</span>*<span class="number">180</span>, a/<span class="number">1e6</span>, <span class="string">&#x27;--r&#x27;</span>);</span><br><span class="line">            xlim(app.UIAxes2_2,[<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line">            x_new = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">720</span>, <span class="number">9</span>);</span><br><span class="line">            xticks(app.UIAxes2_2,x_new);</span><br><span class="line">            <span class="comment">% grid(app.UIAxes, &#x27;on&#x27;);</span></span><br><span class="line">        <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="导入CSV文件按钮"><a href="#导入CSV文件按钮" class="headerlink" title="导入CSV文件按钮"></a>导入CSV文件按钮</h3><p><strong>回调函数</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CSVButtonPushed</span><span class="params">(app, event)</span></span></span><br><span class="line">           [filename, pathname] = uigetfile(&#123;<span class="string">&#x27;.csv&#x27;</span>&#125;);</span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">isequal</span>(filename, <span class="number">0</span>) || <span class="built_in">isequal</span>(pathname, <span class="number">0</span>)</span><br><span class="line">               errordlg(<span class="string">&#x27;文件错误&#x27;</span>, <span class="string">&#x27;Error&#x27;</span>);</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               file = strcat(pathname, filename);</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">           csv_file = csvread(file, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">           yyaxis(app.UIAxes, <span class="string">&#x27;right&#x27;</span>);</span><br><span class="line">           <span class="built_in">plot</span>(app.UIAxes, csv_file(:,<span class="number">1</span>)*<span class="number">20</span>/<span class="built_in">pi</span>*<span class="number">180</span>, csv_file(:,<span class="number">2</span>), <span class="string">&#x27;-b&#x27;</span>);</span><br><span class="line">           xlim(app.UIAxes, [<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line">           ylim(app.UIAxes, [<span class="number">140</span>, <span class="number">260</span>]);</span><br><span class="line">    </span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">% Button pushed function: CSVButton_2</span></span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">CSVButton_2Pushed</span><span class="params">(app, event)</span></span></span><br><span class="line">           [filename, pathname] = uigetfile(&#123;<span class="string">&#x27;.csv&#x27;</span>&#125;);</span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">isequal</span>(filename, <span class="number">0</span>) || <span class="built_in">isequal</span>(pathname, <span class="number">0</span>)</span><br><span class="line">               errordlg(<span class="string">&#x27;文件错误&#x27;</span>, <span class="string">&#x27;Error&#x27;</span>);</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               file = strcat(pathname, filename);</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">           csv_file = csvread(file, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">           <span class="built_in">hold</span>(app.UIAxes2, <span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">           <span class="built_in">plot</span>(app.UIAxes2, csv_file(:,<span class="number">1</span>)*<span class="number">20</span>/<span class="built_in">pi</span>*<span class="number">180</span>, csv_file(:,<span class="number">2</span>)/<span class="number">1e3</span>, <span class="string">&#x27;-b&#x27;</span>);</span><br><span class="line">           xlim(app.UIAxes2, [<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">% Button pushed function: CSVButton_3</span></span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">CSVButton_3Pushed</span><span class="params">(app, event)</span></span></span><br><span class="line">           [filename, pathname] = uigetfile(&#123;<span class="string">&#x27;.csv&#x27;</span>&#125;);</span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">isequal</span>(filename, <span class="number">0</span>) || <span class="built_in">isequal</span>(pathname, <span class="number">0</span>)</span><br><span class="line">               errordlg(<span class="string">&#x27;文件错误&#x27;</span>, <span class="string">&#x27;Error&#x27;</span>);</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               file = strcat(pathname, filename);</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">           csv_file = csvread(file, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">           <span class="built_in">hold</span>(app.UIAxes2_2, <span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">           <span class="built_in">plot</span>(app.UIAxes2_2, csv_file(:,<span class="number">1</span>)*<span class="number">20</span>/<span class="built_in">pi</span>*<span class="number">180</span>, csv_file(:,<span class="number">2</span>)/<span class="number">1e6</span>, <span class="string">&#x27;-b&#x27;</span>);</span><br><span class="line">           xlim(app.UIAxes2_2, [<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="About按钮"><a href="#About按钮" class="headerlink" title="About按钮"></a>About按钮</h3><p><strong>回调函数</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AboutButtonPushed</span><span class="params">(app, event)</span></span></span><br><span class="line">            msgbox([<span class="string">&#x27;该APP适用于求曲柄滑块的滑块位移曲线、滑块速度曲线及滑块加速的曲线，&#x27;</span> ...</span><br><span class="line">                <span class="string">&#x27;文件是Solidworks的Montoin分析图解生成的CSV文件&#x27;</span>],<span class="string">&#x27;关于&#x27;</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="Exit按钮"><a href="#Exit按钮" class="headerlink" title="Exit按钮"></a>Exit按钮</h3><p><strong>回调函数</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ExitButtonPushed</span><span class="params">(app, event)</span></span></span><br><span class="line">            qus = questdlg(<span class="string">&#x27;是否要退出程序？&#x27;</span>, <span class="string">&#x27;Exit&#x27;</span>, <span class="string">&#x27;Yes&#x27;</span>,<span class="string">&#x27;No&#x27;</span>, <span class="string">&#x27;No&#x27;</span>);</span><br><span class="line">            <span class="keyword">switch</span> qus</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;Yes&#x27;</span></span><br><span class="line">                    delete(app.AppUIFigure);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;No&#x27;</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Opencv学习02</title>
    <url>/2022/01/15/Opencv%E5%AD%A6%E4%B9%A002/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="图像梯度处理"><a href="#图像梯度处理" class="headerlink" title="图像梯度处理"></a>图像梯度处理</h2><p>图像计算的是图像的边缘信息，它能反映图像像素的变化。如灰度值变化较大的地方，梯度值也较大；灰度值较小的地方，相应的梯度值较小。图像梯度就是指像素的已接到是。图像的边缘是指灰度值发生急剧变化的地方，边缘检测目的就是在不破坏图像信息的条件下，减少图像的数据量，绘制其边缘线图。</p>
<h3 id="Sobel算子"><a href="#Sobel算子" class="headerlink" title="Sobel算子"></a>Sobel算子</h3><h5 id="Opencv中提供l了cv2-Sobel-函数"><a href="#Opencv中提供l了cv2-Sobel-函数" class="headerlink" title="Opencv中提供l了cv2.Sobel()函数"></a><strong>Opencv中提供l了<code>cv2.Sobel()</code>函数</strong></h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dst = cv2.Sobel(src, ddepth, dx, dy[, dst[, ksize[, scale[, delta[, borderType]]]]])</span><br></pre></td></tr></table></figure>
<p>前四个是必须的参数：<br>src：需要处理的图像；<br>ddpteh：是图像的深度，-1表示采用的是与原图像相同的深度。目标图像的深度 必须大于等于原图像的深度；<br>dx和dy表示的是求导的阶数，0表示这个方向上没有求导，一般为0、1、2。<br>可选的参数：<br>dst：目标图像<br>ksize：Sobel算子的大小，必须为1、3、5、7。<br>scale：是缩放导数的比例常数，默认情况下没有伸缩系数；<br>delta：是一个可选的增量，将会加到最终的dst中，同样，默认情况下没有额外的值加到dst中；<br>borderType：判断图像边界的模式。这个参数默认值cv2.BORDER_DEFAULT。</p>
<h5 id="图像深度参数"><a href="#图像深度参数" class="headerlink" title="图像深度参数"></a>图像深度参数</h5><p>ddpteh这个参数代表dst图像的深度，可选的参数如CV_16S、CV_32F、CV_64F等。<br>由于Sobel算子计算的是差分，有正有负，并且可能存在超过255的数，因此如果采用8为深度的话，显示图像会有问题。</p>
<h5 id="计算水平方向偏导数的近似值"><a href="#计算水平方向偏导数的近似值" class="headerlink" title="计算水平方向偏导数的近似值"></a>计算水平方向偏导数的近似值</h5><p><img src="Sobelx.png" class="lazyload placeholder" data-srcset="Sobelx.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="sobelx"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图像梯度-Sobel算子 右-左</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;./images/cyclie.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 白：255 黑: 0 </span></span><br><span class="line"><span class="comment"># 从右向左白-黑为白 黑-白=-255 为负数则会截断取0</span></span><br><span class="line">img_sobelx = cv2.Sobel(img, cv2.CV_64F, <span class="number">1</span>, <span class="number">0</span>, ksize=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 取绝对值后，-255处为白</span></span><br><span class="line">img_sobel = cv2.convertScaleAbs(img_sobelx)</span><br><span class="line"><span class="comment"># 水平方向合并</span></span><br><span class="line">img_all = np.hstack((img, img_sobelx, img_sobel))</span><br><span class="line">image_show(<span class="string">&#x27;img_all&#x27;</span>, img_all)</span><br></pre></td></tr></table></figure>
<p><img src="sol_x.png" class="lazyload placeholder" data-srcset="sol_x.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h5 id="计算垂直方向偏导数的近似值"><a href="#计算垂直方向偏导数的近似值" class="headerlink" title="计算垂直方向偏导数的近似值"></a>计算垂直方向偏导数的近似值</h5><p><img src="Sobely.png" class="lazyload placeholder" data-srcset="Sobely.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="sobely"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 图像梯度-Sobel算子 下-上</span></span><br><span class="line">img_sobely = cv2.Sobel(img, cv2.CV_64F, <span class="number">0</span>, <span class="number">1</span>, ksize=<span class="number">3</span>)</span><br><span class="line">img_sobel = cv2.convertScaleAbs(img_sobely)</span><br><span class="line">img_all = np.hstack((img, img_sobely, img_sobel))</span><br><span class="line">image_show(<span class="string">&#x27;img_all&#x27;</span>, img_all)</span><br></pre></td></tr></table></figure>
<p><img src="sob_y.png" class="lazyload placeholder" data-srcset="sob_y.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="Scharr算子"><a href="#Scharr算子" class="headerlink" title="Scharr算子"></a>Scharr算子</h3><p>Scharr算子可被视为Sobel算子的改进，具有Sobel算子相同的计算速度，但是其精度更高。</p>
<p><strong>水平X:</strong></p>
<p><img src="Scharrx.png" class="lazyload placeholder" data-srcset="Scharrx.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p><strong>数值Y:</strong></p>
<p><img src="Scharry.png" class="lazyload placeholder" data-srcset="Scharry.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">panda_scharrx = cv2.Scharr(panda, cv2.CV_64F, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">panda_scharry = cv2.Scharr(panda, cv2.CV_64F, <span class="number">0</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h3 id="Laplacian算子"><a href="#Laplacian算子" class="headerlink" title="Laplacian算子"></a>Laplacian算子</h3><p>Laplacian算子是一种二姐导数算子，具有旋转不变性，可以满足不同方向上的边缘检测要求。<br><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">car = cv2.imread(<span class="string">&#x27;./images/car.png&#x27;</span>)</span><br><span class="line">car_Lap = cv2.Laplacian(car, cv2.CV_64F)</span><br><span class="line"><span class="comment"># 取绝对值</span></span><br><span class="line">car_Lap = cv2.convertScaleAbs(car_Lap)</span><br><span class="line"><span class="comment"># 合并</span></span><br><span class="line">car_all = np.hstack((car, car_Lap))</span><br><span class="line">image_show(<span class="string">&#x27;car_all&#x27;</span>, car_all)</span><br></pre></td></tr></table></figure>
<p><img src="car_lap.png" class="lazyload placeholder" data-srcset="car_lap.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Opencv项目实战:文档扫描OCR识别</title>
    <url>/2022/01/31/Opencv%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E6%96%87%E6%A1%A3%E6%89%AB%E6%8F%8FOCR%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Opencv项目实战-文档扫描OCR识别"><a href="#Opencv项目实战-文档扫描OCR识别" class="headerlink" title="Opencv项目实战:文档扫描OCR识别"></a>Opencv项目实战:文档扫描OCR识别</h1><p>边缘检测</p>
<p>轮廓检测</p>
<p>透视变换</p>
<p>OCR</p>
<h3 id="图像预处理"><a href="#图像预处理" class="headerlink" title="图像预处理"></a>图像预处理</h3><p>导入图像，对图像进行调整尺寸、滤波、边缘检测，得到更加明显的分界。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resize</span>(<span class="params">image, width=<span class="literal">None</span>, height=<span class="literal">None</span>, inter=cv2.INTER_AREA</span>):</span></span><br><span class="line">    dim = <span class="literal">None</span></span><br><span class="line">    h, w = image.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> width <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">and</span> height <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line">    <span class="keyword">if</span> width <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        r = height / <span class="built_in">float</span>(h)</span><br><span class="line">        dim = (<span class="built_in">int</span>(w * r), height)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r = width / <span class="built_in">float</span>(w)</span><br><span class="line">        dim = (width, <span class="built_in">int</span>(h * r))</span><br><span class="line">    resized = cv2.resize(image, dim, interpolation=inter)</span><br><span class="line">    <span class="keyword">return</span> resized</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;./images/page.jpg&#x27;</span>)</span><br><span class="line">ratio = img.shape[<span class="number">0</span>] / <span class="number">500.0</span></span><br><span class="line">orig = img.copy()</span><br><span class="line"><span class="comment"># 调整尺寸</span></span><br><span class="line">img = resize(orig, height = <span class="number">500</span>)</span><br><span class="line"><span class="comment"># 灰度处理</span></span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"><span class="comment"># 高斯滤波去除噪音点</span></span><br><span class="line">gray = cv2.GaussianBlur(gray, (<span class="number">5</span>, <span class="number">5</span>), <span class="number">0</span>)</span><br><span class="line"><span class="comment"># 边缘检测</span></span><br><span class="line">edged = cv2.Canny(gray, <span class="number">75</span>, <span class="number">200</span>)</span><br></pre></td></tr></table></figure>
<p><img src="doc.png" class="lazyload placeholder" data-srcset="doc.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="图像预处理"></p>
<h3 id="轮廓检测"><a href="#轮廓检测" class="headerlink" title="轮廓检测"></a>轮廓检测</h3><p>对轮廓进行排序， 通过切片操作去除前5个较大轮廓，再通过对5个轮廓遍历，通过轮廓近似找出外边界(即最大轮廓)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 轮廓检测</span></span><br><span class="line">cnts = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># cv2.drawContours(img, cnts, -1, (0, 255, 0), 2)</span></span><br><span class="line"><span class="comment"># img_show(&#x27;img&#x27;, img)</span></span><br><span class="line"><span class="comment"># 利用轮廓面积,降序找出前5个最大的轮廓</span></span><br><span class="line">cnts = <span class="built_in">sorted</span>(cnts, key=cv2.contourArea, reverse=<span class="literal">True</span>)[:<span class="number">5</span>]</span><br><span class="line"><span class="comment"># print(type(cnts))</span></span><br><span class="line"><span class="comment"># 遍历每一个轮廓</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> cnts:</span><br><span class="line">    <span class="comment"># 计算轮廓长度</span></span><br><span class="line">    peri = cv2.arcLength(c, <span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 轮廓近似 参数: 轮廓，周长百分比(值越小越近似) True为闭合 False为断开</span></span><br><span class="line">    approx = cv2.approxPolyDP(c, <span class="number">0.02</span>*peri, <span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># approx &lt;class&#x27;numpy.ndarray&#x27;&gt;</span></span><br><span class="line">    <span class="comment"># 用于存放同类型的一个多维数组对象,包含4个点</span></span><br><span class="line">    <span class="comment"># print(approx)</span></span><br><span class="line">    <span class="comment"># 最大边框</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(approx) == <span class="number">4</span>:</span><br><span class="line">        <span class="comment"># print(approx)</span></span><br><span class="line">        screenCnts = approx</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cv2.drawContours(img, [screenCnts], -<span class="number">1</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p><img src="doc_Con.png" class="lazyload placeholder" data-srcset="doc_Con.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="lunkuojianc"></p>
<h3 id="透视变换"><a href="#透视变换" class="headerlink" title="透视变换"></a>透视变换</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order_points</span>(<span class="params">pts</span>):</span></span><br><span class="line">    <span class="comment"># 一共4个坐标点</span></span><br><span class="line">    <span class="comment"># np.zeros()函数返回一个元素全为0且给定形状和类型的矩阵</span></span><br><span class="line">    <span class="comment"># 4行2列全为0的矩阵</span></span><br><span class="line">    rect = np.zeros((<span class="number">4</span>, <span class="number">2</span>), dtype=<span class="string">&quot;float32&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按顺序找到对应坐标0123分别是 左上，右上，右下，左下</span></span><br><span class="line">    <span class="comment"># 计算左上，右下</span></span><br><span class="line">    <span class="comment"># axis＝1表示按照行的方向相加</span></span><br><span class="line">    s = pts.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line">    rect[<span class="number">0</span>] = pts[np.argmin(s)]</span><br><span class="line">    rect[<span class="number">2</span>] = pts[np.argmax(s)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算右上和左下</span></span><br><span class="line">    <span class="comment"># np.diff a[n]-a[n-1]</span></span><br><span class="line">    diff = np.diff(pts, axis=<span class="number">1</span>)</span><br><span class="line">    rect[<span class="number">1</span>] = pts[np.argmin(diff)]</span><br><span class="line">    rect[<span class="number">3</span>] = pts[np.argmax(diff)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">four_point_transform</span>(<span class="params">image, pts</span>):</span></span><br><span class="line">    <span class="comment"># 获取输入坐标点</span></span><br><span class="line">    rect = order_points(pts)</span><br><span class="line">    <span class="comment"># 四个点，每个点包含(x, y)</span></span><br><span class="line">    (tl, tr, br, bl) = rect</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算输入的w和h值</span></span><br><span class="line">    <span class="comment"># 0: x 1: y</span></span><br><span class="line">    widthA = np.sqrt(((br[<span class="number">0</span>] - bl[<span class="number">0</span>]) ** <span class="number">2</span>) + ((br[<span class="number">1</span>] - bl[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    widthB = np.sqrt(((tr[<span class="number">0</span>] - tl[<span class="number">0</span>]) ** <span class="number">2</span>) + ((tr[<span class="number">1</span>] - tl[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    maxWidth = <span class="built_in">max</span>(<span class="built_in">int</span>(widthA), <span class="built_in">int</span>(widthB))</span><br><span class="line"></span><br><span class="line">    heightA = np.sqrt(((tr[<span class="number">0</span>] - br[<span class="number">0</span>]) ** <span class="number">2</span>) + ((tr[<span class="number">1</span>] - br[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    heightB = np.sqrt(((tl[<span class="number">0</span>] - bl[<span class="number">0</span>]) ** <span class="number">2</span>) + ((tl[<span class="number">1</span>] - bl[<span class="number">1</span>]) ** <span class="number">2</span>))</span><br><span class="line">    maxHeight = <span class="built_in">max</span>(<span class="built_in">int</span>(heightA), <span class="built_in">int</span>(heightB))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 变换后对应坐标位置</span></span><br><span class="line">    dst = np.array([</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [maxWidth - <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">        [maxWidth - <span class="number">1</span>, maxHeight - <span class="number">1</span>],</span><br><span class="line">        [<span class="number">0</span>, maxHeight - <span class="number">1</span>]], dtype=<span class="string">&quot;float32&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算变换矩阵， rect：原始图像 dst：目标图像</span></span><br><span class="line">    M = cv2.getPerspectiveTransform(rect, dst)</span><br><span class="line">    <span class="comment"># 投影变换</span></span><br><span class="line">    warped = cv2.warpPerspective(image, M, (maxWidth, maxHeight))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回变换后结果</span></span><br><span class="line">    <span class="keyword">return</span> warped</span><br><span class="line"></span><br><span class="line">wraped = four_point_transform(orig, screenCnts.reshape(<span class="number">4</span>, <span class="number">2</span>) * ratio)</span><br></pre></td></tr></table></figure>
<h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><p>最后调整大小输出结果</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w, h = wraped.shape[:<span class="number">2</span>]</span><br><span class="line">wraped = cv2.resize(wraped, dsize=(<span class="built_in">int</span>(h/<span class="number">4</span>), <span class="built_in">int</span>(w/<span class="number">4</span>)))</span><br><span class="line"><span class="comment"># print(wraped.shape)</span></span><br><span class="line">img_show(<span class="string">&#x27;wraped&#x27;</span>, wraped)</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./images/wraped.jpg&#x27;</span>, wraped)</span><br></pre></td></tr></table></figure>
<p><img src="result.png" class="lazyload placeholder" data-srcset="result.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p>others:</p>
<p><img src="receipt.png" class="lazyload placeholder" data-srcset="receipt.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="receipt"></p>
<p><img src="receipt_wraped.png" class="lazyload placeholder" data-srcset="receipt_wraped.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Opencv学习01</title>
    <url>/2021/12/14/Opencv%E5%AD%A6%E4%B9%A001/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="读取、显示、保存图片-输出图片像素值、尺寸"><a href="#读取、显示、保存图片-输出图片像素值、尺寸" class="headerlink" title="读取、显示、保存图片, 输出图片像素值、尺寸"></a>读取、显示、保存图片, 输出图片像素值、尺寸</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    <span class="comment"># 显示图像</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    <span class="comment"># 等待按键,时间单位为ms,若为0或-1表示无限等待</span></span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 释放所有窗口</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;./images/cat.png&quot;</span>)</span><br><span class="line"><span class="comment"># 图像调整为灰度图像</span></span><br><span class="line">img_gray = cv2.imread(<span class="string">&#x27;./images/cat.png&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># print(img)  # 打印像素值</span></span><br><span class="line"><span class="comment"># 打印尺寸【h, w, c】</span></span><br><span class="line"><span class="built_in">print</span>(img.shape)</span><br><span class="line"><span class="comment"># [h, w]</span></span><br><span class="line"><span class="built_in">print</span>(img_gray.shape)</span><br><span class="line"><span class="comment"># 保存图像</span></span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./images_save/cat_gray.png&#x27;</span>, img_gray)</span><br><span class="line">image_show(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line">image_show(<span class="string">&#x27;img_gray&#x27;</span>, img_gray)</span><br></pre></td></tr></table></figure>
<p><img src="cat_gray.png" class="lazyload placeholder" data-srcset="cat_gray.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="图像裁剪和拆分图像为b-g-r三通道"><a href="#图像裁剪和拆分图像为b-g-r三通道" class="headerlink" title="图像裁剪和拆分图像为b,g,r三通道"></a>图像裁剪和拆分图像为b,g,r三通道</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_bgr</span>(<span class="params">num1, num2, img</span>):</span></span><br><span class="line">    img[:, :, num1] = <span class="number">0</span></span><br><span class="line">    img[:, :, num2] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img_cat = cv2.imread(<span class="string">&quot;./images/cat.png&quot;</span>)</span><br><span class="line">img_car = cv2.imread(<span class="string">&quot;./images/car.png&quot;</span>)</span><br><span class="line"><span class="comment"># 拆分图像为b,g,r通道</span></span><br><span class="line">b, g, r = cv2.split(img_car)</span><br><span class="line"><span class="built_in">print</span>(img_cat.shape)</span><br><span class="line"><span class="comment"># 图像裁剪</span></span><br><span class="line">img_cut = img_cat[<span class="number">150</span>:<span class="number">400</span>, <span class="number">250</span>:<span class="number">450</span>]</span><br><span class="line">image_show(<span class="string">&#x27;img_cut&#x27;</span>, img_cut)</span><br><span class="line">image_show(<span class="string">&#x27;b&#x27;</span>, b)  <span class="comment"># 显示b通道</span></span><br><span class="line">image_show(<span class="string">&#x27;g&#x27;</span>, g)  <span class="comment"># 显示g通道</span></span><br><span class="line">image_show(<span class="string">&#x27;r&#x27;</span>, r)  <span class="comment"># 显示r通道</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="img_bgr.png" class="lazyload placeholder" data-srcset="img_bgr.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="图像只保留单通道"><a href="#图像只保留单通道" class="headerlink" title="图像只保留单通道"></a>图像只保留单通道</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只保留一个通道</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_bgr</span>(<span class="params">num1, num2, img</span>):</span></span><br><span class="line">    cur_img = img.copy()</span><br><span class="line">    cur_img[:, :, num1] = <span class="number">0</span></span><br><span class="line">    cur_img[:, :, num2] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> cur_img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img_cat = cv2.imread(<span class="string">&quot;./images/cat.png&quot;</span>)</span><br><span class="line"></span><br><span class="line">b, g, r = cv2.split(img_cat)</span><br><span class="line"><span class="built_in">print</span>(img_cat.shape)</span><br><span class="line">img_b = image_bgr(<span class="number">1</span>, <span class="number">2</span>, img_cat)  <span class="comment"># 只保留b通道</span></span><br><span class="line">img_g = image_bgr(<span class="number">0</span>, <span class="number">2</span>, img_cat)  <span class="comment"># 只保留g通道</span></span><br><span class="line">img_r = image_bgr(<span class="number">0</span>, <span class="number">0</span>, img_cat)  <span class="comment"># 只保留r通道</span></span><br><span class="line"></span><br><span class="line">image_show(<span class="string">&#x27;img_b&#x27;</span>, img_b)</span><br><span class="line">image_show(<span class="string">&#x27;img_g&#x27;</span>, img_g)</span><br><span class="line">image_show(<span class="string">&#x27;img_r&#x27;</span>, img_r)</span><br><span class="line">img_BGR = np.hstack((img_b, img_g, img_r))</span><br><span class="line">image_show(<span class="string">&#x27;img_BGR&#x27;</span>, img_BGR)</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./images_save/img_BGR.png&#x27;</span>, img_BGR)</span><br></pre></td></tr></table></figure>
<p><img src="cat_bgr.png" class="lazyload placeholder" data-srcset="cat_bgr.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="图像比例调整与计算"><a href="#图像比例调整与计算" class="headerlink" title="图像比例调整与计算"></a>图像比例调整与计算</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    <span class="comment"># 显示图像</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    <span class="comment"># 等待按键,时间单位为ms,若为0或-1表示无限等待</span></span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 释放所有窗口</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;./images/cat.png&quot;</span>)</span><br><span class="line"><span class="comment"># 图像调整为灰度图像</span></span><br><span class="line">img_gray = cv2.imread(<span class="string">&#x27;./images/cat.png&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># img_1 = cv2.resize(img, (200, 200))</span></span><br><span class="line">img_1 = cv2.resize(img, (<span class="number">0</span>, <span class="number">0</span>), fx=<span class="number">1.5</span>, fy=<span class="number">1</span>)</span><br><span class="line">image_show(<span class="string">&#x27;img&#x27;</span>, img_1)</span><br><span class="line"><span class="built_in">print</span>(img[:<span class="number">5</span>, :, <span class="number">0</span>])  <span class="comment"># 打印像素值</span></span><br><span class="line"><span class="comment"># 像素相加 越界取余</span></span><br><span class="line"><span class="built_in">print</span>((img+<span class="number">10</span>)[:<span class="number">5</span>, :, <span class="number">0</span>])</span><br><span class="line"><span class="comment"># 像素相加 越界=255</span></span><br><span class="line"><span class="built_in">print</span>(cv2.add(img, <span class="number">10</span>)[:<span class="number">5</span>, :, <span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p><img src="img_bili.png" class="lazyload placeholder" data-srcset="img_bili.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="图像阈值"><a href="#图像阈值" class="headerlink" title="图像阈值"></a>图像阈值</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    <span class="comment"># 显示图像</span></span><br><span class="line">    cv2.imshow(name, img)</span><br><span class="line">    <span class="comment"># 等待按键,时间单位为ms,若为0或-1表示无限等待</span></span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 释放所有窗口</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;./images/cat.png&quot;</span>)</span><br><span class="line">ret1, dst1 = cv2.threshold(img, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY)  <span class="comment"># 二值化阈值处理</span></span><br><span class="line">ret2, dst2 = cv2.threshold(img, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_BINARY_INV)  <span class="comment"># 反二值化阈值处理</span></span><br><span class="line">ret3, dst3 = cv2.threshold(img, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_TRUNC)  <span class="comment"># 截断阈值处理</span></span><br><span class="line">ret4, dst4 = cv2.threshold(img, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_TOZERO)  <span class="comment"># 超零值化处理</span></span><br><span class="line">ret5, dst5 = cv2.threshold(img, <span class="number">127</span>, <span class="number">255</span>, cv2.THRESH_TOZERO_INV)  <span class="comment"># 低零值化处理</span></span><br><span class="line"></span><br><span class="line">images = [img, dst1, dst2, dst3, dst4, dst5]</span><br><span class="line">title = [<span class="string">&#x27;img&#x27;</span>, <span class="string">&#x27;BINARY&#x27;</span>, <span class="string">&#x27;BINARY_INV&#x27;</span>, <span class="string">&#x27;TRUNC&#x27;</span>, <span class="string">&#x27;TOZERO&#x27;</span>, <span class="string">&#x27;TOZERO_INV&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="comment"># 行，列，索引</span></span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">3</span>, i+<span class="number">1</span>)</span><br><span class="line">    plt.imshow(images[i][:, :, ::-<span class="number">1</span>], <span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">    plt.title(title[i])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="img_yuzhi.png" class="lazyload placeholder" data-srcset="img_yuzhi.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Opencv项目实战:信用卡数字识别</title>
    <url>/2022/01/30/Opencv%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E4%BF%A1%E7%94%A8%E5%8D%A1%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Opencv项目实战：信用卡数字识别"><a href="#Opencv项目实战：信用卡数字识别" class="headerlink" title="Opencv项目实战：信用卡数字识别"></a>Opencv项目实战：信用卡数字识别</h2><h3 id="导入库，定义展示函数"><a href="#导入库，定义展示函数" class="headerlink" title="导入库，定义展示函数"></a>导入库，定义展示函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> imutils <span class="keyword">import</span> contours</span><br><span class="line"><span class="keyword">import</span> myutils <span class="comment"># 自定义的库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_show</span>(<span class="params">img, name</span>):</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;name&#x27;</span>, img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<h3 id="读取模板图片，进行轮廓检测。"><a href="#读取模板图片，进行轮廓检测。" class="headerlink" title="读取模板图片，进行轮廓检测。"></a>读取模板图片，进行轮廓检测。</h3><p>而轮廓检测<code>cv2.findContours()</code>接收是二值图像，所以先对模板进行灰度和二值处理，由于原图像是白底黑图，所以进行反二值处理为黑底白图。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数字图片</span></span><br><span class="line">number = cv2.imread(<span class="string">&#x27;./images/ocr_a_reference.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 转换为灰度图片 色彩空间转换</span></span><br><span class="line">number_gray = cv2.cvtColor(number, cv2.COLOR_BGR2GRAY)</span><br><span class="line"><span class="comment"># 转化为二值图像 图像阈值处理</span></span><br><span class="line"><span class="comment"># 其返回值为两个，【0】表示返回阈值 【1】表示返回图像</span></span><br><span class="line">number_gray = cv2.threshold(number_gray, <span class="number">10</span>, <span class="number">255</span>, cv2.THRESH_BINARY_INV)[<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<p>原图：<img src="number.png" class="lazyload placeholder" data-srcset="number.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="模板"></p>
<p>转化后：<img src="number_gray.png" class="lazyload placeholder" data-srcset="number_gray.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="二值处理"></p>
<h3 id="轮廓检测"><a href="#轮廓检测" class="headerlink" title="轮廓检测"></a>轮廓检测</h3><p>外轮廓，并绘出轮廓</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 轮廓检测 外轮廓</span></span><br><span class="line"><span class="comment"># 新版本opencv只有两个返回值，分别是轮廓和轮廓的层次信息</span></span><br><span class="line">refCnts, hierarchy = cv2.findContours(number_gray.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line"><span class="comment"># 绘制轮廓</span></span><br><span class="line"><span class="comment"># 参数：图像，轮廓，边缘索引，颜色，厚度</span></span><br><span class="line">cv2.drawContours(number, refCnts, -<span class="number">1</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">3</span>)  <span class="comment"># -1表示绘出所有轮廓</span></span><br></pre></td></tr></table></figure>
<p><img src="number_contours.png" class="lazyload placeholder" data-srcset="number_contours.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="轮廓检测"></p>
<h3 id="轮廓进行排序"><a href="#轮廓进行排序" class="headerlink" title="轮廓进行排序"></a>轮廓进行排序</h3><p>应用自定义库<code>myutils</code>对绘出的轮廓进行排序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_contours</span>(<span class="params">cnts, method=<span class="string">&quot;left-to-right&quot;</span></span>):</span></span><br><span class="line">    reverse = <span class="literal">False</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&quot;right-to-left&quot;</span> <span class="keyword">or</span> method == <span class="string">&quot;bottom-to-top&quot;</span>:</span><br><span class="line">        reverse = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&quot;top-to-bottom&quot;</span> <span class="keyword">or</span> method == <span class="string">&quot;bottom-to-top&quot;</span>:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 用一个最小的矩形，把找到的形状包起来x,y,h,w对外接矩形取左上点的横坐标，通过对横坐标的排序即可实现对数字的排序</span></span><br><span class="line">    <span class="comment"># boundingBoxes是一个由元组构成的列表，其中每个元组包含x、y、h、w四个值</span></span><br><span class="line">    boundingBoxes = [cv2.boundingRect(c) <span class="keyword">for</span> c <span class="keyword">in</span> cnts]  </span><br><span class="line">	<span class="comment"># zip[iterable,...]函数返回一个以元组为元素的列表,zip()和*操作符一起操作可以用来unzip(分解)一个列表为多个元组</span></span><br><span class="line">    <span class="comment"># zip(cnts, boundingBoxes),key=lambda b: b[1][i], reverse=reverse)这里首先将cnts, boundingBoxes合成</span></span><br><span class="line">    <span class="comment"># 为(cnts, (x, y, w, h))又根据自定义函数lambada函数提取b[1]=(x, y, w, h)根据i值确定x，y值排序，最后zip(*)拆分</span></span><br><span class="line">    <span class="comment"># 返回cnts和boundingBoxes值</span></span><br><span class="line">    (cnts, boundingBoxes) = <span class="built_in">zip</span>(*<span class="built_in">sorted</span>(<span class="built_in">zip</span>(cnts, boundingBoxes)</span><br><span class="line">                                        key=<span class="keyword">lambda</span> b: b[<span class="number">1</span>][i], reverse=reverse))  <span class="comment"># 使用其X进行判断</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cnts, boundingBoxes  <span class="comment"># 返回值为排序完的轮廓</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序从左到右，从上到下,根据method，则轮廓为根据x值升序进行排序</span></span><br><span class="line">refCnts = myutils.sort_contours(refCnts, method=<span class="string">&quot;left-to-right&quot;</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p>定义一个空字典进行模板匹配</p>
<p><code>digits=&#123;&#125;</code></p>
<h3 id="对轮廓进行遍历"><a href="#对轮廓进行遍历" class="headerlink" title="对轮廓进行遍历"></a>对轮廓进行遍历</h3><p>得到(x, y, w, h)值做外接矩形，并将外接矩形轮廓加入到字典中，其字典的<code>key</code>就是轮廓所代表的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 遍历每一个轮廓</span></span><br><span class="line"><span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(refCnts):</span><br><span class="line">    <span class="comment"># 计算外界矩形并relize的合适大小</span></span><br><span class="line">    (x, y, w, h) = cv2.boundingRect(c)</span><br><span class="line">    roi = number_gray[y: y+h, x: x+w]</span><br><span class="line">    roi = cv2.resize(roi, [<span class="number">57</span>, <span class="number">88</span>])</span><br><span class="line">    <span class="comment"># 每一个数字对应一个模板</span></span><br><span class="line">    digits[i] = roi</span><br></pre></td></tr></table></figure>
<p>定义形态学操作所需要的卷积核</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化卷积核</span></span><br><span class="line">ntKernel = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">9</span>, <span class="number">3</span>))</span><br><span class="line">ffKernel = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">5</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure>
<h3 id="读取信用卡图片"><a href="#读取信用卡图片" class="headerlink" title="读取信用卡图片"></a>读取信用卡图片</h3><p>引用<code>myutils</code>中的函数缩小尺寸，并进行灰度处理</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resize</span>(<span class="params">image, width=<span class="literal">None</span>, height=<span class="literal">None</span>, inter=cv2.INTER_AREA</span>):</span></span><br><span class="line">    dim = <span class="literal">None</span></span><br><span class="line">    (h, w) = image.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> width <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">and</span> height <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line">    <span class="keyword">if</span> width <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        r = height / <span class="built_in">float</span>(h)</span><br><span class="line">        dim = (<span class="built_in">int</span>(w * r), height)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r = width / <span class="built_in">float</span>(w)</span><br><span class="line">        dim = (width, <span class="built_in">int</span>(h * r))</span><br><span class="line">    resized = cv2.resize(image, dim, interpolation=inter)</span><br><span class="line">    <span class="keyword">return</span> resized</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取信用卡图像</span></span><br><span class="line">card_01 = cv2.imread(<span class="string">&#x27;./images/credit_card_01.png&#x27;</span>)</span><br><span class="line">card_01 = myutils.resize(card_01, width=<span class="number">300</span>)</span><br><span class="line">card_01_gray = cv2.cvtColor(card_01, cv2.COLOR_BGR2GRAY)</span><br></pre></td></tr></table></figure>
<p><img src="card_01.png" class="lazyload placeholder" data-srcset="card_01.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="card_01"></p>
<h3 id="礼帽操作"><a href="#礼帽操作" class="headerlink" title="礼帽操作"></a>礼帽操作</h3><p>对图像进行礼帽操作(原始图像-(开运算结果(先腐蚀后膨胀))），作用：获得图像的噪声信息或者比原始图像边缘更亮的边缘部分。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 礼帽操作 突出更明亮的区域（白色部分）</span></span><br><span class="line">card_tophat = cv2.morphologyEx(card_01_gray, cv2.MORPH_TOPHAT, ntKernel)</span><br></pre></td></tr></table></figure>
<p><img src="card_tophat.png" class="lazyload placeholder" data-srcset="card_tophat.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="礼帽操作"></p>
<h3 id="Sobel算子"><a href="#Sobel算子" class="headerlink" title="Sobel算子"></a>Sobel算子</h3><p>进行Sobel算子进行梯度运算，对噪声具有平滑作用，能很好的消除噪声的影响。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gradX = cv2.Sobel(card_tophat, ddepth=cv2.CV_32F, dx=<span class="number">1</span>, dy=<span class="number">0</span>, ksize=-<span class="number">1</span>)</span><br><span class="line">gradX = np.absolute(gradX)  <span class="comment"># 绝对值</span></span><br><span class="line"><span class="comment"># 将边界归一化处理，看的更清楚</span></span><br><span class="line">minVal, maxVal = np.<span class="built_in">min</span>(gradX), np.<span class="built_in">max</span>(gradX)</span><br><span class="line">gradX = <span class="number">255</span> * (gradX - minVal) / (maxVal - minVal)</span><br><span class="line"><span class="comment">#转化为8位无符号数</span></span><br><span class="line">gradX = gradX.astype(<span class="string">&#x27;uint8&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="card_sobel.png" class="lazyload placeholder" data-srcset="card_sobel.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="sobel算子"></p>
<h3 id="闭操作"><a href="#闭操作" class="headerlink" title="闭操作"></a>闭操作</h3><p>进行闭操作（先膨胀在腐蚀），可以填充白色物体内细小黑色空洞的区域、连接临近物体</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 填充白色区域内细小黑色空洞的区域， 将数字连在一起，形成白色块状</span></span><br><span class="line">gradX = cv2.morphologyEx(gradX, cv2.MORPH_CLOSE, ntKernel)</span><br></pre></td></tr></table></figure>
<p><img src="card_close_1.png" class="lazyload placeholder" data-srcset="card_close_1.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="card_close"></p>
<h3 id="二值化处理"><a href="#二值化处理" class="headerlink" title="二值化处理"></a>二值化处理</h3><p>二值化处理，将两种主题明显分隔开，用<code>THRESH_OTSU</code>自动做判断</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># THRESH_OTSU自动寻找合适的阈值， 需把阈值参数设置为0</span></span><br><span class="line">thresh = cv2.threshold(gradX, <span class="number">0</span>, <span class="number">255</span>, cv2.THRESH_BINARY | cv2.THRESH_OTSU)[<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<p><img src="card_gradx.png" class="lazyload placeholder" data-srcset="card_gradx.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="闭操作-1"><a href="#闭操作-1" class="headerlink" title="闭操作"></a>闭操作</h3><p>图像中白色块内有出先黑色空洞，再次使用闭操作填充黑色空洞部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在执行一个闭操作，白色填充黑色区域</span></span><br><span class="line">gradX = cv2.morphologyEx(gradX, cv2.MORPH_CLOSE, ffKernel)</span><br><span class="line">img_show(gradX, <span class="string">&quot;gradx&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="card_close_2.png" class="lazyload placeholder" data-srcset="card_close_2.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="gradx"></p>
<h3 id="轮廓检测，-绘制轮廓"><a href="#轮廓检测，-绘制轮廓" class="headerlink" title="轮廓检测， 绘制轮廓"></a>轮廓检测， 绘制轮廓</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制轮廓</span></span><br><span class="line">threshCnts, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">cnts = threshCnts</span><br><span class="line">cur_img = card_01.copy()</span><br><span class="line">cv2.drawContours(cur_img, cnts, -<span class="number">1</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p><img src="card_drawCon.png" class="lazyload placeholder" data-srcset="card_drawCon.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="绘制轮廓"></p>
<h3 id="过滤轮廓"><a href="#过滤轮廓" class="headerlink" title="过滤轮廓"></a>过滤轮廓</h3><p>选出需要的4个数字轮廓，并定义空列表添加所需轮廓</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">locs = []</span><br><span class="line"><span class="comment"># 遍历轮廓</span></span><br><span class="line"><span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(cnts):</span><br><span class="line">    <span class="comment"># 计算矩形</span></span><br><span class="line">    (x, y, w, h) = cv2.boundingRect(c)</span><br><span class="line">    ar = w / <span class="built_in">float</span>(h)</span><br><span class="line">    <span class="comment"># 通过计算长宽比例，把符合的留下来</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">2.5</span> &lt; ar &lt; <span class="number">4.0</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">40</span> &lt; w &lt; <span class="number">55</span>) <span class="keyword">and</span> (<span class="number">10</span> &lt; h &lt; <span class="number">20</span>):</span><br><span class="line">            locs.append((x, y, w, h))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(locs))  <span class="comment"># 数量为4</span></span><br><span class="line"><span class="comment"># 通过轮廓的x值从左到右排序(升序)</span></span><br><span class="line">locs = <span class="built_in">sorted</span>(locs, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>]) </span><br></pre></td></tr></table></figure>
<h3 id="得到每一个轮廓"><a href="#得到每一个轮廓" class="headerlink" title="得到每一个轮廓"></a>得到每一个轮廓</h3><p>先定义一个空列表<code>output = []</code>储存信用卡的数字</p>
<p>遍历<code>locs</code>列表里4个轮廓的每一个轮廓，对每一个轮廓的图像进行，轮廓检测与排序，从而的每一个轮廓中每一个数字的轮廓</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i, (gx, gy, gw, gh)) <span class="keyword">in</span> <span class="built_in">enumerate</span>(locs):</span><br><span class="line">    group_out = []</span><br><span class="line">    <span class="comment"># 往外扩展</span></span><br><span class="line">    group = card_01_gray[gy - <span class="number">5</span>: gy + gh + <span class="number">5</span>, gx - <span class="number">5</span>: gx + gw + <span class="number">5</span>]</span><br><span class="line">    <span class="comment"># img_show(group, &#x27;group&#x27;)</span></span><br><span class="line">    <span class="comment"># 轮廓检测找到每一个小轮廓</span></span><br><span class="line">    group = cv2.threshold(group, <span class="number">0</span>, <span class="number">255</span>, cv2.THRESH_BINARY | cv2.THRESH_OTSU)[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># 得到每一个数字的轮廓</span></span><br><span class="line">    digitCnts, hierarchy = cv2.findContours(group.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">    <span class="comment"># 排序从左到右</span></span><br><span class="line">    digitCnts = contours.sort_contours(digitCnts, method=<span class="string">&quot;left to right&quot;</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p>阈值处理得到的每一个轮廓图像</p>
<p><img src="con_1.png" class="lazyload placeholder" data-srcset="con_1.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="4000"><img src="con_2.png" class="lazyload placeholder" data-srcset="con_2.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="1234"><img src="con_3.png" class="lazyload placeholder" data-srcset="con_3.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="5678"><img src="con_4.png" class="lazyload placeholder" data-srcset="con_4.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="9010"></p>
<h3 id="得到每一个数字"><a href="#得到每一个数字" class="headerlink" title="得到每一个数字"></a>得到每一个数字</h3><p> 遍历每一个轮廓中的数字</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i, (gx, gy, gw, gh)) <span class="keyword">in</span> <span class="built_in">enumerate</span>(locs):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">	<span class="keyword">for</span> c <span class="keyword">in</span> digitCnts:</span><br><span class="line">        <span class="comment"># 得到每一个数字的轮廓值</span></span><br><span class="line">        (x, y, w, h) = cv2.boundingRect(c)</span><br><span class="line">        <span class="comment"># 提取每个数字图像</span></span><br><span class="line">        roi = group[y:y + h, x:x + w]</span><br><span class="line">        roi = cv2.resize(roi, (<span class="number">57</span>, <span class="number">88</span>))  <span class="comment"># 获得每个数字的轮廓并将其resize为和模板一样大小的图片以便于模式匹配</span></span><br></pre></td></tr></table></figure>
<h3 id="模板匹配"><a href="#模板匹配" class="headerlink" title="模板匹配"></a>模板匹配</h3><p>将信用卡得到的数字图像与模板数字图像进行模板匹配</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i, (gx, gy, gw, gh)) <span class="keyword">in</span> <span class="built_in">enumerate</span>(locs):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">	<span class="keyword">for</span> c <span class="keyword">in</span> digitCnts:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    	<span class="comment"># 计算匹配得分</span></span><br><span class="line">        scores = []</span><br><span class="line">        <span class="comment"># 在匹配中计算每一个得分</span></span><br><span class="line">        <span class="keyword">for</span> (digit, digitROI) <span class="keyword">in</span> digits.items():</span><br><span class="line">            <span class="comment"># 模板匹配, 得到匹配程度</span></span><br><span class="line">            result = cv2.matchTemplate(roi, digitROI, cv2.TM_CCOEFF)</span><br><span class="line">            <span class="comment"># 取最大值为完全匹配</span></span><br><span class="line">            <span class="comment"># (minVal, maxVal, minLoc, maxLoc) = cv2.minMaxLoc(result)</span></span><br><span class="line">            (_, score, _, _) = cv2.minMaxLoc(result)</span><br><span class="line">            <span class="comment"># 每一个轮廓匹配的最大值加入scores列表</span></span><br><span class="line">            scores.append(score)</span><br><span class="line">		<span class="comment"># np.argmax(a)这个函数是返回a中最大值的索引</span></span><br><span class="line">        group_out.append(<span class="built_in">str</span>(np.argmax(scores)))</span><br><span class="line">    cv2.rectangle(card_01, (gx - <span class="number">5</span>, gy - <span class="number">5</span>), (gx + gw + <span class="number">5</span>, gy + gh + <span class="number">5</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>)</span><br><span class="line">    <span class="comment"># &quot;str&quot;.join(item) str表示字符串（字符），item表示一个成员，注意括号里必须只能有一个成员</span></span><br><span class="line">    <span class="comment"># 得到item的每一个成员以str字符分隔在拼成一个字符串</span></span><br><span class="line">    cv2.putText(card_01, <span class="string">&quot;&quot;</span>.join(group_out), (gx, gy - <span class="number">15</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.65</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 得到结果</span></span><br><span class="line">    output.extend(group_out)</span><br></pre></td></tr></table></figure>
<p>这里由于<code>result</code>是与模板里的数字轮廓相匹配的程度，而其模板图片中轮廓所代表的值与scores的索引相同，顺序都为【0-9】，转换为字符即为正确数字。然后绘出矩形和数字在图像中即可完成。</p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>最后打印输出结果。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Card number :&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&quot;&quot;</span>.join(output)))</span><br><span class="line">img_show(card_01, <span class="string">&#x27;card_01&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="card_01_succes.png" class="lazyload placeholder" data-srcset="card_01_succes.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="result"><code>输出: Card number :4000123456789010</code></p>
<p>others：</p>
<p><img src="card_02.png" class="lazyload placeholder" data-srcset="card_02.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="card_02"><img src="card_03.png" class="lazyload placeholder" data-srcset="card_03.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="card_03"><img src="card_04.png" class="lazyload placeholder" data-srcset="card_04.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="card_04"></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Opencv学习03</title>
    <url>/2022/01/16/Opencv%E5%AD%A6%E4%B9%A003/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Canny边缘检测"><a href="#Canny边缘检测" class="headerlink" title="Canny边缘检测"></a>Canny边缘检测</h3><p>1）使用高斯滤波，平滑图像，滤除噪声</p>
<p>2）计算图像中每个像素点的梯度强度和方向</p>
<p>3）应用非极大值抑制，以消除边缘检测带来的杂散响应</p>
<p>4）应用双阈值检测来确定真实和潜在的边缘</p>
<p><img src="双阈值检测.png" class="lazyload placeholder" data-srcset="双阈值检测.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p>5）通过抑制孤立的边缘最终完成边缘检测</p>
<p><code>cv2.Canny</code>函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.Canny(image, threshold1, threshold2[, edges[, apertureSize[, L2gradient ]]]) </span><br></pre></td></tr></table></figure>
<ul>
<li>第一个参数是需要处理的原图像，该图像必须为单通道的灰度图；</li>
<li>第二个参数是阈值1，即minVal;</li>
<li>第三个参数是阈值2 ，即maxVal;</li>
<li>选参数中apertureSize就是Sobel算子的大小;</li>
<li>L2gradient参数是一个布尔值，如果为真，则使用更精确的L2范数进行计算（即两个方向的倒数的平方和再开放），否则使用L1范数（直接将两个方向导数的绝对值相加）。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canny边缘检测</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;./images/car.png&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># h, w = img.shape[:2]</span></span><br><span class="line"><span class="comment"># M = np.float32([[0.5, 0, 0], [0, 0.5, 0]])</span></span><br><span class="line"><span class="comment"># minVal：20 maxVal：100</span></span><br><span class="line">img_canny1 = cv2.Canny(img, <span class="number">20</span>, <span class="number">100</span>)</span><br><span class="line"><span class="comment"># minVal：50 maxVal：100</span></span><br><span class="line">img_canny2 = cv2.Canny(img, <span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line"><span class="comment"># minVal：80 maxVal：100</span></span><br><span class="line">img_canny3 = cv2.Canny(img, <span class="number">80</span>, <span class="number">100</span>)</span><br><span class="line">img_canny = np.hstack((img_canny1, img_canny2, img_canny3))</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./images/car_canny.png&#x27;</span>, img_canny)</span><br><span class="line">image_show(<span class="string">&#x27;img_canny&#x27;</span>, img_canny)</span><br></pre></td></tr></table></figure>
<p><img src="car_canny.png" class="lazyload placeholder" data-srcset="car_canny.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>PIL库的使用</title>
    <url>/2021/12/12/PIL%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="打开、显示、保存图片"><a href="#打开、显示、保存图片" class="headerlink" title="打开、显示、保存图片"></a>打开、显示、保存图片</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用模块</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># 打开图片</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;cat.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图片</span></span><br><span class="line">image.show()</span><br><span class="line"><span class="comment"># 保存图片</span></span><br><span class="line">image.save(<span class="string">&#x27;C:/Users/25354/Desktop/orange_cat.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 保存不同格式</span></span><br><span class="line">image.save(<span class="string">&#x27;C:/Users/25354/Desktop/cat.bmp&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="cat.png" class="lazyload placeholder" data-srcset="cat.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="图片增加文字"><a href="#图片增加文字" class="headerlink" title="图片增加文字"></a>图片增加文字</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;cat.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 调用画图模块</span></span><br><span class="line">draw = ImageDraw.Draw(img)</span><br><span class="line"><span class="comment"># 调用字体模块</span></span><br><span class="line">font = ImageFont.truetype(<span class="string">&#x27;C:/Windows/Fonts/Arial.ttf&#x27;</span>, <span class="number">24</span>)</span><br><span class="line"><span class="comment"># 增加文字</span></span><br><span class="line">draw.text((<span class="number">30</span>, <span class="number">50</span>), <span class="string">&quot;Orange_Cat&quot;</span>, fill=<span class="string">&quot;white&quot;</span>, font=font)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>
<p><img src="orange_cat.png" class="lazyload placeholder" data-srcset="orange_cat.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="滤镜功能"><a href="#滤镜功能" class="headerlink" title="滤镜功能"></a>滤镜功能</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageFilter</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;car.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 轮廓滤波</span></span><br><span class="line">img_contour = img.<span class="built_in">filter</span>(ImageFilter.CONTOUR)</span><br><span class="line"><span class="comment"># 浮雕滤波</span></span><br><span class="line">img_emboss = img.<span class="built_in">filter</span>(ImageFilter.EMBOSS)</span><br><span class="line">img_contour.show()</span><br><span class="line">img_emboss.show()</span><br></pre></td></tr></table></figure>
<p><img src="car滤波.png" class="lazyload placeholder" data-srcset="car滤波.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h5 id="ImageFilter类中预定义了如下滤波方法："><a href="#ImageFilter类中预定义了如下滤波方法：" class="headerlink" title="ImageFilter类中预定义了如下滤波方法："></a><code>ImageFilter</code>类中预定义了如下滤波方法：</h5><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">定义</th>
<th style="text-align:center">滤波</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">BLUR</td>
<td style="text-align:center">模糊滤波</td>
</tr>
<tr>
<td style="text-align:center">CONTOUR</td>
<td style="text-align:center">轮廓滤波</td>
</tr>
<tr>
<td style="text-align:center">DETAIL</td>
<td style="text-align:center">细节滤波</td>
</tr>
<tr>
<td style="text-align:center">EDGE_ENHANCE</td>
<td style="text-align:center">边界增强滤波</td>
</tr>
<tr>
<td style="text-align:center">EDGE_ENHANCE_MORE</td>
<td style="text-align:center">边界增强滤波（程度更深）</td>
</tr>
<tr>
<td style="text-align:center">EMBOSS</td>
<td style="text-align:center">浮雕滤波</td>
</tr>
<tr>
<td style="text-align:center">FIND_EDGES</td>
<td style="text-align:center">寻找边界滤波</td>
</tr>
<tr>
<td style="text-align:center">SMOOTH</td>
<td style="text-align:center">平滑滤波</td>
</tr>
<tr>
<td style="text-align:center">SMOOTH_MORE</td>
<td style="text-align:center">平滑滤波（程度更深）</td>
</tr>
<tr>
<td style="text-align:center">SHARPEN</td>
<td style="text-align:center">锐化滤波</td>
</tr>
<tr>
<td style="text-align:center">GaussianBlur(radius=2)</td>
<td style="text-align:center">高斯模糊</td>
</tr>
</tbody>
</table>
</div>
<h3 id="镜像功能"><a href="#镜像功能" class="headerlink" title="镜像功能"></a>镜像功能</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;表情包.jpg&#x27;</span>)</span><br><span class="line">img.show()</span><br><span class="line"><span class="comment"># 左右镜像</span></span><br><span class="line">img_lr = img.transpose(Image.FLIP_LEFT_RIGHT)</span><br><span class="line">img_lr.show()</span><br><span class="line"><span class="comment"># 上下镜像</span></span><br><span class="line">img_tb = img.transpose(Image.FLIP_TOP_BOTTOM)</span><br><span class="line">img_tb.show()</span><br></pre></td></tr></table></figure>
<p><img src="表情包_lr_tb.png" class="lazyload placeholder" data-srcset="表情包_lr_tb.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="拼接功能"><a href="#拼接功能" class="headerlink" title="拼接功能"></a>拼接功能</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;表情包.jpg&#x27;</span>)</span><br><span class="line">img_lr = Image.<span class="built_in">open</span>(<span class="string">&#x27;表情包lr.jpg&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印尺寸</span></span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line"><span class="comment"># 创建白布</span></span><br><span class="line"><span class="comment"># Image.new(&#x27;RGB&#x27;、&#x27;RGB2&#x27;, size, color)</span></span><br><span class="line">img_new = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (<span class="number">584</span>, <span class="number">300</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"><span class="comment"># 拼接</span></span><br><span class="line">img_new.paste(img, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">img_new.paste(img_lr, (<span class="number">292</span>, <span class="number">0</span>))</span><br><span class="line">img_new.show()</span><br><span class="line">img_new.save(<span class="string">&#x27;表情包paste.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="表情包paste.jpg" class="lazyload placeholder" data-srcset="表情包paste.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="裁剪功能"><a href="#裁剪功能" class="headerlink" title="裁剪功能"></a>裁剪功能</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;表情包.jpg&#x27;</span>)</span><br><span class="line"><span class="comment"># 裁剪</span></span><br><span class="line"><span class="comment"># 传递参数box(left, upper, right, lower)</span></span><br><span class="line">img_crop = img.crop((<span class="number">100</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>))</span><br><span class="line">img_crop.show()</span><br></pre></td></tr></table></figure>
<p><img src="crop.png" class="lazyload placeholder" data-srcset="crop.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p><img src="表情包_crop.png" class="lazyload placeholder" data-srcset="表情包_crop.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="色点和色块"><a href="#色点和色块" class="headerlink" title="色点和色块"></a>色点和色块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw</span><br><span class="line">img = Image.new(<span class="string">&#x27;RGBA&#x27;</span>, (<span class="number">300</span>, <span class="number">300</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">draw = ImageDraw.Draw(img)</span><br><span class="line"><span class="comment"># 色点</span></span><br><span class="line">draw.point((<span class="number">10</span>, <span class="number">10</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line"><span class="comment"># 色线</span></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>, <span class="number">100</span>):</span><br><span class="line">    draw.point((l, <span class="number">20</span>), (<span class="number">0</span>, <span class="number">250</span>, <span class="number">0</span>))</span><br><span class="line"><span class="comment"># 色块</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">230</span>, <span class="number">280</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">230</span>, <span class="number">280</span>):</span><br><span class="line">        draw.point((i, j), (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"><span class="comment"># 渐变色</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, <span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, <span class="number">200</span>):</span><br><span class="line">        draw.point((i, j), (i, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">img.show()</span><br><span class="line">img.save(<span class="string">&#x27;color.png&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="color.png" class="lazyload placeholder" data-srcset="color.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="图片缩放"><a href="#图片缩放" class="headerlink" title="图片缩放"></a>图片缩放</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;表情包.jpg&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line">img.show()</span><br><span class="line"><span class="comment"># 等比例缩放，缩放程度较大的自动调整</span></span><br><span class="line">img.thumbnail((<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>
<p><img src="表情包缩放.png" class="lazyload placeholder" data-srcset="表情包缩放.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Python的输入与输出</title>
    <url>/2021/11/14/Python%E7%9A%84%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>相比于C语言，python的输入输出更加多样化。下面对python的输入输出进行简单的总结。<br><span id="more"></span></p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h3 id="单行的输入"><a href="#单行的输入" class="headerlink" title="单行的输入"></a>单行的输入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()<span class="comment"># 字符串</span></span><br><span class="line">b = <span class="built_in">int</span>(<span class="built_in">input</span>())<span class="comment"># 将字符串强制转换为整型</span></span><br><span class="line">c = <span class="built_in">float</span>(<span class="built_in">input</span>())<span class="comment"># 将字符串强制转换为浮点型</span></span><br></pre></td></tr></table></figure>
<h3 id="连续输入指定数值并赋值"><a href="#连续输入指定数值并赋值" class="headerlink" title="连续输入指定数值并赋值"></a>连续输入指定数值并赋值</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b = <span class="built_in">input</span>().split()<span class="comment"># 字符串</span></span><br><span class="line"><span class="built_in">print</span>(a, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行结果</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">-------------------------------- </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">a</span>, <span class="title">b</span> = <span class="title">map</span>(<span class="params"><span class="built_in">int</span>,<span class="built_in">input</span>(<span class="params"></span>).split(<span class="params"></span>)</span>)# 整型</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">a, b</span>)</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params"><span class="built_in">type</span>(<span class="params">a</span>)</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># 运行结果</span></span><br><span class="line"><span class="class">1 2</span></span><br><span class="line"><span class="class">1 2</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">int</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure>
<h3 id="将输入的数据存为一个列表"><a href="#将输入的数据存为一个列表" class="headerlink" title="将输入的数据存为一个列表"></a>将输入的数据存为一个列表</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="built_in">input</span>().split()<span class="comment"># 列表数值为字符串</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行结果</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> a</span><br><span class="line">[<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">-------------------------------- </span></span><br><span class="line"><span class="class"># 列表数值为整型</span></span><br><span class="line"><span class="class"># 第一种</span></span><br><span class="line"><span class="class"><span class="title">a</span> = <span class="title">list</span>(<span class="params"><span class="built_in">map</span>(<span class="params"><span class="built_in">int</span>,<span class="built_in">input</span>(<span class="params"></span>).split(<span class="params"></span>)</span>)</span>)</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">a</span>)</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params"><span class="built_in">type</span>(<span class="params">a</span>)</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># 运行结果</span></span><br><span class="line"><span class="class">1 2 3 4 5</span></span><br><span class="line"><span class="class">[1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"># 第二种</span></span><br><span class="line"><span class="class"><span class="title">a</span> = [<span class="title">int</span>(<span class="params">i</span>) <span class="title">for</span> <span class="title">i</span> <span class="title">in</span> <span class="title">input</span>().<span class="title">split</span>()]</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params">a</span>)</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="params"><span class="built_in">type</span>(<span class="params">a</span>)</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#运行结果</span></span><br><span class="line"><span class="class">1 2 3 4 5</span></span><br><span class="line"><span class="class">[1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h3 id="直接输出"><a href="#直接输出" class="headerlink" title="直接输出"></a>直接输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">30</span></span><br><span class="line">b = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">c = <span class="number">3.14</span></span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line"><span class="number">30</span> a <span class="number">3.14</span></span><br></pre></td></tr></table></figure>
<h3 id="占位符（格式化输出）"><a href="#占位符（格式化输出）" class="headerlink" title="占位符（格式化输出）"></a>占位符（格式化输出）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;Xiaoming&#x27;</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;My name is %s, my age is %s&#x27;</span> % (name, age)) <span class="comment"># %s(针对所有数据类型)</span></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">My name <span class="keyword">is</span> Xiaoming, my age <span class="keyword">is</span> <span class="number">18</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line">weight = <span class="number">50.2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;my weight is %f kg&quot;</span> % weight)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;my weight is %5.2f kg&quot;</span> % weight)<span class="comment"># 占5个字符，保留2位小数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;my age is %d&#x27;</span> % age)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;my age is %5d&#x27;</span> % age)<span class="comment"># 占5个字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">my weight <span class="keyword">is</span> <span class="number">50.200000</span> kg</span><br><span class="line">my weight <span class="keyword">is</span> <span class="number">50.20</span> kg</span><br><span class="line">my age <span class="keyword">is</span> <span class="number">18</span></span><br><span class="line">my age <span class="keyword">is</span>    <span class="number">18</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<h3 id="format格式化输出"><a href="#format格式化输出" class="headerlink" title="format格式化输出"></a>format格式化输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;Xiaoming&#x27;</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,&#123;&#125;,you are &#123;&#125;&quot;</span>.<span class="built_in">format</span>(name,age))</span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">hello,Xiaoming,you are <span class="number">18</span></span><br><span class="line">----------------------------------------------</span><br><span class="line">name = <span class="string">&#x27;Xiaoming&#x27;</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,&#123;1&#125;,you are &#123;0&#125;-&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(age,name))<span class="comment">#索引是根据format后的数据进行的哦</span></span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line">hello,Xiaoming,you are <span class="number">18</span>-<span class="number">18</span></span><br><span class="line">----------------------------------------------</span><br><span class="line">name = <span class="string">&#x27;Xiaoming&#x27;</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,&#123;name&#125;,you are &#123;age&#125;&quot;</span>.<span class="built_in">format</span>(age=age, name=name))</span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line">hello,Xiaoming,you are <span class="number">18</span></span><br></pre></td></tr></table></figure>
<h4 id="format把float、int等数字字符串化设置对齐方式、宽度、保留几位"><a href="#format把float、int等数字字符串化设置对齐方式、宽度、保留几位" class="headerlink" title="format把float、int等数字字符串化设置对齐方式、宽度、保留几位"></a>format把float、int等数字字符串化设置对齐方式、宽度、保留几位</h4><p><a href="https://blog.csdn.net/dugushangliang/article/details/89884591">转载自独孤尚良dugushangliang</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float占8位留2位小数：&#123;:8.2f&#125;——默认右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float占18位留2位小数：&#123;:18.2f&#125;——默认右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float占18位留2位小数：&#123;:&gt;18.2f&#125;——右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float占18位留2位小数：&#123;:&lt;18.2f&#125;——左对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float占18位留2位小数：&#123;:^18.2f&#125;——居中对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float留2位小数：&#123;:.2f&#125;——默认右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float留2位小数：&#123;:&gt;.2f&#125;——右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float留2位小数：&#123;:&lt;.2f&#125;——左对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float留2位小数：&#123;:&lt;+.2f&#125;——左对齐带符号&quot;</span>.<span class="built_in">format</span>(<span class="number">1192.68123</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;float留2位小数：&#123;:&lt;.2%&#125;——左对齐百分比形式&quot;</span>.<span class="built_in">format</span>(<span class="number">0.6812345</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占8位：&#123;:&lt;8d&#125;——左对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占8位：&#123;:0&lt;8d&#125;——左对齐补0&quot;</span>.<span class="built_in">format</span>(<span class="number">1192</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占8位：&#123;:x&lt;8d&#125;——左对齐补x&quot;</span>.<span class="built_in">format</span>(<span class="number">1192</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占8位：&#123;:中&lt;8d&#125;——左对齐补中&quot;</span>.<span class="built_in">format</span>(<span class="number">1192</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占8位：&#123;:8d&#125;——默认右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占8位：&#123;:8d&#125;——默认右对齐&quot;</span>.<span class="built_in">format</span>(<span class="number">1192</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占22位：&#123;:22e&#125;——默认右对齐科学计数法&quot;</span>.<span class="built_in">format</span>(<span class="number">1230000</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;int占22位：&#123;:22,&#125;——默认右对齐逗号分隔数字&quot;</span>.<span class="built_in">format</span>(<span class="number">1230000</span>))</span><br><span class="line">---------------------------------------------------------------</span><br><span class="line"><span class="comment"># 运行结果</span></span><br><span class="line"><span class="built_in">float</span>占<span class="number">8</span>位留<span class="number">2</span>位小数： <span class="number">1192.68</span>——默认右对齐</span><br><span class="line"><span class="built_in">float</span>占<span class="number">18</span>位留<span class="number">2</span>位小数：           <span class="number">1192.68</span>——默认右对齐</span><br><span class="line"><span class="built_in">float</span>占<span class="number">18</span>位留<span class="number">2</span>位小数：           <span class="number">1192.68</span>——右对齐</span><br><span class="line"><span class="built_in">float</span>占<span class="number">18</span>位留<span class="number">2</span>位小数：<span class="number">1192.68</span>           ——左对齐</span><br><span class="line"><span class="built_in">float</span>占<span class="number">18</span>位留<span class="number">2</span>位小数：     <span class="number">1192.68</span>      ——居中对齐</span><br><span class="line"><span class="built_in">float</span>留<span class="number">2</span>位小数：<span class="number">1192.68</span>——默认右对齐</span><br><span class="line"><span class="built_in">float</span>留<span class="number">2</span>位小数：<span class="number">1192.68</span>——右对齐</span><br><span class="line"><span class="built_in">float</span>留<span class="number">2</span>位小数：<span class="number">1192.68</span>——左对齐</span><br><span class="line"><span class="built_in">float</span>留<span class="number">2</span>位小数：+<span class="number">1192.68</span>——左对齐带符号</span><br><span class="line"><span class="built_in">float</span>留<span class="number">2</span>位小数：<span class="number">68.12</span>%——左对齐百分比形式</span><br><span class="line"><span class="built_in">int</span>占<span class="number">8</span>位：<span class="number">1192</span>    ——左对齐</span><br><span class="line"><span class="built_in">int</span>占<span class="number">8</span>位：<span class="number">11920000</span>——左对齐补<span class="number">0</span></span><br><span class="line"><span class="built_in">int</span>占<span class="number">8</span>位：1192xxxx——左对齐补x</span><br><span class="line"><span class="built_in">int</span>占<span class="number">8</span>位：<span class="number">1192</span>中中中中——左对齐补中</span><br><span class="line"><span class="built_in">int</span>占<span class="number">8</span>位：    <span class="number">1192</span>——默认右对齐</span><br><span class="line"><span class="built_in">int</span>占<span class="number">8</span>位：    <span class="number">1192</span>——默认右对齐</span><br><span class="line"><span class="built_in">int</span>占<span class="number">22</span>位：          <span class="number">1.230000e+06</span>——默认右对齐科学计数法</span><br><span class="line"><span class="built_in">int</span>占<span class="number">22</span>位：             <span class="number">1</span>,<span class="number">230</span>,<span class="number">000</span>——默认右对齐逗号分隔数字</span><br></pre></td></tr></table></figure>
<h3 id="f-String格式化（第三种格式化输出）"><a href="#f-String格式化（第三种格式化输出）" class="headerlink" title="f-String格式化（第三种格式化输出）"></a>f-String格式化（第三种格式化输出）</h3><p>比较简单，实用，f 或者 F都可以哦 ，让字符和数字能够直接相加</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;python&#x27;</span></span><br><span class="line">age = <span class="number">30</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;hello,<span class="subst">&#123;name&#125;</span>,you are <span class="subst">&#123;age&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line">hello,python,you are <span class="number">30</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;python&#x27;</span></span><br><span class="line">age = <span class="number">30</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">F&quot;hello,<span class="subst">&#123;name&#125;</span>,you are <span class="subst">&#123;age&#125;</span>&quot;</span>)</span><br><span class="line">输出：</span><br><span class="line">hello,python,you are <span class="number">30</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;python&#x27;</span></span><br><span class="line">age = <span class="number">30</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">F&quot;<span class="subst">&#123;age * <span class="number">2</span>&#125;</span>&quot;</span>)</span><br><span class="line">输出：</span><br><span class="line"><span class="number">60</span></span><br></pre></td></tr></table></figure>
<p><a href="https://www.cnblogs.com/SkyOceanchen/p/11276921.html">转载于</a></p>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python读取Modbus-RTU协议</title>
    <url>/2023/11/27/Python%E8%AF%BB%E5%8F%96Modbus-RTU%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python读取modbus-RTU协议"><a href="#Python读取modbus-RTU协议" class="headerlink" title="Python读取modbus RTU协议"></a>Python读取modbus RTU协议</h1><h2 id="下载modbus-tk库"><a href="#下载modbus-tk库" class="headerlink" title="下载modbus_tk库"></a>下载modbus_tk库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install modbus_tk</span><br></pre></td></tr></table></figure>
<h2 id="execute主要函数"><a href="#execute主要函数" class="headerlink" title="execute主要函数"></a>execute主要函数</h2><p>参考文章<a href="https://blog.csdn.net/pista/article/details/121911024">Python玩转modbus</a></p>
<h2 id="软件模拟"><a href="#软件模拟" class="headerlink" title="软件模拟"></a>软件模拟</h2><ul>
<li>vspd</li>
<li>modbus slave</li>
</ul>
<p>虚拟<code>COM1</code>和<code>COM2</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231127172141569.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231127172141569.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231127172141569"></p>
<p>modbus slave连接COM2口</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231127172223111.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231127172223111.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231127172223111"></p>
<p>更改从机数据</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231127172237738.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231127172237738.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231127172237738"></p>
<h2 id="Python读取"><a href="#Python读取" class="headerlink" title="Python读取"></a>Python读取</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> serial</span><br><span class="line"><span class="keyword">from</span> modbus_tk <span class="keyword">import</span> defines <span class="keyword">as</span> cst</span><br><span class="line"><span class="keyword">from</span> modbus_tk <span class="keyword">import</span> modbus_rtu</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    port = <span class="string">&#x27;COM1&#x27;</span>  <span class="comment"># 串口号</span></span><br><span class="line">    baud = <span class="number">115200</span>  <span class="comment"># 波特率</span></span><br><span class="line">    ser = serial.Serial(port, baud, bytesize=<span class="number">8</span>, parity=<span class="string">&#x27;N&#x27;</span>, stopbits=<span class="number">1</span>, timeout=<span class="number">0.5</span>)</span><br><span class="line">    flag = ser.isOpen()</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Succeed to open port&quot;</span>)</span><br><span class="line">        master = modbus_rtu.RtuMaster(ser)</span><br><span class="line">        master.set_timeout(<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">        read_tuple = master.execute(<span class="number">1</span>, cst.READ_HOLDING_REGISTERS, <span class="number">0x00</span>, <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">print</span>(read_tuple)</span><br><span class="line">        read_tuple_hex = [<span class="built_in">hex</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> read_tuple]</span><br><span class="line">        <span class="built_in">print</span>(read_tuple_hex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Failed to open port&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Succeed to open port</span><br><span class="line">(0, 0, 1546, 0, 20, 0, 0, 100, 0, 36)</span><br><span class="line">[<span class="string">&#x27;0x0&#x27;</span>, <span class="string">&#x27;0x0&#x27;</span>, <span class="string">&#x27;0x60a&#x27;</span>, <span class="string">&#x27;0x0&#x27;</span>, <span class="string">&#x27;0x14&#x27;</span>, <span class="string">&#x27;0x0&#x27;</span>, <span class="string">&#x27;0x0&#x27;</span>, <span class="string">&#x27;0x64&#x27;</span>, <span class="string">&#x27;0x0&#x27;</span>, <span class="string">&#x27;0x24&#x27;</span>]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pyqt5+Yolov5+Unet+Centernet</title>
    <url>/2022/09/16/Pyqt5-Yolov5-Unet-centernet/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Pyqt5与Unet、yolov5、centernet结合"><a href="#Pyqt5与Unet、yolov5、centernet结合" class="headerlink" title="Pyqt5与Unet、yolov5、centernet结合"></a>Pyqt5与Unet、yolov5、centernet结合</h1><h2 id="创建导入文件按钮和显示图片"><a href="#创建导入文件按钮和显示图片" class="headerlink" title="创建导入文件按钮和显示图片"></a>创建导入文件按钮和显示图片</h2><p>使用Qtdesigner创建QpushButton和QLabel类，保存，使用PyUIC转换成python代码，编写当按钮被点击就会发出信号的处理函数<em>Importfile,返回文件路径，用opencv读取文件路径获取图片，转换图片格式由BGR转为RGB，根据Label的大小来使用</em>cv2.resize函数调整图片大小，使图片使用Label框，然后将cv 图片转换成 qt图片格式，显示在Label中。</p>
<p>  <img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image002.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image002.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img">  </p>
<h2 id="显示视频"><a href="#显示视频" class="headerlink" title="显示视频"></a>显示视频</h2><p>将文件路径进行字符串操作，获取到文件类型，进而判断是图片还是视频，来进行展示。定义展示视频函数和调整图片大小函数，通过读取视频文件路径获取到视频里的每一帧，在进行图片大小的挑战和图片格式的转换来显示视频。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image004.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image004.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h2 id="PyQt5与Yolov5结合"><a href="#PyQt5与Yolov5结合" class="headerlink" title="PyQt5与Yolov5结合"></a>PyQt5与Yolov5结合</h2><p>将Yolov5关于detect图像的负责处理检测的逻辑，具体包括实现模型选择，初始化，图片/视频/摄像头检测包装成一个对象，视频检测部分使用Qthead实现多线程处理。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image006.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image006.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p>利用导入yolov5权重按钮，将yolov5的权重文件赋值给导入的文件，点击检测文件按钮传递信号到<strong><em>term_or_con\</em></strong>函数，执行run函数运行多线程开始检测获得检测后的图片和检测目标的类别及数目，然后使用lambel自定义函数调用<strong><em>show_image\</em></strong>，在相应的label上显示图片或视频，在listWidget显示类别数目。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image008.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image008.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image010.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image010.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h2 id="PyQt5与Centernet结合"><a href="#PyQt5与Centernet结合" class="headerlink" title="PyQt5与Centernet结合"></a>PyQt5与Centernet结合</h2><p>导入Centernet对象，定义self.centernet,对centernet的模型配置默认路径，设置centernet需要检测图片传递的参数count（是否需要计数）和crop（是否需要裁剪）</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image012.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image012.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p>在show_net_img和show_net_video中分别对图片进行检测和类别名称和数目展示</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image014.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image014.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h2 id="PyQt5与Unet结合"><a href="#PyQt5与Unet结合" class="headerlink" title="PyQt5与Unet结合"></a>PyQt5与Unet结合</h2><p>同Centernet一样，首先调入Unet对象，对其中的权重、类别参数做默认配置，分别在图像及视频检测中添加unet检测图像函数，并在相应的label窗口中显示检测结果。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image016.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image016.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h2 id="优化界面"><a href="#优化界面" class="headerlink" title="优化界面"></a>优化界面</h2><p>增加置信度滑块、按钮的启用与禁用状态、各个控件的qss样式、界面背景和图标、退出提示框</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image002.jpg" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/clip_image002.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h2 id="版本迭代过程"><a href="#版本迭代过程" class="headerlink" title="版本迭代过程"></a>版本迭代过程</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220916174628069.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220916174628069.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220916174628069"></p>
<h2 id="结果演示"><a href="#结果演示" class="headerlink" title="结果演示"></a>结果演示</h2><p><a href="https://download.csdn.net/download/weixin_51002159/86501298?spm=1001.2014.3001.5503">CSDN程序源码</a></p>
<p><a href="https://github.com/GHigher12/Pyqt5_yolov5_unet_centernet">想白嫖的</a></p>
<p><a href="https://www.bilibili.com/video/BV1oa41197r2?vd_source=b57e293dfa3402722a1522f3d1c08c97#reply130279227488">演示视频</a></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
        <tag>Pyqt5</tag>
      </tags>
  </entry>
  <entry>
    <title>Python题目练习01</title>
    <url>/2021/12/18/Python%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A001/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="删除用户输入数字序列中的素数"><a href="#删除用户输入数字序列中的素数" class="headerlink" title="删除用户输入数字序列中的素数"></a><strong>删除用户输入数字序列中的素数</strong></h3><p><strong>题目： 用户输入多个正整数（两个数之间用一个空格间隔），请将其保存到一个列表中，删除其中的素数后按用户的输入顺序输出剩余正整数（两个数之间用一个空格间隔）。</strong></p>
<p><em>Input</em></p>
<p><strong>用户输入多个正整数（两个数之间用一个空格间隔）</strong></p>
<blockquote>
<p>3 2 4 1</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>按用户输入顺序输出非素数序列（两个数之间用一个空格间隔）</strong></p>
<blockquote>
<p> 4 1</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义判断素数函数，返回bool值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prime</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">1</span> :</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,x):</span><br><span class="line">        <span class="keyword">if</span> x%i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">a=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line">l=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> prime(i):</span><br><span class="line">        l.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="built_in">len</span>(l)-<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(l[i])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(l[i],end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="删除超龄员工"><a href="#删除超龄员工" class="headerlink" title="删除超龄员工"></a>删除超龄员工</h3><p><strong>题目： 用户输入n名员工的信息（姓名，年龄），且姓名不重复，保存到一个字典中，从字典中删除年龄超过60岁的员工，将剩余员工信息按用户的录入顺序输出。</strong></p>
<p><em>Input</em></p>
<p><strong>第一行输入n，代表要输入的员工信息人数 输入n行，每行由员工姓名和年龄构成，两个信息之间用一个空格间隔</strong></p>
<blockquote>
<p>2<br>a 60<br>b 61</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>按用户输入顺序输出年龄不超过60的员工信息，每行输出一位员工信息，姓名和年龄之间用一个空格间隔</strong></p>
<blockquote>
<p>a 60</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">input</span>())):</span><br><span class="line">    s = <span class="built_in">input</span>().split()</span><br><span class="line">    t = (s[<span class="number">0</span>], <span class="built_in">int</span>(s[<span class="number">1</span>]))</span><br><span class="line">    <span class="keyword">if</span> t[<span class="number">1</span>] &lt;= <span class="number">60</span>:</span><br><span class="line">        l.append(t)</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(t[<span class="number">0</span>], t[<span class="number">1</span>], sep=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="按学号升序输出学生信息"><a href="#按学号升序输出学生信息" class="headerlink" title="按学号升序输出学生信息"></a>按学号升序输出学生信息</h3><p><strong>题目： 用户输入n名学生的信息（学号，姓名），学号固定3位由0-9数字构成，不会重复，保存到一个字典中，请按学号由小到大的顺序输出学生的信息。</strong></p>
<p><em>Input</em></p>
<p><strong>第一行输入n，代表要输入的学生信息人数 输入n行，每一行由学生学号和姓名组成，两者之间用一个空格间隔</strong></p>
<blockquote>
<p>2<br>002 a<br>001 b</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>按学号由小到大的顺序输出学生的信息，每一行由学生学号和姓名组成，两者之间用一个空格间隔</strong></p>
<blockquote>
<p>001 b<br>002 a</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">input</span>())):</span><br><span class="line">    s = <span class="built_in">input</span>().split()</span><br><span class="line">    t = (s[<span class="number">0</span>], s[<span class="number">1</span>])</span><br><span class="line">    l.append(t)</span><br><span class="line"><span class="comment"># 选择法排序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, <span class="built_in">len</span>(l)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(l[i][<span class="number">0</span>]) &gt; <span class="built_in">int</span>(l[j][<span class="number">0</span>]):</span><br><span class="line">            l[i], l[j] = l[j], l[i]</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(y[<span class="number">0</span>], y[<span class="number">1</span>], sep=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="删除字符串中的特定字符"><a href="#删除字符串中的特定字符" class="headerlink" title="删除字符串中的特定字符"></a>删除字符串中的特定字符</h3><p><strong>题目： 第一行输入一个字符串，第二行输入要从第一行字符串中删除的字符 c，大小写不区分，第三行输出删除制定字符后的结果。</strong></p>
<p>Input</p>
<p><strong>第一行中输入一行字符串 第二行输入待删除的一个字符</strong></p>
<blockquote>
<p>WINDOw<br>w</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>输出删除制定字符后的结果。</strong></p>
<blockquote>
<p> INDO</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># strip()方法用于移除字符串头尾指定的字符（默认为空格）</span></span><br><span class="line">s1 = <span class="built_in">input</span>().strip()</span><br><span class="line">s2 = <span class="built_in">input</span>().strip()</span><br><span class="line">s1 = s1.replace(s2.upper(), <span class="string">&#x27;&#x27;</span>).replace(s2.lower(), <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(s1)</span><br></pre></td></tr></table></figure>
<h3 id="逆序输出列表元素"><a href="#逆序输出列表元素" class="headerlink" title="逆序输出列表元素"></a><strong>逆序输出列表元素</strong></h3><p><strong>题目： 输入一行n个字符串，逆序输出字符串中的所有元素。</strong></p>
<p><em>Input</em></p>
<blockquote>
<p>ab cd efg</p>
</blockquote>
<p><em>Output</em></p>
<blockquote>
<p> ba dc gfe</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过递归函数实现字符串倒序</span></span><br><span class="line"><span class="comment"># def rvs(s):</span></span><br><span class="line"><span class="comment">#     if s == &quot;&quot;:</span></span><br><span class="line"><span class="comment">#         return s</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         return rvs(s[1:])+s[0]</span></span><br><span class="line"></span><br><span class="line">string = <span class="built_in">input</span>().split()</span><br><span class="line">str_l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">    <span class="comment"># 字符串切片</span></span><br><span class="line">    a = i[::-<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># a = rvs(i)</span></span><br><span class="line">    str_l.append(a)</span><br><span class="line"><span class="keyword">for</span> index, value <span class="keyword">in</span> <span class="built_in">enumerate</span>(str_l):</span><br><span class="line">    <span class="keyword">if</span> index + <span class="number">1</span> == <span class="built_in">len</span>(str_l):</span><br><span class="line">        <span class="built_in">print</span>(value, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(value, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch-MNIST手写数据集</title>
    <url>/2023/07/21/Pytorch-MNIST%E6%89%8B%E5%86%99%E6%95%B0%E6%8D%AE%E9%9B%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Pytorch-MNIST手写数据集"><a href="#Pytorch-MNIST手写数据集" class="headerlink" title="Pytorch-MNIST手写数据集"></a>Pytorch-MNIST手写数据集</h1><p>MNIST数据集下载:<a href="https://yann.lecun.com/exdb/mnist/">https://yann.lecun.com/exdb/mnist/</a></p>
<p>MNIST数据集由0~9的十个数字组成的照片，每一个数字有7000张28*28大小的图片组成，其中训练集与测试集之比为6000：1000</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721100311272.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721100311272.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230721100311272"></p>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>每张图片为28*28=784</p>
<ul>
<li>$X = [v1, v2 …. v784] $</li>
</ul>
<p>$X: [28, 28] \to [1, 784]$</p>
<ul>
<li>$H_{1}=XW_{1}+b1$</li>
</ul>
<p>$W_{1}:[d_{1}, 784]$</p>
<p>$b_{1} = [d1]$</p>
<script type="math/tex; mode=display">
[1, 784][d_{1}, 784]^{T}+[d_{1}] = [1, d_{1}]</script><ul>
<li>$H_{2}=XW_{2}+b2$</li>
</ul>
<p>$W_{2}:[d_{2}, d_{1}]$</p>
<p>$b_{2} = [d2]$</p>
<script type="math/tex; mode=display">
[1, d_{1}][d_{2}, d_{1}]^{T}+[d_{2}] = [1, d_{2}]</script><ul>
<li>$H_{3}=XW_{3}+b3$</li>
</ul>
<p>$W_{3}:[d_{3}, d_{2}]$</p>
<p>$b_{3} = [d3]$</p>
<script type="math/tex; mode=display">
[1, d_{2}][d_{3}, d_{2}]^{T}+[d_{3}] = [1, d_{3}]</script><h2 id="计算loss"><a href="#计算loss" class="headerlink" title="计算loss"></a>计算loss</h2><p>label为0~9</p>
<p>Y:[0/1/…./9]   one-hot编码格式</p>
<p>label为1则:[0, 1, 0, 0, 0, 0, 0, 0, 0, 0]</p>
<p>label为3则:[0, 0, 0, 3, 0, 0, 0, 0, 0, 0]</p>
<p>$pred = W_{3}[W_{2}(W_{1}X+b_{1})+b_{2}]+b{3}$</p>
<p>$欧式距离差：loss=\sum(pred-Y)^{2}$</p>
<h2 id="激活函数"><a href="#激活函数" class="headerlink" title="激活函数"></a>激活函数</h2><p>ReLU</p>
<p>$f（x）=max(0, z)$</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721102320167.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721102320167.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230721102320167"></p>
<p>$H_{1} = Relu(XW_{1}+b_{1})$</p>
<p>$H_{2} = Relu(H_{1}W_{2}+b_{2})$</p>
<p>$H_{3} = f(H_{2}W_{3}+b_{3})$</p>
<p><code>argmax(pred)</code> 得到概率最大值索引</p>
<h2 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-  </span></span><br><span class="line"><span class="comment"># @Time : 2023/7/21 9:37</span></span><br><span class="line"><span class="comment"># @File : demo03_MNIST.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> optim</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> import_file.utils <span class="keyword">import</span> plot_image, plot_curve, one_hot</span><br><span class="line"></span><br><span class="line">batch_size = <span class="number">512</span></span><br><span class="line"><span class="comment"># step1. load dataset</span></span><br><span class="line">tf_compose_1 = transforms.Compose([transforms.ToTensor(), transforms.Normalize((<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))])</span><br><span class="line">train_loader = torch.utils.data.DataLoader(</span><br><span class="line">    torchvision.datasets.MNIST(<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>,</span><br><span class="line">                               transform=torchvision.transforms.Compose([</span><br><span class="line">                                   torchvision.transforms.ToTensor(),</span><br><span class="line">                                   torchvision.transforms.Normalize(</span><br><span class="line">                                       (<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))</span><br><span class="line">                               ])),</span><br><span class="line">    batch_size=batch_size, shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">test_loader = torch.utils.data.DataLoader(</span><br><span class="line">    torchvision.datasets.MNIST(<span class="string">&#x27;./data&#x27;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>,</span><br><span class="line">                               transform=torchvision.transforms.Compose([</span><br><span class="line">                                   torchvision.transforms.ToTensor(),</span><br><span class="line">                                   torchvision.transforms.Normalize(</span><br><span class="line">                                       (<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))</span><br><span class="line">                               ])),</span><br><span class="line">    batch_size=batch_size, shuffle=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">x, y = <span class="built_in">next</span>(<span class="built_in">iter</span>(train_loader))</span><br><span class="line"><span class="built_in">print</span>(x.shape, y.shape, x.<span class="built_in">min</span>(), x.<span class="built_in">max</span>())</span><br><span class="line"><span class="comment"># plot_image(x, y, &#x27;img sample&#x27;)</span></span><br><span class="line"><span class="comment"># print(train_loader)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Net</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">28</span> * <span class="number">28</span>, <span class="number">256</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">256</span>, <span class="number">64</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        h1 = F.relu(self.fc1(x))</span><br><span class="line">        h2 = F.relu(self.fc2(h1))</span><br><span class="line">        h3 = self.fc3(h2)</span><br><span class="line">        <span class="keyword">return</span> h3</span><br><span class="line"></span><br><span class="line">net = Net()</span><br><span class="line"><span class="comment"># [w1, b1, w2, b2, w3, b3]</span></span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.01</span>, momentum=<span class="number">0.9</span> )</span><br><span class="line">train_loss = []</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> batch_idx, (x, y) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loader):</span><br><span class="line">        <span class="comment"># x: [512, 1, 28, 28] y:[512]</span></span><br><span class="line">        <span class="comment"># print(x.shape, y.shape, sep=&#x27;\n&#x27;)</span></span><br><span class="line">        <span class="comment"># [512, 1, 28, 28] =&gt; [512, 784]</span></span><br><span class="line">        x = x.view(x.size(<span class="number">0</span>), <span class="number">28</span>*<span class="number">28</span>)</span><br><span class="line">        <span class="comment"># [512, 10]</span></span><br><span class="line">        out = net(x)</span><br><span class="line">        y_onehot = one_hot(y)</span><br><span class="line">        loss = F.mse_loss(out, y_onehot)</span><br><span class="line">        <span class="comment"># item取出张量数值</span></span><br><span class="line">        train_loss.append(loss.item())</span><br><span class="line">        <span class="comment"># 梯度清零</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        <span class="comment"># w&#x27; = w -lr*grad</span></span><br><span class="line">        optimizer.step()</span><br><span class="line">        <span class="keyword">if</span> batch_idx % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(epoch, batch_idx, loss.item())</span><br><span class="line"></span><br><span class="line"><span class="comment"># get optimal [w1, b1, w2, b2, w3, b3]</span></span><br><span class="line">plot_curve(train_loss)</span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">total_correct = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x, y <span class="keyword">in</span> test_loader:</span><br><span class="line">    x = x.view(x.size(<span class="number">0</span>), <span class="number">28</span>*<span class="number">28</span>)</span><br><span class="line">    out = net(x)</span><br><span class="line">    <span class="comment"># 维度为1及行维度</span></span><br><span class="line">    pred = out.argmax(dim=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># torch.eq()</span></span><br><span class="line">    <span class="comment"># 对两个张量Tensor进行逐元素的比较，若相同位置的两个元素相同，则返回True；若不同，返回False</span></span><br><span class="line">    <span class="comment"># sum()为求True的个数 返回为tensor类型</span></span><br><span class="line">    correct = pred.eq(y).<span class="built_in">sum</span>().<span class="built_in">float</span>().item()</span><br><span class="line">    total_correct += correct</span><br><span class="line"></span><br><span class="line">total_num = <span class="built_in">len</span>(test_loader.dataset)</span><br><span class="line"><span class="comment"># 准确率</span></span><br><span class="line">acc = total_correct / total_num</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;准确率:&quot;</span>, acc)</span><br><span class="line"></span><br><span class="line">x, y = <span class="built_in">next</span>(<span class="built_in">iter</span>(test_loader))</span><br><span class="line">out = net(x.view(x.size(<span class="number">0</span>), <span class="number">28</span>*<span class="number">28</span>))</span><br><span class="line">pred = out.argmax(dim=<span class="number">1</span>)</span><br><span class="line">plot_image(x, pred, <span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="comment"># -------------OUTPUT------------------</span></span><br><span class="line">准确率: <span class="number">0.8895</span></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721190414834.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721190414834.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230721190414834"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721190422604.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721190422604.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230721190422604"></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Python题目练习02</title>
    <url>/2021/12/22/Python%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A002/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="递归求斐波那契数列"><a href="#递归求斐波那契数列" class="headerlink" title="递归求斐波那契数列"></a>递归求斐波那契数列</h3><p><strong>题目：斐波那契数列的排列是：0，1，1，2，3，5，8，13，21，34，55，89，144……，即从第三个数开始，每个数等于前面两个数的和。</strong></p>
<p><em>Input</em></p>
<p><strong>输入一个正整数n（n代表斐波那契数列中的第n个位置）。</strong></p>
<blockquote>
<p>4</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>输出斐波那契数列第n个位置的值。</strong></p>
<blockquote>
<p>2</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonacci</span>(<span class="params">i</span>):</span></span><br><span class="line">    num_list = [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> i &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> num_list[i]</span><br><span class="line">    <span class="keyword">elif</span> i &gt;= <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> fibonacci(i - <span class="number">2</span>) + fibonacci(i - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(fibonacci(num-<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<h3 id="用递归求最大公约数"><a href="#用递归求最大公约数" class="headerlink" title="用递归求最大公约数"></a>用递归求最大公约数</h3><p><strong>题目：计算两个正整数的最大公约数。提示：如果p&gt;q，则p和q的最大公约数等于q和p%q的最大公约数。</strong></p>
<p><img src="最大公约数算法.png" class="lazyload placeholder" data-srcset="最大公约数算法.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p><em>Input</em></p>
<p><strong>输入一行，由两个正整数组成，中间用一个空格间隔。</strong></p>
<blockquote>
<p>6 8</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>输出最大公约数。</strong></p>
<blockquote>
<p>2</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divisor</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> b != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> a &gt; b:</span><br><span class="line">            big, small = b, a % b</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            big, small = a, b % a</span><br><span class="line">        <span class="keyword">return</span> divisor(big, small)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num1, num2 = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="built_in">print</span>(divisor(num1, num2))</span><br></pre></td></tr></table></figure>
<h3 id="搬运工问题"><a href="#搬运工问题" class="headerlink" title="搬运工问题"></a>搬运工问题</h3><p><strong>题目：一位搬运工需要搬运m件家具，第一天搬运的家具是m件家具的一半多1件，第二天搬运的家具是第一天剩余家具的一半多1件，以后每天都是搬运剩余家具的一半多1件，第n天早上剩余的家具只有1件，求m。</strong></p>
<p><em>Input</em></p>
<p><strong>输入天数n</strong></p>
<blockquote>
<p>7</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>输出m</strong></p>
<blockquote>
<p>190</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">num_all</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        num = num_all(n - <span class="number">1</span>)</span><br><span class="line">        m = (num + <span class="number">1</span>) * <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(num_all(a - <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<h3 id="计算单利和复利"><a href="#计算单利和复利" class="headerlink" title="计算单利和复利"></a><strong>计算单利和复利</strong></h3><p><strong>题目：根据本金a、年利率b、存款年限c，按单利和复利两种方式分别计算存款到期后应得到的利息（四舍五入，保留1位小数）。 提示：单利计算方式为：a <em> b </em> c 复利计算方式为：a <em> (1 + b)</em>c* - a 要求：设计单利计算函数，复利计算函数。</strong></p>
<p><em>Input</em></p>
<p><strong>一行输入a，b，c三个值，两两之间用一个空格间隔。</strong></p>
<blockquote>
<p>1000 0.06 3</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>输出单利利息 输出复利利息</strong></p>
<blockquote>
<p>180.0</p>
<p>191.0</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">float</span>, <span class="built_in">input</span>().split())</span><br><span class="line">s1 = <span class="built_in">round</span>(a * b * c, <span class="number">1</span>)</span><br><span class="line">s2 = <span class="built_in">round</span>(a * (<span class="number">1</span> + b) ** c - a, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"><span class="built_in">print</span>(s2)</span><br></pre></td></tr></table></figure>
<h3 id="递归求n项分数和"><a href="#递归求n项分数和" class="headerlink" title="递归求n项分数和"></a><strong>递归求n项分数和</strong></h3><p><strong>题目: 1/(1x2)-1/(2x3)+1/(3x4)-1/(4x5)+……</strong></p>
<p><em>Input</em></p>
<p><strong>用户输入n值（n是大于0的自然数）</strong></p>
<blockquote>
<p>2</p>
</blockquote>
<p><em>Output</em></p>
<p><strong>显示累加和</strong></p>
<blockquote>
<p>0.33333333333333337</p>
</blockquote>
<p><em>Code</em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">n_sum</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (-<span class="number">1</span>) ** (n + <span class="number">1</span>)/(n * (n + <span class="number">1</span>)) + n_sum(n - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(n_sum(c))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch-线性回归问题</title>
    <url>/2023/07/21/Pytorch-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Pytorch-线性回归问题"><a href="#Pytorch-线性回归问题" class="headerlink" title="Pytorch-线性回归问题"></a>Pytorch-线性回归问题</h1><script type="math/tex; mode=display">
loss=\sum(WX+b-y)^{2}</script><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算均方差损失函数s</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">computer_error_for_line_given_points</span>(<span class="params">b, w, points</span>):</span></span><br><span class="line">    totalError = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(points)):</span><br><span class="line">        x = points[i, <span class="number">0</span>]</span><br><span class="line">        y = points[i, <span class="number">1</span>]</span><br><span class="line">        totalError += (y - (w * x + b)) ** <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> totalError / <span class="built_in">float</span>(<span class="built_in">len</span>(points))</span><br></pre></td></tr></table></figure>
<p>$\omega ‘=\omega-lr*\frac{\bigtriangledown loss }{\bigtriangledown \omega}  $</p>
<p>$b ‘=b-lr*\frac{\bigtriangledown loss }{\bigtriangledown b}  $</p>
<script type="math/tex; mode=display">
\frac{\partial loss }{\partial \omega}=2(\omega x+b-y)x</script><script type="math/tex; mode=display">
\frac{\partial loss }{\partial b}=2(\omega x+b-y)</script><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 求梯度值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">step_gradient</span>(<span class="params">b_current, w_current, points, learningRate</span>):</span></span><br><span class="line">    b_gradient = <span class="number">0</span></span><br><span class="line">    w_gradient = <span class="number">0</span></span><br><span class="line">    N = <span class="built_in">float</span>(<span class="built_in">len</span>(points))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(points)):</span><br><span class="line">        x = points[i, <span class="number">0</span>]</span><br><span class="line">        y = points[i, <span class="number">1</span>]</span><br><span class="line">        b_gradient += -(<span class="number">2</span> / N) * (y - ((w_current * x) + b_current))</span><br><span class="line">        w_gradient += -(<span class="number">2</span> / N) * x * (y - ((w_current * x) + b_current))</span><br><span class="line">    new_b = b_current - (learningRate * b_gradient)</span><br><span class="line">    new_w = w_current - (learningRate * w_gradient)</span><br><span class="line">    <span class="keyword">return</span> [new_b, new_w]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 梯度下降执行</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gradient_descent_runner</span>(<span class="params">points, starting_b, starting_w, learning_rate, num_iterations</span>):</span></span><br><span class="line">    b = starting_b</span><br><span class="line">    w = starting_w</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iterations):</span><br><span class="line">        b, w = step_gradient(b, w, np.array(points), learning_rate)</span><br><span class="line">    <span class="keyword">return</span> [b, w]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘图函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_plot</span>(<span class="params">points, b, w</span>):</span></span><br><span class="line">    x = [i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> points]</span><br><span class="line">    y = [i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> points]</span><br><span class="line">    plt.scatter(x, y, c=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    new_y = [i[<span class="number">0</span>] * w + b <span class="keyword">for</span> i <span class="keyword">in</span> points]</span><br><span class="line">    plt.plot(x, new_y)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line">    points = np.genfromtxt(<span class="string">&quot;./data/data.csv&quot;</span>, delimiter=<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    learning_rate = <span class="number">0.0001</span></span><br><span class="line">    initial_b = <span class="number">0</span></span><br><span class="line">    initial_w = <span class="number">0</span></span><br><span class="line">    num_iterations = <span class="number">1000</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Starting gradient descent at b = &#123;&#125;, w = &#123;&#125;,  error = &#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">        initial_b, initial_w, computer_error_for_line_given_points(initial_b, initial_w, points)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Running&quot;</span>)</span><br><span class="line">    [b, w] = gradient_descent_runner(points, initial_b, initial_w, learning_rate, num_iterations)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;After &#123;&#125; iterations b = &#123;&#125;, w = &#123;&#125;, error = &#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">        num_iterations, b, w, computer_error_for_line_given_points(b, w, points)))</span><br><span class="line">    draw_plot(points, b, w)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run()</span><br><span class="line">   </span><br><span class="line"><span class="comment">#--------------OUTPUT---------------</span></span><br><span class="line">Starting gradient descent at b = <span class="number">0</span>, w = <span class="number">0</span>,  error = <span class="number">5565.107834483211</span></span><br><span class="line">Running</span><br><span class="line">After <span class="number">1000</span> iterations b = <span class="number">0.08893651993741346</span>, w = <span class="number">1.4777440851894448</span>, error = <span class="number">112.61481011613473</span></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721093456110.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230721093456110.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230721093456110"></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch中的tensorboard</title>
    <url>/2022/07/30/Pytorch%E4%B8%AD%E7%9A%84tensorboard/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Pytorch"><a href="#Pytorch" class="headerlink" title="Pytorch"></a>Pytorch</h2><p><strong>PyTorch</strong>是一个开源的Python<strong>机器学习</strong>库，基于Torch，用于自然语言处理等应用程序。</p>
<h2 id="Tensorboard"><a href="#Tensorboard" class="headerlink" title="Tensorboard"></a>Tensorboard</h2><p>TensorBoard 提供机器学习实验所需的可视化功能和工具：</p>
<ul>
<li>跟踪和可视化损失及准确率等指标</li>
<li>可视化模型图（操作和层）</li>
<li>查看权重、偏差或其他张量随时间变化的直方图</li>
<li>将嵌入投射到较低的维度空间</li>
<li>显示图片、文字和音频数据</li>
<li>剖析 TensorFlow 程序</li>
<li>以及更多功能</li>
</ul>
<h2 id="Pytorch加载数据初认识"><a href="#Pytorch加载数据初认识" class="headerlink" title="Pytorch加载数据初认识"></a>Pytorch加载数据初认识</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyData</span>(<span class="params">Dataset</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, root_dir, label_dir</span>):</span></span><br><span class="line">        self.root_dir = root_dir</span><br><span class="line">        self.label_dir = label_dir</span><br><span class="line">        self.path = os.path.join(self.root_dir, self.label_dir)</span><br><span class="line">        self.img_path = os.listdir(self.path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span>(<span class="params">self, idx</span>):</span></span><br><span class="line">        <span class="comment"># img_path = &quot;dataset/train/ants&quot;</span></span><br><span class="line">        img_name = self.img_path[idx]</span><br><span class="line">        img_item_path = os.path.join(self.root_dir, self.label_dir, img_name)</span><br><span class="line">        img = cv.imread(img_item_path)</span><br><span class="line">        label = self.label_dir</span><br><span class="line">        <span class="keyword">return</span> img, label</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.img_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_show</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv.imshow(name, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    root_dir = <span class="string">&quot;dataset/train&quot;</span></span><br><span class="line">    ants_label_dir = <span class="string">&quot;ants&quot;</span></span><br><span class="line">    bees_label_dir = <span class="string">&quot;bees&quot;</span></span><br><span class="line">    ants_dataset = MyData(root_dir, ants_label_dir)</span><br><span class="line">    img, label = ants_dataset[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(img))</span><br><span class="line">    img_show(<span class="string">&quot;ants&quot;</span>, img)</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730220543405.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730220543405.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220730220543405"></p>
<h2 id="绘图add-scalar"><a href="#绘图add-scalar" class="headerlink" title="绘图add_scalar"></a>绘图add_scalar</h2><p>绘图: <code>writer.add_scalar(参数1，参数2，参数3)</code></p>
<ul>
<li>第一个参数：生成图像的名称</li>
<li>第二个参数：X轴的值</li>
<li>第三个参数：Y轴的值</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorboardX <span class="keyword">import</span> SummaryWriter</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;y=x**2&quot;</span>, i ** <span class="number">2</span>, i)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p>目录中会生成一个为名为<code>logs</code>的文件夹</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730215556464.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730215556464.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220730215556464"></p>
<p>在当前目录打开<code>anconda</code>的工作空间</p>
<p>命令<code>conda activate my_env_name</code></p>
<p>或者直接在Pycharm下的打开Terminal</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730215829192.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730215829192.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220730215829192"></p>
<p>输入命令打开生成的logs文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs --port=6008</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730215951833.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730215951833.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220730215951833"></p>
<p>点击生成的链接</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730220047873.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730220047873.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220730220047873"></p>
<h2 id="显示图片add-image"><a href="#显示图片add-image" class="headerlink" title="显示图片add_image"></a>显示图片add_image</h2><p><code>add_image(tag, img_tensor, global_step=None, walltime=None, dataformats=&#39;CHW&#39;)</code></p>
<ul>
<li>tag (string): 数据名称</li>
<li>img_tensor (类型 torch.Tensor 或 numpy.array): 图像数据</li>
<li>global_step (int, optional): 记录这是第几个子图 后面解释这个参数</li>
<li>walltime (float, optional): 记录发生的时间，默认为 time.time()</li>
<li>dataformats (string, optional): 图像数据的格式，默认为 ‘CHW’，即 Channel x Height x Width，还可以是 ‘CHW’、‘HWC’ 或 ‘HW’ 等</li>
</ul>
<p>我们使用opencv读取的图片就是<code>&lt;class &#39;numpy.ndarray&#39;&gt;</code>可以直接使用，如果要使用PIL库时，需要用numpy库转换类型。img.shape=(H,W,C):H为高度、W为宽度、C为通道数，所以<code>dataformats=&#39;HWC&#39;</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorboardX <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line">img = cv2.imread(<span class="string">&quot;dataset/train/ants/0013035.jpg&quot;</span>)</span><br><span class="line">img1 = cv2.imread(<span class="string">&quot;dataset/train/ants/6743948_2b8c096dda.jpg&quot;</span>)</span><br><span class="line">img2 = cv2.imread(<span class="string">&quot;dataset/train/bees/17209602_fe5a5a746f.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(img))</span><br><span class="line"><span class="built_in">print</span>(img.shape)</span><br><span class="line">writer.add_image(<span class="string">&quot;test&quot;</span>, img, <span class="number">1</span>, dataformats=<span class="string">&#x27;HWC&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730221327536.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220730221327536.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220730221327536"></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-Moveit-ABORTED_CONTROL_FAILED</title>
    <url>/2023/07/13/ROS-Moveit-ABORTED-CONTROL-FAILED/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>当我使用python程序控制机械臂作笛卡尔空间运动时，让其轨迹在空间中画一个正方形，具体程序如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy, sys</span><br><span class="line"><span class="keyword">import</span> moveit_commander</span><br><span class="line"><span class="keyword">from</span> moveit_commander <span class="keyword">import</span> MoveGroupCommander</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Pose</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MoveItCartesianDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 初始化move_group的API</span></span><br><span class="line">        moveit_commander.roscpp_initialize(sys.argv)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化ROS节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;moveit_line_demo&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">      </span><br><span class="line">        <span class="comment"># 初始化需要使用move group控制的机械臂中的arm group</span></span><br><span class="line">        arm = MoveGroupCommander(<span class="string">&#x27;arm_group&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 当运动规划失败后，允许重新规划</span></span><br><span class="line">        arm.allow_replanning(<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置目标位置所使用的参考坐标系</span></span><br><span class="line">        arm.set_pose_reference_frame(<span class="string">&#x27;base_link&#x27;</span>)</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 设置位置(单位：米)和姿态（单位：弧度）的允许误差</span></span><br><span class="line">        arm.set_goal_position_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        arm.set_goal_orientation_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置允许的最大速度和加速度</span></span><br><span class="line">        arm.set_max_acceleration_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        arm.set_max_velocity_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取终端link的名称</span></span><br><span class="line">        end_effector_link = arm.get_end_effector_link()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">                                               </span><br><span class="line">        <span class="comment"># 获取当前位姿数据最为机械臂运动的起始位姿</span></span><br><span class="line">        start_pose = arm.get_current_pose(end_effector_link).pose</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 初始化路点列表</span></span><br><span class="line">        waypoints = []</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将初始位姿加入路点列表</span></span><br><span class="line">        waypoints.append(start_pose)</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 设置路点数据，并加入路点列表</span></span><br><span class="line">        wpose = deepcopy(start_pose)</span><br><span class="line">        <span class="comment"># wpose.position.z -= 0.2</span></span><br><span class="line">        <span class="comment"># waypoints.append(deepcopy(wpose))</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        wpose.position.x += <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.z -= <span class="number">0.2</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.x += <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.y += <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.x -= <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line"></span><br><span class="line">        wpose.position.y -= <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.z += <span class="number">0.2</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.x -= <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        fraction = <span class="number">0.0</span>   <span class="comment">#路径规划覆盖率</span></span><br><span class="line">        maxtries = <span class="number">100</span>   <span class="comment">#最大尝试规划次数</span></span><br><span class="line">        attempts = <span class="number">0</span>     <span class="comment">#已经尝试规划次数</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment"># 设置机器臂当前的状态作为运动初始状态</span></span><br><span class="line">        arm.set_start_state_to_current_state()</span><br><span class="line">	 </span><br><span class="line">		<span class="comment"># 尝试规划一条笛卡尔空间下的路径，依次通过所有路点</span></span><br><span class="line">        <span class="keyword">while</span> fraction &lt; <span class="number">1.0</span> <span class="keyword">and</span> attempts &lt; maxtries:</span><br><span class="line">            (plan, fraction) = arm.compute_cartesian_path (</span><br><span class="line">		                    waypoints,   <span class="comment"># waypoint poses，路点列表</span></span><br><span class="line">		                    <span class="number">0.01</span>,        <span class="comment"># eef_step，终端步进值</span></span><br><span class="line">		                    <span class="number">0.0</span>,         <span class="comment"># jump_threshold，跳跃阈值</span></span><br><span class="line">		                    <span class="literal">True</span>)        <span class="comment"># avoid_collisions，避障规划</span></span><br><span class="line">		    </span><br><span class="line">		    <span class="comment"># 尝试次数累加</span></span><br><span class="line">            attempts += <span class="number">1</span></span><br><span class="line">		    </span><br><span class="line">                <span class="comment"># 打印运动规划进程</span></span><br><span class="line">            <span class="keyword">if</span> attempts % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">                rospy.loginfo(<span class="string">&quot;Still trying after &quot;</span> + <span class="built_in">str</span>(attempts) + <span class="string">&quot; attempts...&quot;</span>)</span><br><span class="line">                    </span><br><span class="line">            <span class="comment"># 如果路径规划成功（覆盖率100%）,则开始控制机械臂运动</span></span><br><span class="line">        <span class="keyword">if</span> fraction == <span class="number">1.0</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path computed successfully. Moving the arm.&quot;</span>)</span><br><span class="line">            arm.execute(plan)</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path execution complete.&quot;</span>)</span><br><span class="line">            <span class="comment"># 如果路径规划失败，则打印失败信息</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path planning failed with only &quot;</span> + <span class="built_in">str</span>(fraction) + <span class="string">&quot; success after &quot;</span> + <span class="built_in">str</span>(maxtries) + <span class="string">&quot; attempts.&quot;</span>)  </span><br><span class="line"></span><br><span class="line">            rospy.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 关闭并退出moveit</span></span><br><span class="line">        moveit_commander.roscpp_shutdown()</span><br><span class="line">        moveit_commander.os._exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        MoveItCartesianDemo()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>当程序到这条语句时</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">arm.execute(plan)</span><br></pre></td></tr></table></figure>
<p>会报错误</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[ INFO] [1688782916.965162097, 74.726000000]: ABORTED: CONTROL_FAILED</span><br></pre></td></tr></table></figure>
<p>具体表现在，在rviz的moveit界面机械臂会出现轨迹虚影，而Gazebo中却不执行，即规划成功，运动失败</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b4f2ea4606cfd9b8f1d2152f89b37648.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b4f2ea4606cfd9b8f1d2152f89b37648.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230708103254720"></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>解决方案就是把waypoints中的第一个点删除，即注释掉下面这条语句</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将初始位姿加入路点列表</span></span><br><span class="line"> waypoints.append(start_pose)</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/dc759184b4c3adc111f1d226db9a9f10.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/dc759184b4c3adc111f1d226db9a9f10.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230708103827791"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-驱动摄像头</title>
    <url>/2023/07/27/ROS-%E9%A9%B1%E5%8A%A8%E6%91%84%E5%83%8F%E5%A4%B4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS-驱动摄像头"><a href="#ROS-驱动摄像头" class="headerlink" title="ROS-驱动摄像头"></a>ROS-驱动摄像头</h1><h2 id="安装usb-cam"><a href="#安装usb-cam" class="headerlink" title="安装usb_cam"></a>安装usb_cam</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-usb-cam</span><br></pre></td></tr></table></figure>
<h2 id="查找USB摄像头"><a href="#查找USB摄像头" class="headerlink" title="查找USB摄像头"></a>查找USB摄像头</h2><p>如果使用笔记本自带的摄像头可跳过此步骤</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install v4l-utils</span><br></pre></td></tr></table></figure>
<p>查看摄像头信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo v4l2-ctl --list-devices</span><br></pre></td></tr></table></figure>
<h2 id="修改usb-cam-test-launch"><a href="#修改usb-cam-test-launch" class="headerlink" title="修改usb_cam-test.launch"></a>修改usb_cam-test.launch</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">roscd usb_cam</span><br><span class="line">cd launch </span><br><span class="line">sudo gedit usb_cam-test.launch </span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;usb_cam&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;usb_cam&quot;</span> <span class="attr">type</span>=<span class="string">&quot;usb_cam_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;video_device&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/video0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;image_width&quot;</span> <span class="attr">value</span>=<span class="string">&quot;640&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;image_height&quot;</span> <span class="attr">value</span>=<span class="string">&quot;480&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;pixel_format&quot;</span> <span class="attr">value</span>=<span class="string">&quot;yuyv&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;color_format&quot;</span> <span class="attr">value</span>=<span class="string">&quot;yuv422p&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;camera_frame_id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;usb_cam&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;io_method&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mmap&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;image_view&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;image_view&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image_view&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;image&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/usb_cam/image_raw&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;autosize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改video_device设备号即可</p>
<h2 id="启动usb-cam"><a href="#启动usb-cam" class="headerlink" title="启动usb_cam"></a>启动usb_cam</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">roslaunch usb_cam usb_cam-test.launch</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8a518d37ae2d0c7d1a65ecc364b6ccd4.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8a518d37ae2d0c7d1a65ecc364b6ccd4.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723211010853"></p>
<p>查看话题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rostopic list</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/264cdec5019fea0a4e19133d3fe8f178.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/264cdec5019fea0a4e19133d3fe8f178.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723211156290"></p>
<p>可使用<code>rqt_image_view</code>显示图像话题</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/66bdbba8a212228753cfc0c2fcff09ca.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/66bdbba8a212228753cfc0c2fcff09ca.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723211405785"></p>
<p>消息类型</p>
<p><code>sensor_msgs/Image</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c71aebaff6e10254698bdd9102c6d0d9.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c71aebaff6e10254698bdd9102c6d0d9.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723211500078"></p>
<p><code>sensor_msgs/CompressedImage</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/99002d5ce36e41d64de93a6c8a41cc3f.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/99002d5ce36e41d64de93a6c8a41cc3f.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723211546572"></p>
<p><code>sensor_msgs/PointCloud2</code>点云信息</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/9f76d2118a2e31ab2a5b7acd44584fd0.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/9f76d2118a2e31ab2a5b7acd44584fd0.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723211845941"></p>
<h2 id="相机标定"><a href="#相机标定" class="headerlink" title="相机标定"></a>相机标定</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-camera-calibration</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/939da057c1e523d73f3e814530dcfe2e.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/939da057c1e523d73f3e814530dcfe2e.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230723212148208"></p>
<p>从网上下载标定版打印出来，固定在硬纸板上</p>
<p><a href="https://github.com/code-iai/iai_kinect2/tree/master/kinect2_calibration/patterns">标定板下载</a></p>
<p>不断的将标定板前后左右上下方向平移以及旋转和扭转，使X,Y,Size,Skew变成绿色，即可结束标定</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/534b0cb29e4463f83f00b7778a30550d.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/534b0cb29e4463f83f00b7778a30550d.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724165455520"></p>
<p>点击CALLBRATE计算，等待几分钟计算完成。</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-Moveit使用程序控制机械臂轨迹规划（三）</title>
    <url>/2023/07/13/ROS-Moveit%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E6%9C%BA%E6%A2%B0%E8%87%82%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在工作空间/src目录新建功能包<code>moveit_project</code></p>
<p>添加依赖<code>rospy</code>  <code>moveit_commander</code>  <code>control_msgs</code></p>
<p>新建文件夹<code>scripts</code></p>
<p>在<code>scripts</code>文件夹中新建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">moveit_fk_demo.py</span><br><span class="line">moveit_ik_demo.py</span><br><span class="line">moveit_line_demo.py</span><br><span class="line">moveit_cycle_demo.py</span><br></pre></td></tr></table></figure>
<p>然后在<code>scripts</code>中打开终端</p>
<p>添加权限<code>sudo chmod +x *.py</code></p>
<p>更改<code>CMakeList.txt</code></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">catkin_install_python(PROGRAMS</span><br><span class="line">  scripts/moveit_fk_demo.py</span><br><span class="line">  scripts/moveit_ik_demo.py</span><br><span class="line">  scripts/moveit_line_demo.py</span><br><span class="line">  scripts/moveit_cycle_demo.py</span><br><span class="line">  DESTINATION <span class="variable">$&#123;CATKIN_PACKAGE_BIN_DESTINATION&#125;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="根据关节角度控制机械臂"><a href="#根据关节角度控制机械臂" class="headerlink" title="根据关节角度控制机械臂"></a>根据关节角度控制机械臂</h2><p><code>moveit_fk_demo.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy, sys</span><br><span class="line"><span class="keyword">import</span> moveit_commander</span><br><span class="line"><span class="keyword">from</span> control_msgs.msg <span class="keyword">import</span> GripperCommand</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MoveItFkDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 初始化move_group的API</span></span><br><span class="line">        moveit_commander.roscpp_initialize(sys.argv)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化ROS节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;moveit_fk_demo&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 初始化需要使用move group控制的机械臂中的arm group</span></span><br><span class="line">        arm = moveit_commander.MoveGroupCommander(<span class="string">&#x27;arm_group&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化需要使用move group控制的机械臂中的gripper group</span></span><br><span class="line">        gripper = moveit_commander.MoveGroupCommander(<span class="string">&#x27;hand_group&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置机械臂和夹爪的允许误差值</span></span><br><span class="line">        arm.set_goal_joint_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        gripper.set_goal_joint_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">2</span>)</span><br><span class="line">         </span><br><span class="line">      </span><br><span class="line">        <span class="comment"># 设置机械臂的目标位置，使用六轴的位置数据进行描述（单位：弧度）</span></span><br><span class="line">        joint_positions = [<span class="number">3.14</span>, <span class="number">0.90</span>, <span class="number">0.84</span>, <span class="number">0</span>, <span class="number">1.59</span>, <span class="number">1.52</span>]</span><br><span class="line">        arm.set_joint_value_target(joint_positions)</span><br><span class="line">                 </span><br><span class="line">        <span class="comment"># 控制机械臂完成运动</span></span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置夹爪的目标位置，并控制夹爪运动</span></span><br><span class="line">        gripper.set_joint_value_target([<span class="number">0.03</span>, -<span class="number">0.03</span>])</span><br><span class="line">        gripper.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="comment"># 关闭并退出moveit</span></span><br><span class="line">        moveit_commander.roscpp_shutdown()</span><br><span class="line">        moveit_commander.os._exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        MoveItFkDemo()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<h2 id="根据末端位姿控制机械臂"><a href="#根据末端位姿控制机械臂" class="headerlink" title="根据末端位姿控制机械臂"></a>根据末端位姿控制机械臂</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy, sys</span><br><span class="line"><span class="keyword">import</span> moveit_commander</span><br><span class="line"><span class="keyword">from</span> moveit_msgs.msg <span class="keyword">import</span> RobotTrajectory</span><br><span class="line"><span class="keyword">from</span> trajectory_msgs.msg <span class="keyword">import</span> JointTrajectoryPoint</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> PoseStamped, Pose</span><br><span class="line"><span class="keyword">from</span> tf.transformations <span class="keyword">import</span> euler_from_quaternion, quaternion_from_euler</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MoveItIkDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 初始化move_group的API</span></span><br><span class="line">        moveit_commander.roscpp_initialize(sys.argv)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化ROS节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;moveit_ik_demo&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 初始化需要使用move group控制的机械臂中的arm group</span></span><br><span class="line">        arm = moveit_commander.MoveGroupCommander(<span class="string">&#x27;arm_group&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        end_effector = arm.get_end_effector_link()</span><br><span class="line">        </span><br><span class="line">        reference_frame = <span class="string">&quot;base_link&quot;</span></span><br><span class="line">        arm.set_pose_reference_frame(reference_frame)</span><br><span class="line">        </span><br><span class="line">        arm.allow_replanning(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 设置位置（米）和姿态（、弧度）允许误差</span></span><br><span class="line">        arm.set_goal_position_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        arm.set_goal_orientation_tolerance(<span class="number">0.01</span>)</span><br><span class="line">        <span class="comment"># 设置允许最大速度和加速度</span></span><br><span class="line">        arm.set_max_acceleration_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        arm.set_max_velocity_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        <span class="comment"># 回到初始位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&quot;zero_pose&quot;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="comment">#设置机械臂工作空间中的目标位姿，位置使用x/y/z坐标描述</span></span><br><span class="line">        <span class="comment"># 姿态使用四元数描述，基于base_link坐标系</span></span><br><span class="line">        target_pose = PoseStamped()</span><br><span class="line">        target_pose.header.frame_id = reference_frame</span><br><span class="line">        target_pose.header.stamp = rospy.Time.now()     </span><br><span class="line">        target_pose.pose.position.x = <span class="number">0.5</span></span><br><span class="line">        target_pose.pose.position.y = <span class="number">0.5</span></span><br><span class="line">        target_pose.pose.position.z = <span class="number">0.5</span></span><br><span class="line">        target_pose.pose.orientation.x = <span class="number">0.911822</span></span><br><span class="line">        target_pose.pose.orientation.y = -<span class="number">0.0269758</span></span><br><span class="line">        target_pose.pose.orientation.z = <span class="number">0.285694</span></span><br><span class="line">        target_pose.pose.orientation.w = -<span class="number">0.293653</span></span><br><span class="line">        <span class="comment"># 设置机器臂当前的状态作为运动初始状态</span></span><br><span class="line">        arm.set_start_state_to_current_state()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置机械臂终端运动的目标位姿</span></span><br><span class="line">        arm.set_pose_target(target_pose, end_effector)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 规划运动路径</span></span><br><span class="line">        plan_success,traj,planning_time,error_code=arm.plan()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 按照规划的运动路径控制机械臂运动</span></span><br><span class="line">        arm.execute(traj)</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="comment"># 控制机械臂终端向右移动5cm</span></span><br><span class="line">        arm.shift_pose_target(<span class="number">1</span>, -<span class="number">0.05</span>, end_effector)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">  </span><br><span class="line">        <span class="comment"># # 控制机械臂终端反向旋转90度</span></span><br><span class="line">        arm.shift_pose_target(<span class="number">3</span>, -<span class="number">1.57</span>, end_effector)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">           </span><br><span class="line">        <span class="comment"># # 控制机械臂回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 关闭并退出moveit</span></span><br><span class="line">        moveit_commander.roscpp_shutdown()</span><br><span class="line">        moveit_commander.os._exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        MoveItIkDemo()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<h2 id="画正方形"><a href="#画正方形" class="headerlink" title="画正方形"></a>画正方形</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy, sys</span><br><span class="line"><span class="keyword">import</span> moveit_commander</span><br><span class="line"><span class="keyword">from</span> moveit_commander <span class="keyword">import</span> MoveGroupCommander</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Pose</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MoveItCartesianDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 初始化move_group的API</span></span><br><span class="line">        moveit_commander.roscpp_initialize(sys.argv)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化ROS节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;moveit_line_demo&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">      </span><br><span class="line">        <span class="comment"># 初始化需要使用move group控制的机械臂中的arm group</span></span><br><span class="line">        arm = MoveGroupCommander(<span class="string">&#x27;arm_group&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 当运动规划失败后，允许重新规划</span></span><br><span class="line">        arm.allow_replanning(<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置目标位置所使用的参考坐标系</span></span><br><span class="line">        arm.set_pose_reference_frame(<span class="string">&#x27;base_link&#x27;</span>)</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 设置位置(单位：米)和姿态（单位：弧度）的允许误差</span></span><br><span class="line">        arm.set_goal_position_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        arm.set_goal_orientation_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置允许的最大速度和加速度</span></span><br><span class="line">        arm.set_max_acceleration_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        arm.set_max_velocity_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取终端link的名称</span></span><br><span class="line">        end_effector_link = arm.get_end_effector_link()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">                                               </span><br><span class="line">        <span class="comment"># 获取当前位姿数据最为机械臂运动的起始位姿</span></span><br><span class="line">        start_pose = arm.get_current_pose(end_effector_link).pose</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 初始化路点列表</span></span><br><span class="line">        waypoints = []</span><br><span class="line"></span><br><span class="line">        <span class="comment"># # 将初始位姿加入路点列表</span></span><br><span class="line">        <span class="comment"># waypoints.append(start_pose)</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 设置路点数据，并加入路点列表</span></span><br><span class="line">        wpose = deepcopy(start_pose)</span><br><span class="line">    </span><br><span class="line">        wpose.position.x += <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.z -= <span class="number">0.2</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.x += <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.y += <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.x -= <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.y -= <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.z += <span class="number">0.2</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        wpose.position.x -= <span class="number">0.20</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        fraction = <span class="number">0.0</span>   <span class="comment">#路径规划覆盖率</span></span><br><span class="line">        maxtries = <span class="number">100</span>   <span class="comment">#最大尝试规划次数</span></span><br><span class="line">        attempts = <span class="number">0</span>     <span class="comment">#已经尝试规划次数</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment"># 设置机器臂当前的状态作为运动初始状态</span></span><br><span class="line">        arm.set_start_state_to_current_state()</span><br><span class="line">	 </span><br><span class="line">		<span class="comment"># 尝试规划一条笛卡尔空间下的路径，依次通过所有路点</span></span><br><span class="line">        <span class="keyword">while</span> fraction &lt; <span class="number">1.0</span> <span class="keyword">and</span> attempts &lt; maxtries:</span><br><span class="line">            (plan, fraction) = arm.compute_cartesian_path (</span><br><span class="line">		                    waypoints,   <span class="comment"># waypoint poses，路点列表</span></span><br><span class="line">		                    <span class="number">0.01</span>,        <span class="comment"># eef_step，终端步进值</span></span><br><span class="line">		                    <span class="number">0.0</span>,         <span class="comment"># jump_threshold，跳跃阈值</span></span><br><span class="line">		                    <span class="literal">True</span>)        <span class="comment"># avoid_collisions，避障规划</span></span><br><span class="line">		    </span><br><span class="line">		    <span class="comment"># 尝试次数累加</span></span><br><span class="line">            attempts += <span class="number">1</span></span><br><span class="line">		    </span><br><span class="line">                <span class="comment"># 打印运动规划进程</span></span><br><span class="line">            <span class="keyword">if</span> attempts % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">                rospy.loginfo(<span class="string">&quot;Still trying after &quot;</span> + <span class="built_in">str</span>(attempts) + <span class="string">&quot; attempts...&quot;</span>)</span><br><span class="line">                    </span><br><span class="line">            <span class="comment"># 如果路径规划成功（覆盖率100%）,则开始控制机械臂运动</span></span><br><span class="line">        <span class="keyword">if</span> fraction == <span class="number">1.0</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path computed successfully. Moving the arm.&quot;</span>)</span><br><span class="line">            arm.execute(plan)</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path execution complete.&quot;</span>)</span><br><span class="line">            <span class="comment"># 如果路径规划失败，则打印失败信息</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path planning failed with only &quot;</span> + <span class="built_in">str</span>(fraction) + <span class="string">&quot; success after &quot;</span> + <span class="built_in">str</span>(maxtries) + <span class="string">&quot; attempts.&quot;</span>)  </span><br><span class="line"></span><br><span class="line">            rospy.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 关闭并退出moveit</span></span><br><span class="line">        moveit_commander.roscpp_shutdown()</span><br><span class="line">        moveit_commander.os._exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        MoveItCartesianDemo()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c292959cbc95dc74dd4cf85ce3f9df62.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c292959cbc95dc74dd4cf85ce3f9df62.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230712155040962"></p>
<h2 id="画圆形"><a href="#画圆形" class="headerlink" title="画圆形"></a>画圆形</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy, sys</span><br><span class="line"><span class="keyword">import</span> moveit_commander</span><br><span class="line"><span class="keyword">from</span> moveit_commander <span class="keyword">import</span> MoveGroupCommander</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Pose, PoseStamped</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MoveItCartesianDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 初始化move_group的API</span></span><br><span class="line">        moveit_commander.roscpp_initialize(sys.argv)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化ROS节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;moveit_cycle_demo&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">                      </span><br><span class="line">        <span class="comment"># 初始化需要使用move group控制的机械臂中的arm group</span></span><br><span class="line">        arm = MoveGroupCommander(<span class="string">&#x27;arm_group&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 当运动规划失败后，允许重新规划</span></span><br><span class="line">        arm.allow_replanning(<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置目标位置所使用的参考坐标系</span></span><br><span class="line">        reference_frame = <span class="string">&#x27;base_link&#x27;</span></span><br><span class="line">        arm.set_pose_reference_frame(<span class="string">&#x27;base_link&#x27;</span>)</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 设置位置(单位：米)和姿态（单位：弧度）的允许误差</span></span><br><span class="line">        arm.set_goal_position_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        arm.set_goal_orientation_tolerance(<span class="number">0.001</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置允许的最大速度和加速度</span></span><br><span class="line">        arm.set_max_acceleration_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        arm.set_max_velocity_scaling_factor(<span class="number">0.5</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取终端link的名称</span></span><br><span class="line">        end_effector_link = arm.get_end_effector_link()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置路点数据，并加入路点列表</span></span><br><span class="line">                                         </span><br><span class="line">        target_pose = PoseStamped()</span><br><span class="line">        target_pose.header.frame_id = reference_frame</span><br><span class="line">        target_pose.header.stamp = rospy.Time.now()     </span><br><span class="line">        target_pose.pose.position.x = <span class="number">0.5</span></span><br><span class="line">        target_pose.pose.position.y = <span class="number">0</span></span><br><span class="line">        target_pose.pose.position.z = <span class="number">0.5</span></span><br><span class="line">        target_pose.pose.orientation.x = <span class="number">0.707</span></span><br><span class="line">        target_pose.pose.orientation.y = <span class="number">0.7071</span></span><br><span class="line">        target_pose.pose.orientation.z = <span class="number">0</span></span><br><span class="line">        target_pose.pose.orientation.w = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置机械臂终端运动的目标位姿</span></span><br><span class="line">        arm.set_pose_target(target_pose, end_effector_link)</span><br><span class="line">        arm.go()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化路点列表</span></span><br><span class="line">        waypoints = []</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 将圆弧上的路径点加入列表</span></span><br><span class="line">        waypoints.append(target_pose.pose)</span><br><span class="line"></span><br><span class="line">        centerA = target_pose.pose.position.y</span><br><span class="line">        centerB = target_pose.pose.position.z</span><br><span class="line">        radius = <span class="number">0.1</span></span><br><span class="line">        <span class="keyword">for</span> th <span class="keyword">in</span> numpy.arange(<span class="number">0</span>, <span class="number">6.28</span>, <span class="number">0.02</span>):</span><br><span class="line">            target_pose.pose.position.y = centerA + <span class="number">1.5</span>*radius * math.cos(th)</span><br><span class="line">            target_pose.pose.position.z = centerB + <span class="number">1.5</span>*radius * math.sin(th)</span><br><span class="line">            wpose = deepcopy(target_pose.pose)</span><br><span class="line">            waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        wpose.position.z += <span class="number">0.2</span></span><br><span class="line">        waypoints.append(deepcopy(wpose))</span><br><span class="line">        </span><br><span class="line">        fraction = <span class="number">0.0</span>   <span class="comment">#路径规划覆盖率</span></span><br><span class="line">        maxtries = <span class="number">100</span>   <span class="comment">#最大尝试规划次数</span></span><br><span class="line">        attempts = <span class="number">0</span>     <span class="comment">#已经尝试规划次数</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 设置机器臂当前的状态作为运动初始状态</span></span><br><span class="line">        arm.set_start_state_to_current_state()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 尝试规划一条笛卡尔空间下的路径，依次通过所有路点</span></span><br><span class="line">        <span class="keyword">while</span> fraction &lt; <span class="number">1.0</span> <span class="keyword">and</span> attempts &lt; maxtries:</span><br><span class="line">            (plan, fraction) = arm.compute_cartesian_path (</span><br><span class="line">                                waypoints,   <span class="comment"># waypoint poses，路点列表</span></span><br><span class="line">                                <span class="number">0.01</span>,        <span class="comment"># eef_step，终端步进值</span></span><br><span class="line">                                <span class="number">0.0</span>,         <span class="comment"># jump_threshold，跳跃阈值</span></span><br><span class="line">                                <span class="literal">True</span>)        <span class="comment"># avoid_collisions，避障规划</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 尝试次数累加</span></span><br><span class="line">            attempts += <span class="number">1</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 打印运动规划进程</span></span><br><span class="line">            <span class="keyword">if</span> attempts % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">                rospy.loginfo(<span class="string">&quot;Still trying after &quot;</span> + <span class="built_in">str</span>(attempts) + <span class="string">&quot; attempts...&quot;</span>)</span><br><span class="line">                        </span><br><span class="line">        <span class="comment"># 如果路径规划成功（覆盖率100%）,则开始控制机械臂运动</span></span><br><span class="line">        <span class="keyword">if</span> fraction == <span class="number">1.0</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path computed successfully. Moving the arm.&quot;</span>)</span><br><span class="line">            arm.execute(plan)</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path execution complete.&quot;</span>)</span><br><span class="line">        <span class="comment"># 如果路径规划失败，则打印失败信息</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Path planning failed with only &quot;</span> + <span class="built_in">str</span>(fraction) + <span class="string">&quot; success after &quot;</span> + <span class="built_in">str</span>(maxtries) + <span class="string">&quot; attempts.&quot;</span>)  </span><br><span class="line"></span><br><span class="line">            rospy.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line">        arm.set_named_target(<span class="string">&#x27;zero_pose&#x27;</span>)</span><br><span class="line">        arm.go()</span><br><span class="line">        rospy.sleep(<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 关闭并退出moveit</span></span><br><span class="line">        moveit_commander.roscpp_shutdown()</span><br><span class="line">        moveit_commander.os._exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        MoveItCartesianDemo()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b4f26cf5e71cadb3981fd16da27c7383.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b4f26cf5e71cadb3981fd16da27c7383.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230712155145190"></p>
<p>还可以根据自己的喜好，让机械臂在笛卡尔空间作不同的运动。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/31f80eb43eb382d005cff2ce98e56c68.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/31f80eb43eb382d005cff2ce98e56c68.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230712155425882"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-Moveit配置（一）</title>
    <url>/2023/07/13/ROS-Moveit%E9%85%8D%E7%BD%AE%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS-Moveit-配置"><a href="#ROS-Moveit-配置" class="headerlink" title="ROS-Moveit!配置"></a>ROS-Moveit!配置</h1><p>MoveIt! 一个机器人（mobile manipulation）相关的工具集软件，集成了各种 SOTA 库，包括：</p>
<ul>
<li>运动规划（Motion Planning）</li>
<li>操作（Manipulation）</li>
<li>3D 感知（Perception）</li>
<li>运动学（Kinematics）</li>
<li>碰撞检测（Collision Checking）</li>
<li>控制（Control）</li>
<li>导航（Navigation）</li>
</ul>
<p>下面介绍下Moveit的使用步骤</p>
<h2 id="1-SW2URDF"><a href="#1-SW2URDF" class="headerlink" title="1. SW2URDF"></a>1. SW2URDF</h2><p>使用Solidworks建立一个机械臂模型，然后划分各个部分的Link/Joint，建立参考轴和参考坐标系，具体可根据机器人运动学分为标准DH建系（SDH）和改进DH 建系（MDH）。</p>
<ul>
<li>SDH: 杆i坐标系建立在关节i+1上，即连杆<em>i</em>的坐标系固定在连杆的远端</li>
<li>MDH: 杆i坐标系建立在关节i上，即连杆<em>i</em>的坐标系固定在连杆的近端</li>
</ul>
<p>见习步骤主要如下：</p>
<ul>
<li>先确定Z轴，为关节轴线的方向</li>
<li>再确定X轴，为前一个关节的Z轴与本关节的Z轴的公垂线，即Xi = Zi-1 X Zi, 方向指向下一个关节处，如果两轴线相交则X轴垂直Z轴相交平面</li>
<li>再确定原点，为Z轴与X轴相交处，或两Z轴相交处</li>
<li>最后确定Y轴，根据右手笛卡尔坐标系确定</li>
</ul>
<p>具体可参考这篇文章 </p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707170138915.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707170138915.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707170138915"></p>
<p>最后使用SW2URDF插件，将SW模型转化为URDF文件，具体可参考我前面的文章</p>
<p>然后将此生成的功能包文件，复制到自己的工作空间src目录下，然后<code>catkin_make</code>编译</p>
<p>可以运行:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ./devel/setup.bash</span><br><span class="line">roslaunch ros_robot_arm display.launch</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707155509911.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707155509911.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707155509911"></p>
<p>旁边的GUI界面可以拖动控制关节运动。</p>
<h2 id="2-Moveit下载及初始化"><a href="#2-Moveit下载及初始化" class="headerlink" title="2.Moveit下载及初始化"></a>2.Moveit下载及初始化</h2><p>下载：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-moveit   <span class="comment">#noetic 是所安装的ros对应版本名称</span></span><br><span class="line"><span class="built_in">source</span> /opt/ros/noetic/setup.bash</span><br></pre></td></tr></table></figure>
<p>然后，在你所导入的模型URDF功能包所在的功能空间下，运行下面命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ./devel/setup.bash</span><br><span class="line">roslaunch moveit_setup_assistant setup_assistant.launch </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707160526558.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707160526558.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707160526558"></p>
<p>创建新的Moveit配置功能包，导入刚才的urdf文件，Load Files</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707160702231.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707160702231.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707160702231"></p>
<h2 id="3-自碰撞矩阵-Self-Collisions"><a href="#3-自碰撞矩阵-Self-Collisions" class="headerlink" title="3.自碰撞矩阵 Self-Collisions"></a>3.自碰撞矩阵 Self-Collisions</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707160847852.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707160847852.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707160847852"></p>
<p>选择适合冲突检查数量，单击<code>Generate Collision Matrix</code>生成碰撞矩阵</p>
<h2 id="4-虚拟关节-Virtual-Joints（不配置）"><a href="#4-虚拟关节-Virtual-Joints（不配置）" class="headerlink" title="4.虚拟关节 Virtual Joints（不配置）"></a>4.虚拟关节 Virtual Joints（不配置）</h2><h2 id="5-规划组-Planning-Groups"><a href="#5-规划组-Planning-Groups" class="headerlink" title="5.规划组 Planning Groups"></a>5.规划组 Planning Groups</h2><p>单击<code>Add Group</code></p>
<h3 id="添加机械臂规划组"><a href="#添加机械臂规划组" class="headerlink" title="添加机械臂规划组"></a>添加机械臂规划组</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707161513147.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707161513147.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707161513147"></p>
<ul>
<li>Group Name: arm_group</li>
<li>Kinematic Solver(运动学求解器):kdl_kinematics_plugin/KDLKinematicsPlugin</li>
<li>OMPL Planning(OMPL规划器):RRT</li>
<li>其他默认</li>
</ul>
<p>然后单击<code>Add Joints</code>添加关节</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707161825543.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707161825543.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707161825543"></p>
<p>选择除base_link和夹爪部分的机械臂Link，然后<code>Save</code></p>
<h3 id="添加夹爪规划组"><a href="#添加夹爪规划组" class="headerlink" title="添加夹爪规划组"></a>添加夹爪规划组</h3><p>只更改<code>Group name</code>为<code>hand_group</code>,其他为默认，然后添加Joints,单击<code>Save</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707162618655.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707162618655.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707162618655"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707162648750.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707162648750.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707162648750"></p>
<h2 id="6-机器人姿态-Robot-Pose"><a href="#6-机器人姿态-Robot-Pose" class="headerlink" title="6.机器人姿态 Robot Pose"></a>6.机器人姿态 Robot Pose</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707162822565.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707162822565.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707162822565"></p>
<p>定义Pose Name，选择相应的规划组，然后移动关节确定姿态，然后单击<code>Save</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707163341309.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707163341309.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707163341309"></p>
<p>Pose可以根据自己需要自定义</p>
<h2 id="7-末端执行器-End-Effectors"><a href="#7-末端执行器-End-Effectors" class="headerlink" title="7.末端执行器 End Effectors"></a>7.末端执行器 End Effectors</h2><p>单击<code>Add End Effector</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707163549509.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707163549509.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707163549509"></p>
<ul>
<li>End Effector Name: hand_ee</li>
<li>End Effector Group: hand_group</li>
<li>Parent Link: Link6（与夹爪连接的arm link部分）</li>
<li>Parent Group：None或arm_group</li>
</ul>
<p>最后单击<code>Save</code>保存</p>
<h2 id="8-作者信息-Author-Information"><a href="#8-作者信息-Author-Information" class="headerlink" title="8.作者信息 Author Information"></a>8.作者信息 Author Information</h2><p>Passive Joints / Controllers / Simulation / 3D Perception此部分内容可以不用配置，有需要的读者可搜索资料研究下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707164150580.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707164150580.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707164150580"></p>
<p>名字和邮箱名称可自取</p>
<h2 id="9-配置文件Configuration-Files"><a href="#9-配置文件Configuration-Files" class="headerlink" title="9.配置文件Configuration Files"></a>9.配置文件Configuration Files</h2><p>在自己功能包/src目录下新建文件夹moveit_ros_robot_arm</p>
<p>然后生成功能包<code>Generate Package</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707164505607.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707164505607.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707164505607"></p>
<p>最后推出<code>Exit Setup Assistant</code></p>
<h2 id="10-运行"><a href="#10-运行" class="headerlink" title="10.运行"></a>10.运行</h2><p>工作空间下<code>catkin_make</code>编译</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ./devel/setup.bash</span><br><span class="line">roslaunch moveit_ros_robot_arm demo.launch </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707164818638.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230707164818638.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707164818638"></p>
<p>出现如上界面，即配置成功。</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-Moveit和Gazebo联合仿真（二）</title>
    <url>/2023/07/13/ROS-Moveit%E5%92%8CGazebo%E8%81%94%E5%90%88%E4%BB%BF%E7%9C%9F%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="URDF功能包配置"><a href="#URDF功能包配置" class="headerlink" title="URDF功能包配置"></a>URDF功能包配置</h2><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><p>首先在SW2URDF生成的功能包下Config目录下新建文件<code>joint_trajectory_controller.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">robot_arm_controller:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;position_controllers/JointTrajectoryController&quot;</span></span><br><span class="line">  <span class="attr">joints:</span> [<span class="string">joint1</span>, <span class="string">joint2</span>, <span class="string">joint3</span>, <span class="string">joint4</span>, <span class="string">joint5</span>, <span class="string">joint6</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">hand_ee_controller:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;position_controllers/JointTrajectoryController&quot;</span></span><br><span class="line">  <span class="attr">joints:</span> [<span class="string">joint_hand1</span>, <span class="string">joint_hand2</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">joint_state_controller:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;joint_state_controller/JointStateController&quot;</span></span><br><span class="line">  <span class="attr">publish_rate:</span> <span class="number">50</span> </span><br></pre></td></tr></table></figure>
<h3 id="launch"><a href="#launch" class="headerlink" title="launch"></a>launch</h3><p>在launch文件目录下新建<code>arm_urdf.launch</code>文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;arg_x&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.00&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;arg_y&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.00&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;arg_z&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.00&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;arg_R&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.00&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;arg_P&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.00&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;arg_Y&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.00&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--Urdf file path--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;robot_description&quot;</span> <span class="attr">textfile</span>=<span class="string">&quot;$(find ros_robot_arm)/urdf/ros_robot_arm.urdf&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--spawn a empty gazebo world--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find gazebo_ros)/launch/empty_world.launch&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;tf_footprint_base&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> <span class="attr">args</span>=<span class="string">&quot;0 0 0 0 0 0 base_link base_footprint 40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--spawn model--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;spawn_urdf&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;gazebo_ros&quot;</span> <span class="attr">type</span>=<span class="string">&quot;spawn_model&quot;</span> <span class="attr">args</span>=<span class="string">&quot;-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model ros_robot_arm -J joint1 0.0 -J joint2 0.0 -J joint3 0.0 -J joint4 0.0 -J joint5 0.0 -J joint6 0.0 -J joint_hand1 0.0 -J joint_hand2 0.0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--Load and launch the joint trajectory controller--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span> =<span class="string">&quot;$(find ros_robot_arm)/config/joint_trajectory_controller.yaml&quot;</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>= <span class="string">&quot;controller_spawner&quot;</span> <span class="attr">pkg</span>= <span class="string">&quot;controller_manager&quot;</span> <span class="attr">type</span>=<span class="string">&quot;spawner&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> <span class="attr">args</span>=<span class="string">&quot;joint_state_controller robot_arm_controller hand_ee_controller&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="comment">&lt;!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz can visualize --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;robot_state_publisher&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;robot_state_publisher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;robot_state_publisher&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h3><p>添加如下信息</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(catkin REQUIRED</span><br><span class="line">		message_generation</span><br><span class="line">		roscpp</span><br><span class="line">		rospy</span><br><span class="line">		std_msgs</span><br><span class="line">		geometry_msgs</span><br><span class="line">		urdf</span><br><span class="line">		xacro</span><br><span class="line">		message_generation</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">catkin_package(CATKIN_DEPENDS</span><br><span class="line">		geometry_msgs</span><br><span class="line">		roscpp</span><br><span class="line">		rospy</span><br><span class="line">		std_msgs</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h3 id="package-xml"><a href="#package-xml" class="headerlink" title="package.xml"></a>package.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">format</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>ros_robot_arm<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>URDF Description package for ros_robot_arm<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>This package contains configuration data, 3D models and launch files</span><br><span class="line">for ros_robot_arm robot<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>TODO<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maintainer</span> <span class="attr">email</span>=<span class="string">&quot;TODO@email.com&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">license</span>&gt;</span>BSD<span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">buildtool_depend</span>&gt;</span>catkin<span class="tag">&lt;/<span class="name">buildtool_depend</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>roscpp<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>rospy<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>std_msgs<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>geometry_msgs<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>urdf<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>xacro<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>roslaunch<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>robot_state_publisher<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>rviz<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>joint_state_publisher_gui<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>gazebo<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>moveit_simple_controller_manager<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>roscpp<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>rospy<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>std_msgs<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>geometry_msgs<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>urdf<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>xacro<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>roscpp<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>rospy<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>std_msgs<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>geometry_msgs<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>urdf<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>xacro<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">export</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">architecture_independent</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">export</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="urdf文件"><a href="#urdf文件" class="headerlink" title="urdf文件"></a>urdf文件</h3><p>为机器人的各个joint添加控制器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link1_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link1_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link2_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link2_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link3_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint3&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link3_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link4_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint4&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link4_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link5_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint5&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link5_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link6_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint6&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link6_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link_hand1_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint_hand1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link_hand1_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">transmission</span> <span class="attr">name</span>=<span class="string">&quot;link_hand2_trans&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>transmission_interface/SimpleTransmission<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;joint_hand2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">actuator</span> <span class="attr">name</span>=<span class="string">&quot;link_hand2_motor&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mechanicalReduction</span>&gt;</span>50<span class="tag">&lt;/<span class="name">mechanicalReduction</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hardwareInterface</span>&gt;</span>hardware_interface/PositionJointInterface<span class="tag">&lt;/<span class="name">hardwareInterface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">actuator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transmission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;control&quot;</span> <span class="attr">filename</span>=<span class="string">&quot;libgazebo_ros_control.so&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">robotNamespace</span>&gt;</span>/<span class="tag">&lt;/<span class="name">robotNamespace</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;base_link&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Red<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Link1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Orange<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Link2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Turquoise<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Link3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Yellow<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Link4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Orange<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Link5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Green<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Link6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Red<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Hand1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Grey<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;Hand2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selfCollide</span>&gt;</span>true<span class="tag">&lt;/<span class="name">selfCollide</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Grey<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Moveit功能包配置"><a href="#Moveit功能包配置" class="headerlink" title="Moveit功能包配置"></a>Moveit功能包配置</h2><h3 id="config-1"><a href="#config-1" class="headerlink" title="config"></a>config</h3><p>修改<code>ros_controllers.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">moveit_sim_hw_interface:</span></span><br><span class="line">  <span class="attr">joint_model_group:</span> <span class="string">hand_group</span></span><br><span class="line">  <span class="attr">joint_model_group:</span> <span class="string">hand_close</span></span><br><span class="line"></span><br><span class="line"><span class="attr">generic_hw_control_loop:</span></span><br><span class="line">  <span class="attr">loop_hz:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">cycle_time_error_threshold:</span> <span class="number">0.01</span></span><br><span class="line"></span><br><span class="line"><span class="attr">hardware_interface:</span></span><br><span class="line">  <span class="attr">joints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint4</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint6</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint_hand1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint_hand2</span></span><br><span class="line">  <span class="attr">sim_control_mode:</span> <span class="number">1</span> <span class="comment"># 0: position, 1: velocity</span></span><br><span class="line"></span><br><span class="line"><span class="attr">joint_state_controller:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">joint_state_controller/JointStateController</span></span><br><span class="line">  <span class="attr">publish_rate:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">controller_list:</span></span><br><span class="line">  []</span><br></pre></td></tr></table></figure>
<p>在config文件目录下新建<code>new_ros_controllers.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># JointTrajectoryController</span></span><br><span class="line"><span class="attr">controller_list:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">robot_arm_controller</span></span><br><span class="line">    <span class="attr">action_ns:</span> <span class="string">follow_joint_trajectory</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">FollowJointTrajectory</span></span><br><span class="line">    <span class="attr">default:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">joints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint4</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint6</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hand_ee_controller</span></span><br><span class="line">    <span class="attr">action_ns:</span> <span class="string">follow_joint_trajectory</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">FollowJointTrajectory</span></span><br><span class="line">    <span class="attr">joints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint_hand1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">joint_hand2</span></span><br></pre></td></tr></table></figure>
<h3 id="launch-1"><a href="#launch-1" class="headerlink" title="launch"></a>launch</h3><p>修改launch文件目录下<code>simple_moveit_controller_manager.launch.xml</code></p>
<p>将<code>ros_controllers.yaml</code>改为<code>new_ros_controllers.yaml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Define the MoveIt controller manager plugin to use for trajectory execution --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;moveit_controller_manager&quot;</span> <span class="attr">value</span>=<span class="string">&quot;moveit_simple_controller_manager/MoveItSimpleControllerManager&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Load controller list to the parameter server --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span>=<span class="string">&quot;$(find moveit_ros_robot_arm)/config/simple_moveit_controllers.yaml&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span>=<span class="string">&quot;$(find moveit_ros_robot_arm)/config/new_ros_controllers.yaml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在launch文件目录下新建<code>full_robot_arm_sim.launch</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Launch Your robot arms launch file which loads the robot in Gazebo and spawns the controllers --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span> = <span class="string">&quot;$(find ros_robot_arm)/launch/arm_urdf.launch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Launch Moveit Move Group Node --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span> = <span class="string">&quot;$(find moveit_ros_robot_arm)/launch/move_group.launch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Run Rviz and load the default configuration to see the state of the move_group node --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;use_rviz&quot;</span> <span class="attr">default</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find moveit_ros_robot_arm)/launch/moveit_rviz.launch&quot;</span> <span class="attr">if</span>=<span class="string">&quot;$(arg use_rviz)&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;rviz_config&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(find moveit_ros_robot_arm)/launch/moveit.rviz&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ./devel/setup.bash</span><br><span class="line">roslaunch moveit_ros_robot_arm full_robot_arm_sim.launch</span><br></pre></td></tr></table></figure>
<p>首先确定最终姿态，然后<code>Plan</code>规划，再<code>Execute</code>执行，可看到<code>Gazebo</code>中机械臂开始运动</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/240066b63de04be15ea5973da8b3c622.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/240066b63de04be15ea5973da8b3c622.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230707181422728"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-Moveit机械臂追踪二维码（四）</title>
    <url>/2023/07/22/ROS-Moveit%E6%9C%BA%E6%A2%B0%E8%87%82%E8%BF%BD%E8%B8%AA%E4%BA%8C%E7%BB%B4%E7%A0%81%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS-Moveit机械臂追踪二维码-四"><a href="#ROS-Moveit机械臂追踪二维码-四" class="headerlink" title="ROS-Moveit机械臂追踪二维码(四)"></a>ROS-Moveit机械臂追踪二维码(四)</h1><h2 id="在仿真环境增加相机"><a href="#在仿真环境增加相机" class="headerlink" title="在仿真环境增加相机"></a>在仿真环境增加相机</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;camera_depth_frame&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sensor</span> <span class="attr">name</span>=<span class="string">&quot;camera1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;depth&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">always_on</span>&gt;</span>true<span class="tag">&lt;/<span class="name">always_on</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">update_rate</span>&gt;</span>20.0<span class="tag">&lt;/<span class="name">update_rate</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">camera</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">horizontal_fov</span>&gt;</span>1.0471975511965976<span class="tag">&lt;/<span class="name">horizontal_fov</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">image</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">format</span>&gt;</span>R8G8B8<span class="tag">&lt;/<span class="name">format</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">width</span>&gt;</span>640<span class="tag">&lt;/<span class="name">width</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">height</span>&gt;</span>480<span class="tag">&lt;/<span class="name">height</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">clip</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">near</span>&gt;</span>0.05<span class="tag">&lt;/<span class="name">near</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">far</span>&gt;</span>8.0<span class="tag">&lt;/<span class="name">far</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">clip</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">camera</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">filename</span>=<span class="string">&quot;libgazebo_ros_openni_kinect.so&quot;</span> <span class="attr">name</span>=<span class="string">&quot;camera_depth_frame_kinect_controller&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">baseline</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">baseline</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">alwaysOn</span>&gt;</span>true<span class="tag">&lt;/<span class="name">alwaysOn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">updateRate</span>&gt;</span>10<span class="tag">&lt;/<span class="name">updateRate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cameraName</span>&gt;</span>camera1<span class="tag">&lt;/<span class="name">cameraName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">imageTopicName</span>&gt;</span>rgb/image_raw<span class="tag">&lt;/<span class="name">imageTopicName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cameraInfoTopicName</span>&gt;</span>rgb/camera_info<span class="tag">&lt;/<span class="name">cameraInfoTopicName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">depthImageTopicName</span>&gt;</span>depth/image_raw<span class="tag">&lt;/<span class="name">depthImageTopicName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">depthImageCameraInfoTopicName</span>&gt;</span>depth/camera_info<span class="tag">&lt;/<span class="name">depthImageCameraInfoTopicName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pointCloudTopicName</span>&gt;</span>depth/points<span class="tag">&lt;/<span class="name">pointCloudTopicName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frameName</span>&gt;</span>camera_depth_optical_frame<span class="tag">&lt;/<span class="name">frameName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pointCloudCutoff</span>&gt;</span>0.3<span class="tag">&lt;/<span class="name">pointCloudCutoff</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distortion_k1</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">distortion_k1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distortion_k2</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">distortion_k2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distortion_k3</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">distortion_k3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distortion_t1</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">distortion_t1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distortion_t2</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">distortion_t2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">          &lt;CxPrime&gt;0&lt;/CxPrime&gt;</span></span><br><span class="line"><span class="comment">          &lt;Cx&gt;0&lt;/Cx&gt;</span></span><br><span class="line"><span class="comment">          &lt;Cy&gt;0&lt;/Cy&gt;</span></span><br><span class="line"><span class="comment">          &lt;focalLength&gt;0&lt;/focalLength&gt;</span></span><br><span class="line"><span class="comment">          &lt;hackBaseline&gt;0&lt;/hackBaseline&gt;</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sensor</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;camera_rgb_joint&quot;</span> <span class="attr">type</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 以下rpy xyz参数为相机位置可适当修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;3.142 1.5706 3.142&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;0.35 0 1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span> <span class="attr">link</span>=<span class="string">&quot;world&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">link</span>=<span class="string">&quot;camera_rgb_frame&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">&quot;camera_rgb_frame&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inertial</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mass</span> <span class="attr">value</span>=<span class="string">&quot;0.001&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">inertia</span> <span class="attr">ixx</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">ixy</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">ixz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">iyy</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">iyz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">izz</span>=<span class="string">&quot;0.0001&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inertial</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;camera_rgb_optical_joint&quot;</span> <span class="attr">type</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;-1.5707963267948966 0 -1.5707963267948966&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span> <span class="attr">link</span>=<span class="string">&quot;camera_rgb_frame&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">link</span>=<span class="string">&quot;camera_rgb_optical_frame&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">&quot;camera_rgb_optical_frame&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inertial</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mass</span> <span class="attr">value</span>=<span class="string">&quot;0.001&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">inertia</span> <span class="attr">ixx</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">ixy</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">ixz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">iyy</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">iyz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">izz</span>=<span class="string">&quot;0.0001&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inertial</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;camera_joint&quot;</span> <span class="attr">type</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;0 0 0&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;-0.031 0 -0.016&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span> <span class="attr">link</span>=<span class="string">&quot;camera_rgb_frame&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">link</span>=<span class="string">&quot;camera_link&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">&quot;camera_link&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">visual</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;0 0 1.5707963267948966&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">geometry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mesh</span> <span class="attr">filename</span>=<span class="string">&quot;package://robot_arm_urdf/meshes/kinect.dae&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">geometry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">visual</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collision</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;0 0 0&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;0.0 0.0 0.0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">geometry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">box</span> <span class="attr">size</span>=<span class="string">&quot;0.07271 0.27794 0.073&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">geometry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collision</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inertial</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mass</span> <span class="attr">value</span>=<span class="string">&quot;0.001&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">inertia</span> <span class="attr">ixx</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">ixy</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">ixz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">iyy</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">iyz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">izz</span>=<span class="string">&quot;0.0001&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inertial</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- The fixed joints &amp; links below are usually published by static_transformers launched by the OpenNi launch </span></span><br><span class="line"><span class="comment">		 files. However, for Gazebo simulation we need them, so we add them here.</span></span><br><span class="line"><span class="comment">		 (Hence, don&#x27;t publish them additionally!) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;camera_depth_joint&quot;</span> <span class="attr">type</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;0 0 0&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span> <span class="attr">link</span>=<span class="string">&quot;camera_rgb_frame&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">link</span>=<span class="string">&quot;camera_depth_frame&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">&quot;camera_depth_frame&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inertial</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mass</span> <span class="attr">value</span>=<span class="string">&quot;0.001&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">inertia</span> <span class="attr">ixx</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">ixy</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">ixz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">iyy</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">iyz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">izz</span>=<span class="string">&quot;0.0001&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inertial</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;camera_depth_optical_joint&quot;</span> <span class="attr">type</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">origin</span> <span class="attr">rpy</span>=<span class="string">&quot;-1.5707963267948966 0 -1.5707963267948966&quot;</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span> <span class="attr">link</span>=<span class="string">&quot;camera_depth_frame&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">link</span>=<span class="string">&quot;camera_depth_optical_frame&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">joint</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">name</span>=<span class="string">&quot;camera_depth_optical_frame&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inertial</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mass</span> <span class="attr">value</span>=<span class="string">&quot;0.001&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">origin</span> <span class="attr">xyz</span>=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">inertia</span> <span class="attr">ixx</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">ixy</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">ixz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">iyy</span>=<span class="string">&quot;0.0001&quot;</span> <span class="attr">iyz</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">izz</span>=<span class="string">&quot;0.0001&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inertial</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">gazebo</span> <span class="attr">reference</span>=<span class="string">&quot;camera_link&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">material</span>&gt;</span>Gazebo/Black<span class="tag">&lt;/<span class="name">material</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">gazebo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">robot</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="生成AR码Model"><a href="#生成AR码Model" class="headerlink" title="生成AR码Model"></a>生成AR码Model</h2><p><code>git clone https://github.com/mikaelarguedas/gazebo_models.git</code></p>
<p>参考其README</p>
<p>移动到<code>/ar_tags/scripts</code></p>
<p>执行命令格式如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./generate_markers_model.py -h</span></span><br><span class="line">usage: generate gazebo models for AR tags</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -i IMAGES_DIR, --images-dir IMAGES_DIR</span><br><span class="line">                        directory where the marker images are located</span><br><span class="line">                        (default: $HOME/gazebo_models/ar_tags/images)</span><br><span class="line">  -g GAZEBODIR, --gazebodir GAZEBODIR</span><br><span class="line">                        Gazebo models directory (default:</span><br><span class="line">                        $HOME/.gazebo/models)</span><br><span class="line">  -s SIZE, --size SIZE  marker size in mm (default: 500)</span><br><span class="line">  -v, --verbose         verbose mode (default: False)</span><br><span class="line">  -w WHITE_CONTOUR_SIZE_MM, --white-contour-size-mm WHITE_CONTOUR_SIZE_MM</span><br><span class="line">                        Add white contour around images, default to no contour</span><br><span class="line">                        (default: 0)</span><br><span class="line"></span><br><span class="line">./generate_markers_model.py -i IMAGE_DIRECTORY -g GAZEBO_MODELS_DIRECTORY -s SIZE_IN_MILLIMETER -w CONTOUR_SIZE_IN_MM</span><br></pre></td></tr></table></figure>
<p>执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./generate_markers_model.py  -s 90</span><br></pre></td></tr></table></figure>
<p>可获得90x90的Ar markers model，模型文件默认保存目录为<code>$HOME/.gazebo/models</code></p>
<h2 id="建立launch文件"><a href="#建立launch文件" class="headerlink" title="建立launch文件"></a>建立launch文件</h2><p><code>ar_track_param.launch</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;marker_size&quot;</span> <span class="attr">default</span>=<span class="string">&quot;9&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;max_new_marker_error&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.08&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;max_track_error&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;cam_image_topic&quot;</span> <span class="attr">default</span>=<span class="string">&quot;/camera1/rgb/image_raw&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;cam_info_topic&quot;</span> <span class="attr">default</span>=<span class="string">&quot;/camera1/rgb/camera_info&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;output_frame&quot;</span> <span class="attr">default</span>=<span class="string">&quot;/base_link&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;ar_track_alvar&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;ar_track_alvar&quot;</span> <span class="attr">type</span>=<span class="string">&quot;individualMarkersNoKinect&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;marker_size&quot;</span>           <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg marker_size)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;max_new_marker_error&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg max_new_marker_error)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;max_track_error&quot;</span>       <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg max_track_error)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;output_frame&quot;</span>          <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg output_frame)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;camera_image&quot;</span>  <span class="attr">to</span>=<span class="string">&quot;$(arg cam_image_topic)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;camera_info&quot;</span>   <span class="attr">to</span>=<span class="string">&quot;$(arg cam_info_topic)&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>arg参数可适当修改</p>
<h2 id="建立py文件"><a href="#建立py文件" class="headerlink" title="建立py文件"></a>建立py文件</h2><p><code>moveit_track_demo.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> rospy, sys</span><br><span class="line"><span class="keyword">import</span> moveit_commander</span><br><span class="line"><span class="keyword">import</span> tf</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> moveit_msgs.msg <span class="keyword">import</span> RobotTrajectory</span><br><span class="line"><span class="keyword">from</span> trajectory_msgs.msg <span class="keyword">import</span> JointTrajectoryPoint</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers, AlvarMarker</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> PoseStamped, Pose</span><br><span class="line"></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line">z = <span class="number">0</span></span><br><span class="line">ox = <span class="number">0</span></span><br><span class="line">oy = <span class="number">0</span></span><br><span class="line">oz = <span class="number">0</span></span><br><span class="line">zw = <span class="number">0</span>  </span><br><span class="line"><span class="comment"># 初始化move_group的API</span></span><br><span class="line">moveit_commander.roscpp_initialize(sys.argv)               </span><br><span class="line"><span class="comment"># 初始化需要使用move group控制的机械臂中的arm group</span></span><br><span class="line">arm = moveit_commander.MoveGroupCommander(<span class="string">&#x27;arm_group&#x27;</span>)</span><br><span class="line"><span class="comment"># 初始化需要使用move group控制的机械臂中的gripper group</span></span><br><span class="line">gripper = moveit_commander.MoveGroupCommander(<span class="string">&#x27;hand_group&#x27;</span>)       </span><br><span class="line"><span class="comment"># 获取终端link的名称</span></span><br><span class="line">end_effector_link = arm.get_end_effector_link()                       </span><br><span class="line"><span class="comment"># 设置目标位置所使用的参考坐标系</span></span><br><span class="line">reference_frame = <span class="string">&#x27;base_link&#x27;</span></span><br><span class="line">arm.set_pose_reference_frame(reference_frame)              </span><br><span class="line"><span class="comment"># 当运动规划失败后，允许重新规划</span></span><br><span class="line">arm.allow_replanning(<span class="literal">True</span>)      </span><br><span class="line"><span class="comment"># 设置位置(单位：米)和姿态（单位：弧度）的允许误差</span></span><br><span class="line">arm.set_goal_position_tolerance(<span class="number">0.01</span>)</span><br><span class="line">arm.set_goal_orientation_tolerance(<span class="number">0.05</span>)</span><br><span class="line">gripper.set_goal_joint_tolerance(<span class="number">0.001</span>)        </span><br><span class="line"><span class="comment"># 控制机械臂先回到初始化位置</span></span><br><span class="line"><span class="comment">#arm.set_named_target(&#x27;home&#x27;)</span></span><br><span class="line"><span class="comment">#arm.go()</span></span><br><span class="line"><span class="comment"># 设置机器臂当前的状态作为运动初始状态</span></span><br><span class="line">arm.set_start_state_to_current_state()</span><br><span class="line">target_pose = PoseStamped()</span><br><span class="line">a = <span class="number">1</span> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Listener</span>():</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;listener&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        rospy.Subscriber(<span class="string">&quot;/ar_pose_marker&quot;</span>,AlvarMarkers,ar_pose, queue_size=<span class="number">1</span>)</span><br><span class="line">        rospy.spin()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ar_pose</span>(<span class="params">data</span>):</span></span><br><span class="line">        x = data.markers[<span class="number">0</span>].pose.pose.position.x</span><br><span class="line">        y = data.markers[<span class="number">0</span>].pose.pose.position.y</span><br><span class="line">        z = data.markers[<span class="number">0</span>].pose.pose.position.z</span><br><span class="line">        ox = data.markers[<span class="number">0</span>].pose.pose.orientation.x</span><br><span class="line">        oy = data.markers[<span class="number">0</span>].pose.pose.orientation.y</span><br><span class="line">        oz = data.markers[<span class="number">0</span>].pose.pose.orientation.z</span><br><span class="line">        ow = data.markers[<span class="number">0</span>].pose.pose.orientation.w</span><br><span class="line">        target_pose.header.frame_id = reference_frame</span><br><span class="line">        target_pose.header.stamp = rospy.Time.now()     </span><br><span class="line">        target_pose.pose.position.x =  x-<span class="number">0.08</span></span><br><span class="line">        target_pose.pose.position.y = y</span><br><span class="line">        target_pose.pose.position.z = z+<span class="number">0.03</span></span><br><span class="line">        target_pose.pose.orientation.x = <span class="number">0.911822</span></span><br><span class="line">        target_pose.pose.orientation.y = -<span class="number">0.0269758</span></span><br><span class="line">        target_pose.pose.orientation.z = <span class="number">0.285694</span></span><br><span class="line">        target_pose.pose.orientation.w = -<span class="number">0.293653</span></span><br><span class="line">        <span class="built_in">print</span>(target_pose)</span><br><span class="line">        <span class="comment"># 设置机械臂终端运动的目标位姿</span></span><br><span class="line">        arm.set_pose_target(target_pose, end_effector_link)</span><br><span class="line">        arm.go()</span><br><span class="line">        <span class="comment"># rospy.sleep(1)</span></span><br><span class="line">        <span class="keyword">global</span> a</span><br><span class="line">        a+=<span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot; count &quot;</span>,a) </span><br><span class="line">        <span class="comment"># 关闭并退出moveit</span></span><br><span class="line">        <span class="comment">#moveit_commander.roscpp_shutdown()</span></span><br><span class="line">        <span class="comment">#moveit_commander.os._exit(0)</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;清除&quot;</span>) </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    Listener()</span><br></pre></td></tr></table></figure>
<h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><p><code>roslaunch moveit_ros_robot_arm full_robot_arm_sim.launch</code></p>
<p><code>roslaunch moveit_progect ar_track_param.launch</code></p>
<p><code>rosrun moveit_progect moveit_track_demo.py</code></p>
<p>演示视频: <a href="https://www.bilibili.com/video/BV1k8411S7fo/?spm_id_from=333.999.0.0&amp;vd_source=b57e293dfa3402722a1522f3d1c08c97">https://www.bilibili.com/video/BV1k8411S7fo/?spm_id_from=333.999.0.0&amp;vd_source=b57e293dfa3402722a1522f3d1c08c97</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/1aa6926dcf2c01da69e3fdd1d0ae663e.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/1aa6926dcf2c01da69e3fdd1d0ae663e.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230722171206584"></p>
<p>参考文章:<br><a href="https://www.guyuehome.com/6873/feed">ROS机械臂控制之跟踪二维码</a></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS与STM32通信(一)-rosserial</title>
    <url>/2023/07/27/ROS%E4%B8%8ESTM32%E9%80%9A%E4%BF%A1-rosserial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS与STM32通信-一-rosserial"><a href="#ROS与STM32通信-一-rosserial" class="headerlink" title="ROS与STM32通信(一)-rosserial"></a>ROS与STM32通信(一)-rosserial</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>STM32F103c8t6</li>
<li>OLED(I2C)</li>
<li>USB2TTL</li>
<li>Stlink </li>
</ul>
<h3 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h3><p>OLED(GPIO模拟I2C)</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">硬件</th>
<th style="text-align:center">引脚</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">OLEDSCL</td>
<td style="text-align:center">PA4</td>
</tr>
<tr>
<td style="text-align:center">OLEDSDA</td>
<td style="text-align:center">PA5</td>
</tr>
</tbody>
</table>
</div>
<p>USART1</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">硬件</th>
<th style="text-align:center">引脚</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">RX</td>
<td style="text-align:center">PA9</td>
<td style="text-align:center">USART1_TX</td>
</tr>
<tr>
<td style="text-align:center">TX</td>
<td style="text-align:center">PA10</td>
<td style="text-align:center">USART1_RX</td>
</tr>
</tbody>
</table>
</div>
<p>LED</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">硬件</th>
<th style="text-align:center">引脚</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">LED0</td>
<td style="text-align:center">PC13</td>
</tr>
<tr>
<td style="text-align:center">LED1</td>
<td style="text-align:center">PC15</td>
</tr>
</tbody>
</table>
</div>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul>
<li>STM32CubeMX</li>
<li>Clion</li>
</ul>
<h3 id="STM32CubeMX配置"><a href="#STM32CubeMX配置" class="headerlink" title="STM32CubeMX配置"></a>STM32CubeMX配置</h3><ul>
<li>SYS-&gt;Debug-&gt;Serial Wire</li>
<li>RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</li>
<li>PC15-&gt;OutPut ,Label为LED0 </li>
<li>PC13-&gt;OutPut ,Label为LED1</li>
<li>TIM1-&gt;Clock Source-&gt;Internal Clock</li>
<li>时钟树，时钟设置为72M</li>
<li>USART1-&gt;Asynchronous Baud Rate: 115200 </li>
</ul>
<p>设置DMA</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c0547a7d6e26872a19a7baf22804009e.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c0547a7d6e26872a19a7baf22804009e.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727095227292"></p>
<p>开启串口中断</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/5f748579fb1edc674ac2d5cc7fa53891.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/5f748579fb1edc674ac2d5cc7fa53891.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727095301013"></p>
<h2 id="rosserial"><a href="#rosserial" class="headerlink" title="rosserial"></a>rosserial</h2><p>rosserial是ROS中的一个重要模块,它实现了ROS通信协议与各类嵌入式硬件平台之间的桥接,大大简化了ROS在底层硬件上的移植和应用。rosserial通过消息序列化和常用串行通信接口,实现了ROS主机和嵌入式客户端之间的消息交互,为各种嵌入式平台提供了C++和Python的ROS客户端库,使得在这些硬件上也能方便地使用ROS的通信架构来进行节点管理、话题通信和服务调用。rosserial还支持动态主题和服务,以较小的代码占用实现ROS功能,具有很强的可移植性。因此,rosserial是ROS物联网和机器人应用不可或缺的重要组件,极大地便利了ROS在各类嵌入式系统和小型机器人产品上的移植应用和开发。</p>
<p><a href="http://wiki.ros.org/rosserial">rosserial_WIKI</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/948271f810eedb5cbe2cae6cb7a0a9f5.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/948271f810eedb5cbe2cae6cb7a0a9f5.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727103754363"></p>
<p><a href="https://github.com/yoneken/rosserial_stm32">rosserial_stm32 Github地址</a></p>
<p>本文资源包<a href="https://github.com/GHigher12/STM32f103c8t6_rosserial.git">stm32f103c8t6_rosserial</a>， <a href="https://download.csdn.net/download/weixin_51002159/88110439?spm=1001.2014.3001.5501">CSDN资源下载</a></p>
<h2 id="移植"><a href="#移植" class="headerlink" title="移植"></a>移植</h2><p>下载上述资源<code>stm32f103c8t6_rosserial</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/GHigher12/STM32f103c8t6_rosserial.git</span><br></pre></td></tr></table></figure>
<p>or 直接在CSDN下载</p>
<p>将RosLibs文件夹添加到stm32工作文件里</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/14deb59e3b3dc7cfd7d5ecb74591042e.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/14deb59e3b3dc7cfd7d5ecb74591042e.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727160334430"></p>
<p>还有Core文件夹中的mainpp.h , round.h, mainpp.cpp</p>
<p>此时如果用Clion作为开发环境还需要修改<code>CMakeList.txt</code></p>
<p>包含文件的路径</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/52daa5d95a8e9bec0c55decdda78f97a.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/52daa5d95a8e9bec0c55decdda78f97a.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p><code>main.c</code>使用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainpp.h&quot;</span></span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">  setup();</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      loop();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="上位机订阅-下位机发布"><a href="#上位机订阅-下位机发布" class="headerlink" title="上位机订阅-下位机发布"></a>上位机订阅-下位机发布</h2><h3 id="上位机订阅"><a href="#上位机订阅" class="headerlink" title="上位机订阅"></a>上位机订阅</h3><p>python订阅 <code>demo01_sub_py.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&quot;ros_pc_pub&quot;</span>)</span><br><span class="line">    pub = rospy.Publisher(<span class="string">&quot;pc_to_stm32&quot;</span>,String,queue_size=<span class="number">10</span>)</span><br><span class="line">    msg = String()</span><br><span class="line">    msg_front = <span class="string">&quot;ros_2_stm32-&gt;&quot;</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">        msg.data = msg_front + <span class="built_in">str</span>(count)</span><br><span class="line">        pub.publish(msg)</span><br><span class="line">        rate.sleep()</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;发布的数据为:%s&quot;</span>,msg.data)</span><br><span class="line">        count += <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>c++订阅 <code>demo01_sub_c.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;std_msgs/String.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doMsg</span><span class="params">(<span class="keyword">const</span> std_msgs::String::ConstPtr &amp;msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;订阅的数据为: %s&quot;</span>, msg-&gt;data.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setlocale</span>(LC_ALL,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;ros_pc_sub&quot;</span>);</span><br><span class="line">    ros::NodeHandle nh;</span><br><span class="line">    ros::Subscriber sub = nh.<span class="built_in">subscribe</span>(<span class="string">&quot;stm32_to_pc&quot;</span>, <span class="number">10</span>, doMsg);</span><br><span class="line">    ros::<span class="built_in">spin</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>安装rosserial_python</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-rosserial-python</span><br></pre></td></tr></table></figure>
<h3 id="下位机发布"><a href="#下位机发布" class="headerlink" title="下位机发布"></a>下位机发布</h3><p><code>mainpp.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mainpp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;std_msgs/String.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">ros::NodeHandle nh;</span><br><span class="line"></span><br><span class="line">std_msgs::String stm32_to_pc_word;</span><br><span class="line"></span><br><span class="line"><span class="function">ros::Publisher <span class="title">stm32_to_pc</span><span class="params">(<span class="string">&quot;stm32_to_pc&quot;</span>, &amp;stm32_to_pc_word)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>&#123;</span><br><span class="line">  nh.<span class="built_in">getHardware</span>()-&gt;<span class="built_in">flush</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>&#123;</span><br><span class="line">  nh.<span class="built_in">getHardware</span>()-&gt;<span class="built_in">reset_rbuf</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> hello[<span class="number">13</span>] = <span class="string">&quot;hello ros!&quot;</span>;</span><br><span class="line">u8 cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nh.<span class="built_in">initNode</span>();</span><br><span class="line">	nh.<span class="built_in">advertise</span>(stm32_to_pc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt+=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(oledBuf,<span class="string">&quot;stm32_2_ros-&gt;%d&quot;</span>,cnt);</span><br><span class="line">    <span class="built_in">OLED_ShowString</span>(<span class="number">0</span>,<span class="number">24</span>,(u8*)oledBuf,<span class="number">16</span>);</span><br><span class="line">    <span class="built_in">OLED_Refresh</span>();</span><br><span class="line">    stm32_to_pc_word.data = oledBuf;</span><br><span class="line">    <span class="built_in">HAL_GPIO_TogglePin</span>(LED0_GPIO_Port, LED0_Pin);</span><br><span class="line">    <span class="built_in">HAL_GPIO_TogglePin</span>(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">	<span class="built_in">HAL_Delay</span>(<span class="number">1000</span>);</span><br><span class="line">	stm32_to_pc.<span class="built_in">publish</span>(&amp;stm32_to_pc_word);</span><br><span class="line">	nh.<span class="built_in">spinOnce</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译将程序烧录到stm32中</p>
<h3 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h3><p>将usb2ttl连接好usart1，连接电脑</p>
<p>执行下列命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsusb</span><br><span class="line">ls /dev/ttyUSB*</span><br><span class="line">sudo chmod 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/486ed5cf47145dd5814e7a383b1e7ab7.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/486ed5cf47145dd5814e7a383b1e7ab7.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727162511985"></p>
<p>启动rosserial_python节点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">roscore</span><br><span class="line">rosrun rosserial_python serial_node.py _port:=/dev/ttyUSB0 _baud:=115200</span><br></pre></td></tr></table></figure>
<p>出现以下内容则表示运行正常</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[INFO] [1690446448.903399]: ROS Serial Python Node</span><br><span class="line">[INFO] [1690446448.908570]: Connecting to /dev/ttyUSB0 at 115200 baud</span><br><span class="line">[INFO] [1690446451.013146]: Requesting topics...</span><br><span class="line">[INFO] [1690446451.772474]: Note: publish buffer size is 512 bytes</span><br><span class="line">[INFO] [1690446451.774498]: Setup publisher on stm32_to_pc [std_msgs/String]</span><br></pre></td></tr></table></figure>
<p>可使用<code>rostopic echo /stm32_to_pc</code>查看话题</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7c30ad8d8a927114042d97bd7995728b.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7c30ad8d8a927114042d97bd7995728b.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727163158146"></p>
<p><em>不过这里会出现<code>[ERROR] [1690446652.290474]: Lost sync with device, restarting...</code>报错，导致收发频率不一致，博主现在还没解决，如有读者有解决办法，可在评论留言。</em></p>
<p>python订阅</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line"><span class="built_in">source</span> ./devel/setup.bash</span><br><span class="line">rosrun hello_vscode demo01_sub_py.py</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/f427b970f4af2ee79463ad0d13410a43.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/f427b970f4af2ee79463ad0d13410a43.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727163637705"></p>
<p>c++订阅</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line"><span class="built_in">source</span> ./devel/setup.bash</span><br><span class="line">rosrun hello_vscode demo01_sub_c</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7d58901bf1b99d437b71ae37a40ccb58.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7d58901bf1b99d437b71ae37a40ccb58.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727163815409"></p>
<p>下位机显示</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b1be6fad0a69ac8f9d3b3be30f2927e7.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b1be6fad0a69ac8f9d3b3be30f2927e7.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727165726493"></p>
<p>查看<code>rqt_graph</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/21452f18f3a8799dffeb789a18d4dd64.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/21452f18f3a8799dffeb789a18d4dd64.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727163848358"></p>
<h2 id="上位机发布-下位机订阅"><a href="#上位机发布-下位机订阅" class="headerlink" title="上位机发布-下位机订阅"></a>上位机发布-下位机订阅</h2><h3 id="上位机发布"><a href="#上位机发布" class="headerlink" title="上位机发布"></a>上位机发布</h3><p>python发布 <code>demo01_pub_py.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&quot;ros_pc_pub&quot;</span>)</span><br><span class="line">    pub = rospy.Publisher(<span class="string">&quot;pc_to_stm32&quot;</span>,String,queue_size=<span class="number">10</span>)</span><br><span class="line">    msg = String()</span><br><span class="line">    msg_front = <span class="string">&quot;ros_2_stm32-&gt;&quot;</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">        msg.data = msg_front + <span class="built_in">str</span>(count)</span><br><span class="line">        pub.publish(msg)</span><br><span class="line">        rate.sleep()</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;发布的数据为:%s&quot;</span>,msg.data)</span><br><span class="line">        count += <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>c++发布 <code>demo01_pub_c.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;std_msgs/String.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">setlocale</span>(LC_ALL,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;ros_pc_pub&quot;</span>);</span><br><span class="line">    ros::NodeHandle nh;</span><br><span class="line">    ros::Publisher pub = nh.advertise&lt;std_msgs::String&gt;(<span class="string">&quot;pc_to_stm32&quot;</span>, <span class="number">10</span>);</span><br><span class="line">    std_msgs::String msg;</span><br><span class="line">    <span class="function">ros::Rate <span class="title">rate</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    ros::<span class="built_in">Duration</span>(<span class="number">3</span>).<span class="built_in">sleep</span>();</span><br><span class="line">    <span class="keyword">while</span> (ros::ok)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        std::stringstream ss;</span><br><span class="line">        ss &lt;&lt; <span class="string">&quot;ros_2_stm32-&gt;&quot;</span> &lt;&lt; count;</span><br><span class="line">        msg.data = ss.<span class="built_in">str</span>();</span><br><span class="line">        pub.<span class="built_in">publish</span>(msg);</span><br><span class="line">        <span class="built_in">ROS_INFO</span>(<span class="string">&quot;发布的数据为: %s&quot;</span>, ss.<span class="built_in">str</span>().<span class="built_in">c_str</span>());</span><br><span class="line">        rate.<span class="built_in">sleep</span>();</span><br><span class="line">        ros::<span class="built_in">spinOnce</span>();  <span class="comment">//处理回调函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="下位机订阅"><a href="#下位机订阅" class="headerlink" title="下位机订阅"></a>下位机订阅</h3><p><code>mainpp.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mainpp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;std_msgs/String.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">command_callback</span><span class="params">( <span class="keyword">const</span> std_msgs::String&amp; rxbuff)</span></span>;</span><br><span class="line"></span><br><span class="line">ros::NodeHandle nh;</span><br><span class="line"></span><br><span class="line">std_msgs::String stm32_to_pc_word;</span><br><span class="line"></span><br><span class="line"><span class="function">ros::Subscriber&lt;std_msgs::String&gt; <span class="title">cmd_sub</span><span class="params">(<span class="string">&quot;pc_to_stm32&quot;</span>, command_callback)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">command_callback</span><span class="params">(<span class="keyword">const</span> std_msgs::String &amp;rxbuff)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> oled_rxbuff[<span class="number">128</span>];</span><br><span class="line">    stm32_to_pc_word = rxbuff;</span><br><span class="line">    <span class="built_in">snprintf</span>(oled_rxbuff, <span class="built_in"><span class="keyword">sizeof</span></span>(oled_rxbuff), <span class="string">&quot;%s&quot;</span>, rxbuff.data);</span><br><span class="line">    <span class="built_in">OLED_ShowString</span>(<span class="number">0</span>,<span class="number">24</span>, (u8*)oled_rxbuff,<span class="number">16</span>);</span><br><span class="line">    <span class="built_in">OLED_Refresh</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>&#123;</span><br><span class="line">  nh.<span class="built_in">getHardware</span>()-&gt;<span class="built_in">flush</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>&#123;</span><br><span class="line">  nh.<span class="built_in">getHardware</span>()-&gt;<span class="built_in">reset_rbuf</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nh.<span class="built_in">initNode</span>();</span><br><span class="line">	nh.<span class="built_in">subscribe</span>(cmd_sub);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">HAL_GPIO_TogglePin</span>(LED0_GPIO_Port, LED0_Pin);</span><br><span class="line">    <span class="built_in">HAL_GPIO_TogglePin</span>(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">	<span class="built_in">HAL_Delay</span>(<span class="number">1000</span>);</span><br><span class="line">	nh.<span class="built_in">spinOnce</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="通信-1"><a href="#通信-1" class="headerlink" title="通信"></a>通信</h3><p>python发布</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rosrun hello_vscode demo01_pub_py.py</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/96b56a592d86d5e3e24bb4c542832a66.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/96b56a592d86d5e3e24bb4c542832a66.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727165011538"></p>
<p>c++发布</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rosrun hello_vscode demo01_pub_c</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/91cc82d23911196b0eb9a41821dd9a18.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/91cc82d23911196b0eb9a41821dd9a18.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727165221524"></p>
<p>下位机显示</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/83ee03eb205066d1a61efd0f8fe1e576.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/83ee03eb205066d1a61efd0f8fe1e576.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727165700807"></p>
<p>查看<code>rqt_graph</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/d4cbbd1f4f8627f472cda1beff42b733.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/d4cbbd1f4f8627f472cda1beff42b733.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230727165258149"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS与STM32通信(二)-pyserial</title>
    <url>/2023/08/22/ROS%E4%B8%8ESTM32%E9%80%9A%E4%BF%A1-pyserial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS与STM32通信-二-pyserial"><a href="#ROS与STM32通信-二-pyserial" class="headerlink" title="ROS与STM32通信(二)-pyserial"></a>ROS与STM32通信(二)-pyserial</h1><p>ROS与STM32通信一般分为两种，</p>
<ul>
<li>STM32上运行ros节点实现通信</li>
<li>使用普通的串口库进行通信，然后以话题方式发布</li>
</ul>
<p>第一种方式具体实现过程可参考上篇文章<a href="https://blog.csdn.net/weixin_51002159/article/details/131964175?spm=1001.2014.3001.5501">ROS与STM32通信-rosserial</a>，上述文章中的收发频率不一致情况，目前还没解决，所以本篇文章采用第二种方式来实现STM32与ROS通信，C++实现方式可参看这篇文章<a href="https://blog.csdn.net/qq_42688495/article/details/107730630">ROS与STM32通信</a>,其利用ros serial库数据格式为C/C++共用体实现解析与发布。Python实现方式可使用pyserial库来实现通信，pyserial的用法可参考我之前写的文章<a href="http://yuchanghui.top/2022/01/19/python%E4%B8%8Estm32%E9%80%9A%E4%BF%A1/">python与stm32通信</a>,数据格式我们采用Json格式来解析与发布。</p>
<p><strong>以STM32读取MPU6050，然后ROS发布与订阅为例</strong></p>
<h2 id="下位机"><a href="#下位机" class="headerlink" title="下位机"></a>下位机</h2><p>参考之前写的文章<a href="https://blog.csdn.net/weixin_51002159/article/details/129962902?spm=1001.2014.3001.5501">STM32HAL库驱动MPU6050</a></p>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      <span class="keyword">while</span> (mpu_dmp_get_data(&amp;pitch, &amp;roll, &amp;yaw));    <span class="comment">//必须要用while等待，才能读取成功</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;&#123;\&quot;roll\&quot;:%.4f,\&quot;pitch\&quot;:%.4f,\&quot;yaw\&quot;:%.4f&#125;&quot;</span>,roll, pitch, yaw); <span class="comment">//Json字符串发送</span></span><br><span class="line">      <span class="built_in">sprintf</span>(oledBuf, <span class="string">&quot;roll :%.2f&quot;</span>, roll);</span><br><span class="line">      OLED_ShowString(<span class="number">0</span>, <span class="number">28</span>, (u8*)oledBuf, <span class="number">12</span>);</span><br><span class="line">      <span class="built_in">sprintf</span>(oledBuf, <span class="string">&quot;pitch:%.2f&quot;</span>, pitch);</span><br><span class="line">      OLED_ShowString(<span class="number">0</span>, <span class="number">40</span>, (u8*)oledBuf, <span class="number">12</span>);</span><br><span class="line">      <span class="built_in">sprintf</span>(oledBuf, <span class="string">&quot;yaw  :%.2f&quot;</span>, yaw);</span><br><span class="line">      OLED_ShowString(<span class="number">0</span>, <span class="number">52</span>, (u8*)oledBuf, <span class="number">12</span>);</span><br><span class="line">      OLED_Refresh();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p><strong>使用printf重定向发送json字符串，注意C语言转义字符：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#123;\&quot;roll\&quot;:%.4f,\&quot;pitch\&quot;:%.4f,\&quot;yaw\&quot;:%.4f&quot;</span>,roll, pitch, yaw); <span class="comment">//Json字符串发送</span></span><br></pre></td></tr></table></figure>
<p>可使用<code>cutecom</code>查看发送的消息</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b95794d641493b2b8e8ff5bb63c9c28e.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b95794d641493b2b8e8ff5bb63c9c28e.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230820212534764"></p>
<h2 id="上位机"><a href="#上位机" class="headerlink" title="上位机"></a>上位机</h2><h3 id="自定义msg消息"><a href="#自定义msg消息" class="headerlink" title="自定义msg消息"></a>自定义msg消息</h3><p>在功能包下新建文件夹为msg</p>
<p>新建文件<code>Imu.msg</code><strong>（首字母大写）</strong>，输入以下内容</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">float32 pitch</span><br><span class="line">float32 roll</span><br><span class="line">float32 yaw</span><br></pre></td></tr></table></figure>
<p><code>package.xml</code>添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>CMakeList.txt</code>编辑msg相关配置</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(catkin REQUIRED COMPONENTS</span><br><span class="line">  roscpp</span><br><span class="line">  rospy</span><br><span class="line">  std_msgs</span><br><span class="line">  message_generation</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Generate messages in the &#x27;msg&#x27; folder</span></span><br><span class="line">add_message_files(</span><br><span class="line">  FILES</span><br><span class="line">  Imu.msg</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Generate added messages and services with any dependencies listed here</span></span><br><span class="line">generate_messages(</span><br><span class="line">  DEPENDENCIES</span><br><span class="line">  std_msgs</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">catkin_package(</span><br><span class="line"><span class="comment">#  INCLUDE_DIRS include</span></span><br><span class="line"><span class="comment">#  LIBRARIES hello_vscode</span></span><br><span class="line"> CATKIN_DEPENDS roscpp rospy std_msgs message_runtime</span><br><span class="line"><span class="comment">#  DEPENDS system_lib</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>然后编译整个工作空间<code>catkin_make</code></p>
<p>Python 需要调用的中间文件(…/工作空间/devel/lib/python3/dist-packages/包名/msg)</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/5ac00e1b7af1a01ed6082bfcceca1d72.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/5ac00e1b7af1a01ed6082bfcceca1d72.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230820211049040"></p>
<p><strong>vscode配置</strong></p>
<p>将前面生成的 python 文件路径配置进<code>settings.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;python.autoComplete.extraPaths&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;/opt/ros/noetic/lib/python2.7/dist-packages&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;python.analysis.extraPaths&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;/opt/ros/noetic/lib/python3/dist-packages&quot;</span>,</span><br><span class="line">        <span class="string">&quot;/home/ghigher/ROS_SW/demo01_ws/devel/lib/python3/dist-packages&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> serial</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> hello_vscode.msg <span class="keyword">import</span> Imu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查字符串是否为json格式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_json</span>(<span class="params">test_str</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        json_object = json.loads(test_str)  <span class="comment"># 通过json.loads判断</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        port = <span class="string">&#x27;/dev/ttyUSB0&#x27;</span>  <span class="comment"># 串口号</span></span><br><span class="line">        baud = <span class="number">115200</span>  <span class="comment"># 波特率</span></span><br><span class="line">        rospy.init_node(<span class="string">&quot;serial_node&quot;</span>)</span><br><span class="line">        ser = serial.Serial(port, baud, timeout=<span class="number">0.5</span>)</span><br><span class="line">        imu_pub = rospy.Publisher(<span class="string">&quot;imu&quot;</span>, Imu, queue_size=<span class="number">10</span>)</span><br><span class="line">        flag = ser.isOpen()</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Succeed to open port&quot;</span>)</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">                <span class="comment"># data = ser.read(ser.in_waiting).decode(&#x27;gbk&#x27;)</span></span><br><span class="line">                data = ser.readline().decode(<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">                imu_msg = Imu()</span><br><span class="line">                <span class="keyword">if</span> data != <span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> is_json(data):</span><br><span class="line">                    <span class="comment"># print(data)</span></span><br><span class="line">                    <span class="comment">#json 解析</span></span><br><span class="line">                    imu_data = json.loads(data)</span><br><span class="line">                    imu_msg.pitch = imu_data[<span class="string">&quot;pitch&quot;</span>]</span><br><span class="line">                    imu_msg.roll = imu_data[<span class="string">&quot;roll&quot;</span>]</span><br><span class="line">                    imu_msg.yaw = imu_data[<span class="string">&quot;yaw&quot;</span>]</span><br><span class="line">                    imu_pub.publish(imu_msg)</span><br><span class="line">                    rospy.loginfo(<span class="string">&quot;pitch:%.2f, roll:%.2f, yaw:%.2f&quot;</span>, imu_msg.pitch, imu_msg.roll, imu_msg.yaw)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;Failed to open port&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>python文件赋予权限并添加到<code>CmakeList.txt</code></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">catkin_install_python(PROGRAMS</span><br><span class="line">  scripts/ros_pyserial_pub.py</span><br><span class="line">  DESTINATION <span class="variable">$&#123;CATKIN_PACKAGE_BIN_DESTINATION&#125;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>连接stm32</p>
<p>赋予串口权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 /dev/ttyUSB0 </span><br></pre></td></tr></table></figure>
<p>运行发布文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">roscore</span><br><span class="line">source ./devel/setup.bash </span><br><span class="line">rosrun hello_vscode ros_pyserial_pub.py </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/86bffc2885d206543e4b116063e68ac6.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/86bffc2885d206543e4b116063e68ac6.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230820212719619"></p>
<h3 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h3><p>查看话题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rostopic list</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/imu</span><br><span class="line">/rosout</span><br><span class="line">/rosout_agg</span><br></pre></td></tr></table></figure>
<p>订阅话题 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rostopic echo /imu</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/0bfc5a48cfb6f8752e1812ae70cb72ba.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/0bfc5a48cfb6f8752e1812ae70cb72ba.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230820213032692"></p>
<p><strong>python实现</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#  -*-coding:utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> hello_vscode.msg <span class="keyword">import</span> Imu</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doImu</span>(<span class="params">imu_msg</span>):</span></span><br><span class="line">    rospy.loginfo(<span class="string">&quot;--------------------------&quot;</span>)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Pitch: %.4f&quot;</span>, imu_msg.pitch)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Roll: %.4f&quot;</span>, imu_msg.roll)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Yaw: %.4f&quot;</span>, imu_msg.yaw)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    rospy.init_node(<span class="string">&quot;imu_sub&quot;</span>)</span><br><span class="line">    sub = rospy.Subscriber(<span class="string">&quot;imu&quot;</span>, Imu, doImu, queue_size=<span class="number">10</span>)</span><br><span class="line">    rospy.spin()</span><br></pre></td></tr></table></figure>
<p>运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roscore</span><br><span class="line"><span class="built_in">source</span> ./devel/setup.bash </span><br><span class="line">rosrun hello_vscode ros_pyserial_sub.py </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ab33260f197011fad1dd64ad828e06c2.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ab33260f197011fad1dd64ad828e06c2.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230820213208132"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rqt_graph</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7129a1096e8c505c19e30cbe3d73fe13.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7129a1096e8c505c19e30cbe3d73fe13.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230820213251279"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS2显示urdf模型中No transform from [XX_Link] to [base_link]</title>
    <url>/2023/03/31/ROS2%E6%98%BE%E7%A4%BAurdf%E6%A8%A1%E5%9E%8B%E4%B8%ADNo%20transform%20from%20%5BXX_Link%5D%20to%20%5Bbase_link%5D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS2显示urdf模型中No-transform-from-XX-Link-to-base-link"><a href="#ROS2显示urdf模型中No-transform-from-XX-Link-to-base-link" class="headerlink" title="ROS2显示urdf模型中No transform from [XX_Link] to [base_link]"></a>ROS2显示urdf模型中No transform from [XX_Link] to [base_link]</h1><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b9c9a6b40ba61c7e97d14a5b156eabb3.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b9c9a6b40ba61c7e97d14a5b156eabb3.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230331221601858"></p>
<p>该错误中关节<code>joint</code>为<code>fixed</code>可以正常显示，而其他<code>joint</code>为<code>cotinuous</code>,都显示无法关联到<code>base_link</code>，当我尝试把所有joint改为fixed时可以显示正常，但这并不是正确的解决办法。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>原因是我在拉launch.py文件中未添加<code>joint_state_publisher</code>节点,导致旋转关节无法关联</p>
<p><code>display_launch.py</code></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> launch <span class="keyword">import</span> LaunchDescription</span><br><span class="line"><span class="keyword">from</span> launch_ros.actions <span class="keyword">import</span> Node</span><br><span class="line"><span class="keyword">from</span> launch.substitutions <span class="keyword">import</span> Command</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ament_index_python.packages <span class="keyword">import</span> get_package_share_directory</span><br><span class="line"><span class="keyword">from</span> launch_ros.parameter_descriptions <span class="keyword">import</span> ParameterValue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_launch_description</span>():</span></span><br><span class="line">    p_value = ParameterValue(Command([<span class="string">&quot;xacro &quot;</span>, get_package_share_directory(<span class="string">&quot;cpp06_urdf&quot;</span>) + <span class="string">&quot;/urdf/urdf/ros_car.urdf&quot;</span>]))</span><br><span class="line">    robot_state_pub = Node(</span><br><span class="line">        package=<span class="string">&quot;robot_state_publisher&quot;</span>,</span><br><span class="line">        executable=<span class="string">&quot;robot_state_publisher&quot;</span>,</span><br><span class="line">        parameters=[&#123;<span class="string">&quot;robot_description&quot;</span>:p_value&#125;]</span><br><span class="line">    )</span><br><span class="line">    rviz2 = Node(</span><br><span class="line">        package=<span class="string">&quot;rviz2&quot;</span>, </span><br><span class="line">        executable=<span class="string">&quot;rviz2&quot;</span>,</span><br><span class="line">        arguments=[<span class="string">&quot;-d&quot;</span>, get_package_share_directory(<span class="string">&quot;cpp06_urdf&quot;</span>)+<span class="string">&quot;/rviz/ros_car.urdf.rviz&quot;</span>])</span><br><span class="line">    <span class="keyword">return</span> LaunchDescription([model, robot_state_pub, rviz2])</span><br></pre></td></tr></table></figure>
<p>添加<code>joint_state_publisher</code>节点</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">joint_state_pub = Node(</span><br><span class="line">    package=<span class="string">&quot;joint_state_publisher&quot;</span>, </span><br><span class="line">    executable=<span class="string">&quot;joint_state_publisher&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> LaunchDescription([model, robot_state_pub,joint_state_pub, rviz2])</span><br></pre></td></tr></table></figure>
<p>重新编译并运行<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">colcon build --packages-select cpp06_urdf</span><br><span class="line">. install/setup.bash</span><br><span class="line">ros2 launch cpp06_urdf display_launch.py </span><br></pre></td></tr></table></figure></p>
<p>显示正常</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/2aacc9744ea6567c867d66202ccdbda7.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/2aacc9744ea6567c867d66202ccdbda7.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230331222508142"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS中使用Kinect_v2</title>
    <url>/2023/07/27/ROS%E4%B8%AD%E4%BD%BF%E7%94%A8Kinect-v2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ROS中使用Kinect-v2"><a href="#ROS中使用Kinect-v2" class="headerlink" title="ROS中使用Kinect v2"></a>ROS中使用Kinect v2</h1><h2 id="Kinect-v2-简介"><a href="#Kinect-v2-简介" class="headerlink" title="Kinect v2 简介"></a>Kinect v2 简介</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/2e24e38dafd115d96a5098b55e35c473.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/2e24e38dafd115d96a5098b55e35c473.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p>Kinect v2是微软公司推出的第二代Kinect<strong>深度摄像头</strong>，也称为Kinect for Xbox One或Kinect for Windows v2。它是Kinect系列产品的升级版本，于2013年首次发布。Kinect v2采用了一系列先进的传感器和技术，使其能够实现高度准确的人体识别和动作追踪，以及强大的深度感知功能。</p>
<p>以下是Kinect v2的一些主要特点和功能：</p>
<ol>
<li><p><strong>深度感知技术：</strong> Kinect v2配备了一台深度传感器，能够实时获取场景中的深度信息。通过红外光和红外相机，Kinect v2能够对物体进行高精度的深度感知，实现人体骨架追踪、手势识别等功能。</p>
</li>
<li><p><strong>高清RGB摄像头：</strong> Kinect v2还配备了高清RGB彩色摄像头，能够捕捉清晰的彩色图像，用于人脸识别、图像识别等应用。</p>
</li>
<li><p><strong>多阵列麦克风：</strong> Kinect v2内置了多个麦克风阵列，能够实现声源定位和语音识别功能。用户可以通过语音与Kinect v2进行交互，进行语音控制等操作。</p>
</li>
<li><p><strong>广阔的视野和大范围追踪：</strong> Kinect v2具有广阔的视野和大范围的追踪能力，可以同时追踪多个人体骨架和物体，适用于多人游戏和互动应用。</p>
</li>
<li><p><strong>SDK支持：</strong> 微软提供了Kinect for Windows软件开发工具包（SDK），使开发者能够轻松利用Kinect v2的功能进行软件开发和应用创作。</p>
</li>
<li><p><strong>游戏和虚拟现实应用：</strong> Kinect v2最初是为Xbox One游戏平台设计的，可以用于增强游戏体验。同时，它也被广泛应用于虚拟现实、体感互动游戏、人体姿态分析、医疗康复等领域。</p>
</li>
</ol>
<p>总体而言，Kinect v2是一款功能强大的<strong>深度摄像头</strong>，具有优秀的深度感知和人体追踪能力，为开发者和应用创作者提供了丰富的开发和创作空间，广泛应用于游戏、虚拟现实、体感互动、医疗等领域。</p>
<h2 id="Kinect-v2-使用"><a href="#Kinect-v2-使用" class="headerlink" title="Kinect v2 使用"></a>Kinect v2 使用</h2><p>windows下使用，参考文章：<a href="https://zhuanlan.zhihu.com/p/420025435?utm_id=0">Kinect for Windows V2开发教程</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c828f83648cb2c7413397b5085de64fe.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c828f83648cb2c7413397b5085de64fe.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724100604951"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/9dcacea656cb7b23e1b7c7a92585c903.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/9dcacea656cb7b23e1b7c7a92585c903.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724100620597"></p>
<p>ROS下使用，参考文章:<a href="https://blog.csdn.net/qq_34935373/article/details/121424754">Kinect V2 在ros-noetic使用（ubuntu20.04）</a></p>
<p>最后在工作空间下，运行以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch kinect2_bridge kinect2_bridge.launch</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/654f48f4313f225adc009f340b2a6569.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/654f48f4313f225adc009f340b2a6569.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724100908055"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rosrun kinect2_viewer kinect2_viewer   </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e38c39f9a73857977fe454f545e6369b.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e38c39f9a73857977fe454f545e6369b.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724100952674"></p>
<h2 id="相机话题"><a href="#相机话题" class="headerlink" title="相机话题"></a>相机话题</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/62df3f54fb202a215fbbbb51b0eeb60d.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/62df3f54fb202a215fbbbb51b0eeb60d.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724101103548"></p>
<p>可利用<code>rqt_image_view</code>查看</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8b0188a6e46d05a2221f42c2218deaa5.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8b0188a6e46d05a2221f42c2218deaa5.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724101209611"></p>
<h2 id="RVIZ显示图像"><a href="#RVIZ显示图像" class="headerlink" title="RVIZ显示图像"></a>RVIZ显示图像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">roslaunch kinect2_bridge kinect2_bridge.launch publish_tf:=true</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rviz</span><br></pre></td></tr></table></figure>
<p>Fixed Frame 为 kinect2_link</p>
<p>添加PointCloud2 </p>
<p>topic 为 /kinect2/sd/points</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b9d0bfcee23875906a438dd30ef2f9dd.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b9d0bfcee23875906a438dd30ef2f9dd.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230724164508582"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS安装:rosdep初始化失败</title>
    <url>/2021/12/04/ROS%E5%AE%89%E8%A3%85-rosdep%E5%88%9D%E5%A7%8B%E5%8C%96%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ROS版本: Melodic</p>
<p><a href="https://blog.csdn.net/weixin_38650871/article/details/120781651">解决方法</a></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS中使用RealSense-D435</title>
    <url>/2023/07/29/ROS%E4%B8%AD%E4%BD%BF%E7%94%A8RealSense-D435/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p>
<h2 id="D435简介"><a href="#D435简介" class="headerlink" title="D435简介"></a>D435简介</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b36ee431227cca80f0cc3a91b6226180.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b36ee431227cca80f0cc3a91b6226180.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230728200550446"></p>
<p>Intel RealSense D435是Intel推出的一款结合RGB和深度摄像的立体视觉摄像头,具有以下主要特点:</p>
<ol>
<li><p>使用双摄像头和红外投射器实现立体视觉采集。</p>
</li>
<li><p>提供频率可达90Hz的VGA分辨率(640x480)深度图像。</p>
</li>
<li><p>具有2个720p RGB摄像头,提供1920x1080分辨率彩色视频流。</p>
</li>
<li><p>使用全局快门同步RGB图像和深度图像。 </p>
</li>
<li><p>内置6轴IMU运动跟踪模块。</p>
</li>
<li><p>支持近距离检测,最小检测距离约0.25米。</p>
</li>
<li><p>提供硬件级图像流同步和时间戳。</p>
</li>
<li><p>支持USB 3.0接口传输高速率图像流。</p>
</li>
<li><p>提供SDK开发包,兼容ROS、OpenCV等主流框架。</p>
</li>
<li><p>小巧轻便的模块化设计。</p>
</li>
</ol>
<p>D435采用了活体立体视觉技术,具有准确、高帧率的深度映射能力,可广泛应用于机器人定位与导航、物体识别、人机交互等计算机视觉任务中。</p>
<h2 id="RealSense的SDK2-0安装"><a href="#RealSense的SDK2-0安装" class="headerlink" title="RealSense的SDK2.0安装"></a>RealSense的SDK2.0安装</h2><h3 id="方法1：直接利用安装源安装"><a href="#方法1：直接利用安装源安装" class="headerlink" title="方法1：直接利用安装源安装"></a>方法1：直接利用安装源安装</h3><h4 id="注册服务器公匙"><a href="#注册服务器公匙" class="headerlink" title="注册服务器公匙"></a>注册服务器公匙</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE</span><br></pre></td></tr></table></figure>
<h4 id="将服务器添加到存储库列表"><a href="#将服务器添加到存储库列表" class="headerlink" title="将服务器添加到存储库列表"></a>将服务器添加到存储库列表</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository <span class="string">&quot;deb https://librealsense.intel.com/Debian/apt-repo <span class="subst">$(lsb_release -cs)</span> main&quot;</span> -u</span><br></pre></td></tr></table></figure>
<h4 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h4><p>基础</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install librealsense2-dkms</span><br><span class="line">sudo apt-get install librealsense2-utils</span><br></pre></td></tr></table></figure>
<p>可选</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install librealsense2-dev</span><br><span class="line">sudo apt-get install librealsense2-dbg</span><br></pre></td></tr></table></figure>
<p>不过这个方法只能下在最新版本，由于ros2的适配，该版本的realsense-ros对ros2匹配，因此在下载时建议使用方法2下载</p>
<h3 id="方法2：利用源码安装"><a href="#方法2：利用源码安装" class="headerlink" title="方法2：利用源码安装"></a>方法2：利用源码安装</h3><h4 id="GitHub下载librealsense"><a href="#GitHub下载librealsense" class="headerlink" title="GitHub下载librealsense"></a>GitHub下载librealsense</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/1ac23769b094a761bdfb57d074518079.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/1ac23769b094a761bdfb57d074518079.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729172838240"></p>
<p>这里以v2.50.0版本为例</p>
<h4 id="安装编译依赖"><a href="#安装编译依赖" class="headerlink" title="安装编译依赖"></a>安装编译依赖</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev bison flex</span><br><span class="line">sudo apt-get install libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev libelf-dev elfutils</span><br></pre></td></tr></table></figure>
<h4 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> librealsense-2.50.0/</span><br><span class="line">./scripts/setup_udev_rules.sh</span><br></pre></td></tr></table></figure>
<h4 id="cmake编译"><a href="#cmake编译" class="headerlink" title="cmake编译"></a>cmake编译</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ../ -DBUILD_EXAMPLES=<span class="literal">true</span></span><br><span class="line">make -j8 <span class="comment">#j8的意思是根据自己处理器内核数量来加快编译</span></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>重新连接 Intel Realsense 深度摄像机并运行: <code>realsense-viewer</code> 以验证安装</p>
<h3 id="软件显示"><a href="#软件显示" class="headerlink" title="软件显示"></a>软件显示</h3><p>连接d435与电脑</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">realsense-viewer </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e84889d9b5fcba854bb7baec01e31a11.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e84889d9b5fcba854bb7baec01e31a11.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729190530066"></p>
<p>左侧的Stereo Module可以开启深度图显示，RGB Module可以显示RGB影像</p>
<h2 id="ROS接口安装"><a href="#ROS接口安装" class="headerlink" title="ROS接口安装"></a>ROS接口安装</h2><p>由于ros1的维护，直接安装会以最新版本下载，其适配ros2，导致编译失败，所以在安装时要选择与之ros相对应的tag</p>
<p>以ros noetic为例</p>
<p>安装<code>realsense-ros</code>: <a href="https://gitcode.net/mirrors/intelrealsense/realsense-ros?utm_source=csdn_github_accelerator">https://gitcode.net/mirrors/intelrealsense/realsense-ros?utm_source=csdn_github_accelerator</a></p>
<p>安装<code>ddynamic_reconfigure</code>:<a href="https://gitcode.net/mirrors/pal-robotics/ddynamic_reconfigure?utm_source=csdn_github_accelerator">https://gitcode.net/mirrors/pal-robotics/ddynamic_reconfigure?utm_source=csdn_github_accelerator</a></p>
<p>下载其压缩包，然后解压缩到<code>~/catkin_ws/src</code>目录下</p>
<p>编译</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">catkin_make</span><br></pre></td></tr></table></figure>
<h3 id="启动节点"><a href="#启动节点" class="headerlink" title="启动节点"></a>启动节点</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch realsense2_camera rs_camera.launch</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/65575843aea5923f64866e1fb6cf726a.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/65575843aea5923f64866e1fb6cf726a.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729191329877"></p>
<p>出现<code>RealSense Node Is Up!</code>证明节点启动成功</p>
<h3 id="查看话题"><a href="#查看话题" class="headerlink" title="查看话题"></a>查看话题</h3><p><code>rostopic list</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ce46f64c859d0beee6003b54c3698198.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ce46f64c859d0beee6003b54c3698198.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729191513483"></p>
<p><code>rqt_image_view</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7368d098a59737f1bbb67cce1ff6a13b.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/7368d098a59737f1bbb67cce1ff6a13b.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729191627233"></p>
<h3 id="rviz显示点云"><a href="#rviz显示点云" class="headerlink" title="rviz显示点云"></a>rviz显示点云</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch realsense2_camera demo_pointcloud.launch </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/40c7bdd70af91908812c0687b6cf1686.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/40c7bdd70af91908812c0687b6cf1686.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729192410943"></p>
<h2 id="Python接口安装"><a href="#Python接口安装" class="headerlink" title="Python接口安装"></a>Python接口安装</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install pyrealsense2</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyrealsense2 <span class="keyword">as</span> rs</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># Configure depth and color streams</span></span><br><span class="line">    pipeline = rs.pipeline()</span><br><span class="line">    config = rs.config()</span><br><span class="line">    config.enable_stream(rs.stream.depth, <span class="number">640</span>, <span class="number">480</span>, rs.<span class="built_in">format</span>.z16, <span class="number">30</span>)</span><br><span class="line">    config.enable_stream(rs.stream.color, <span class="number">640</span>, <span class="number">480</span>, rs.<span class="built_in">format</span>.bgr8, <span class="number">30</span>)</span><br><span class="line">    <span class="comment"># Start streaming</span></span><br><span class="line">    pipeline.start(config)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># Wait for a coherent pair of frames: depth and color</span></span><br><span class="line">            frames = pipeline.wait_for_frames()</span><br><span class="line">            depth_frame = frames.get_depth_frame()</span><br><span class="line">            color_frame = frames.get_color_frame()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> depth_frame <span class="keyword">or</span> <span class="keyword">not</span> color_frame:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># Convert images to numpy arrays</span></span><br><span class="line"> </span><br><span class="line">            depth_image = np.asanyarray(depth_frame.get_data())</span><br><span class="line"> </span><br><span class="line">            color_image = np.asanyarray(color_frame.get_data())</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># Apply colormap on depth image (image must be converted to 8-bit per pixel first)</span></span><br><span class="line">            depth_colormap = cv2.applyColorMap(cv2.convertScaleAbs(depth_image, alpha=<span class="number">0.03</span>), cv2.COLORMAP_JET)</span><br><span class="line">            <span class="comment"># Stack both images horizontally</span></span><br><span class="line">            images = np.hstack((color_image, depth_colormap))</span><br><span class="line">            <span class="comment"># Show images</span></span><br><span class="line">            cv2.namedWindow(<span class="string">&#x27;RealSense&#x27;</span>, cv2.WINDOW_AUTOSIZE)</span><br><span class="line">            cv2.imshow(<span class="string">&#x27;RealSense&#x27;</span>, images)</span><br><span class="line">            key = cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># Press esc or &#x27;q&#x27; to close the image window</span></span><br><span class="line">            <span class="keyword">if</span> key &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>) <span class="keyword">or</span> key == <span class="number">27</span>:</span><br><span class="line">                cv2.destroyAllWindows()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># Stop streaming</span></span><br><span class="line">        pipeline.stop()</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/557334b87457ab4ed070386f5eaedaa8.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/557334b87457ab4ed070386f5eaedaa8.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230729192950314"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS运行Gazebo遇到的问题</title>
    <url>/2021/12/04/ROS%E8%BF%90%E8%A1%8CGazebo%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ rosrun gazebo_ros gazebo</span><br></pre></td></tr></table></figure>
<p>遇到下列错误</p>
<h2 id="错误：-Err-REST-cc-205-Error-in-REST-request"><a href="#错误：-Err-REST-cc-205-Error-in-REST-request" class="headerlink" title="错误：[Err] [REST.cc:205] Error in REST request"></a>错误：[Err] [REST.cc:205] Error in REST request</h2><p><img src="REST.png" class="lazyload placeholder" data-srcset="REST.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>1.修改<code>~/.ignition/fuel/config.yaml</code>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo gedit ~/.ignition/fuel/config.yaml</span><br></pre></td></tr></table></figure>
<p>2.</p>
<p>注释 <code>url : https://api.ignitionfuel.org</code><br>添加 <code>url: https://api.ignitionrobotics.org</code></p>
<p><img src="config_yml.png" class="lazyload placeholder" data-srcset="config_yml.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p>再重新启动Gazebo即可。</p>
<h2 id="错误：VMware-vmw-ioctl-command-error-无效的参数"><a href="#错误：VMware-vmw-ioctl-command-error-无效的参数" class="headerlink" title="错误：VMware: vmw_ioctl_command error 无效的参数"></a>错误：VMware: vmw_ioctl_command error 无效的参数</h2><p><img src="无效参数.png" class="lazyload placeholder" data-srcset="无效参数.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在终端设置环境变量为0:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ export SVGA_VGPU10=0</span><br></pre></td></tr></table></figure>
<p>长久方法：</p>
<p>在~/.bashrc文件写入<code>export SVGA_VGPU10=0</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ echo &quot;export SVGA_VGPU10=0&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>再重新启动Gazebo即可。</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>RaspberryPi的初次使用</title>
    <url>/2022/10/01/RaspberryPi%E7%9A%84%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="系统烧录"><a href="#系统烧录" class="headerlink" title="系统烧录"></a>系统烧录</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><p>型号 Raspberry 4B</p>
<p>SD卡</p>
<p>读卡器</p>
<h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p><a href="https://www.raspberrypi.com/software/">官网</a></p>
<p>官方烧录软件<strong>Imagre</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220928171454492.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220928171454492.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220928171454492"></p>
<p>然后选择合适的操作系统和SD卡进行烧录</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220928171915977.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220928171915977.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220928171915977"></p>
<p>等待烧录成功即可</p>
<h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><h3 id="配置wifi"><a href="#配置wifi" class="headerlink" title="配置wifi"></a>配置wifi</h3><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><p>新建文件名称<code>wpa_supplicant</code></p>
<p>网上有添加<code>.conf</code>后缀虽然会读进配置文件，但是wifi连不上出错</p>
<p>内容为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line"> </span><br><span class="line">network=&#123;  </span><br><span class="line">     ssid=&quot;RealmeGT&quot;  </span><br><span class="line">     psk=&quot;ych420420&quot;</span><br><span class="line">     priority=10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中</p>
<ul>
<li>ssid为wifi名称</li>
<li>psk为wifi密码</li>
<li>priority为优先级数值越大优先级越高</li>
</ul>
<p>然后再新建空白文件为<code>ssh</code>无后缀</p>
<h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>使用官方烧录软件时，可以进行配置wifi</p>
<p>烧录之前点击软件右下角高级设置选项</p>
<p>可以配置ssh、用户名及密码、wifi</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001193115720.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001193115720.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001193115720"></p>
<p>wifi可以填写电脑热点，方便查看ip</p>
<h3 id="putty远程连接（命令行）"><a href="#putty远程连接（命令行）" class="headerlink" title="putty远程连接（命令行）"></a>putty远程连接（命令行）</h3><p>打开putty软件，填写ip地址</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001193316513.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001193316513.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001193316513"></p>
<p>输入设置的用户名及密码即可连接成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001170649090.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001170649090.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001170649090"></p>
<p>通过命令行打开vnc服务器</p>
<p>vnc viewer显示cannot currently show the desktop</p>
<p>解决调整分辨率</p>
<p>用putty连接用命令输入</p>
<p><code>sudo raspi-config</code></p>
<p>Display-&gt;Resolutions设置适合自身电脑的分辨率即可</p>
<h3 id="VNC远程连接（显示桌面）"><a href="#VNC远程连接（显示桌面）" class="headerlink" title="VNC远程连接（显示桌面）"></a>VNC远程连接（显示桌面）</h3><p>通过上述putty连接输入命令</p>
<p><code>sudo raspi-config</code></p>
<p>开启vnc</p>
<p><strong>Interfacing Options-&gt;VNC</strong></p>
<p>打开VNC viewer填写ip地址进行连接</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001173235516.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001173235516.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001173235516"></p>
<p>将树莓派设置VNC配置自启</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001175018000.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001175018000.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001175018000"></p>
<h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><ul>
<li>U盘</li>
<li>VNC传输</li>
<li>FTP文件传输</li>
</ul>
<h3 id="VNC传输"><a href="#VNC传输" class="headerlink" title="VNC传输"></a>VNC传输</h3><p>电脑-&gt;树莓派</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001175632326.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001175632326.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001175632326"></p>
<p>树莓派-&gt;电脑</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001174352953.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001174352953.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001174352953"></p>
<h2 id="树莓派的编译环境"><a href="#树莓派的编译环境" class="headerlink" title="树莓派的编译环境"></a>树莓派的编译环境</h2><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001180307738.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001180307738.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001180307738"></p>
<p>下载命令</p>
<p><strong>python2：</strong></p>
<p><code>pip install xxx</code></p>
<p><strong>python3:</strong></p>
<p><code>pip3 install xxx</code></p>
<h3 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h3><p>对于树莓派的C编译环境，最重要的莫过于安装WiringPi库。</p>
<p>选择要保存的目录</p>
<p><code>cd /tmp</code></p>
<p>下载dev包</p>
<p><code>wget https://project-downloads.drogon.net/wiringpi-latest.deb</code></p>
<p>安装dev包</p>
<p><code>sudo dpkg -i wiringpi-latest.deb</code></p>
<p>使用命令<code>gpio -v</code>或<code>gpio readall</code>查看是否安装成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001182415497.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001182415497.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001182415497"></p>
<h2 id="vi编辑器的使用"><a href="#vi编辑器的使用" class="headerlink" title="vi编辑器的使用"></a>vi编辑器的使用</h2><p><strong>3个模式</strong></p>
<ul>
<li>插入模式(Insert mode):在此模式下可以输入字符，按ESC将回到命令模式。</li>
<li>底行模式(Last line mode):可以保存文件、退出vi、设置vi、查找等功能</li>
<li>命令模式(Command mode):可以移动光标、删除字符等。</li>
</ul>
<p>常用命令</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001183915969.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221001183915969.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221001183915969"></p>
<p>编辑文件</p>
<p><code>vi xxx</code></p>
<p>查看文件</p>
<p><code>cat xxx</code></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMX配置HAL库输入捕获</title>
    <url>/2023/12/25/STM32CubeMX%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32CubeMX配置HAL库输入捕获"><a href="#STM32CubeMX配置HAL库输入捕获" class="headerlink" title="STM32CubeMX配置HAL库输入捕获"></a>STM32CubeMX配置HAL库输入捕获</h1><p>STM32的输入捕获功能可以用来测量脉冲宽度或者频率。其工作原理是，通过检测TIMx_CHx上的边沿信号，在边沿信号发生跳变（比如</p>
<p>上升沿/下降沿）的时候，将当前定时器的值（TIMx_CNT）存放到对应的通道的捕获/比较寄存器（TIMx_CCRx）里面，完成一次捕获。</p>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>STM32F407IGT6</li>
<li>Stlink</li>
<li>USB-TTL</li>
</ul>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul>
<li>STM32CubeMX</li>
<li>CLion</li>
</ul>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul>
<li>RCC-&gt;High Speed Clock (HSE)-&gt; Crystal/Ceramic Resonator</li>
<li>SYS-&gt;Debug-&gt;Serial Wire</li>
<li><p>Clock Configuration -&gt; HCLK-&gt;84</p>
</li>
<li><p>设置PWM-&gt;TIM3</p>
</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231222170505554.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231222170505554.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231222170505554"></p>
<ul>
<li>设置输入捕获-&gt;TIM2  打开NVIC中断</li>
</ul>
<p>默认输入捕获通道可以设置<strong>低电平</strong>，上升沿触发</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231222170712990.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231222170712990.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231222170712990"></p>
<h2 id="编写程序"><a href="#编写程序" class="headerlink" title="编写程序"></a>编写程序</h2><p>初始化变量(全局)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">uint32_t</span> capture_left_Buf[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;   <span class="comment">//左电机存放计数值</span></span><br><span class="line"><span class="keyword">uint32_t</span> capture_right_Buf[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;   <span class="comment">//右存放计数值</span></span><br><span class="line"><span class="keyword">uint8_t</span> capture_left_Cnt = <span class="number">0</span>;    <span class="comment">//左电机状态标志位</span></span><br><span class="line"><span class="keyword">uint8_t</span> capture_right_Cnt = <span class="number">0</span>;   <span class="comment">//右电机状态标志位</span></span><br><span class="line"><span class="keyword">uint32_t</span> left_time, right_time;   <span class="comment">//周期时间</span></span><br><span class="line"><span class="keyword">uint32_t</span> left_speed, right_speed; <span class="comment">//电机速度</span></span><br></pre></td></tr></table></figure>
<p>中断服务函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_TIM_IC_CaptureCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span><span class="comment">// 捕获中断发生时执行</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim-&gt;Instance == TIM2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(htim-&gt;Channel == HAL_TIM_ACTIVE_CHANNEL_1)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(capture_left_Cnt)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    capture_left_Buf[<span class="number">0</span>] = HAL_TIM_ReadCapturedValue(&amp;htim2,TIM_CHANNEL_1);<span class="comment">//获取当前的捕获值</span></span><br><span class="line"><span class="comment">//                __HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim2,TIM_CHANNEL_1,TIM_INPUTCHANNELPOLARITY_RISING);  //设置为下降沿捕获</span></span><br><span class="line">                    capture_left_Cnt++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    capture_left_Buf[<span class="number">1</span>] = HAL_TIM_ReadCapturedValue(&amp;htim2,TIM_CHANNEL_1);<span class="comment">//获取当前的捕获值.</span></span><br><span class="line"><span class="comment">//                capture_Num = capture_flag;</span></span><br><span class="line"><span class="comment">//                capture_flag = 0;</span></span><br><span class="line">                    HAL_TIM_IC_Stop_IT(&amp;htim2,TIM_CHANNEL_1); <span class="comment">//停止捕获   或者: __HAL_TIM_DISABLE(&amp;htim2);</span></span><br><span class="line">                    capture_left_Cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(htim-&gt;Channel == HAL_TIM_ACTIVE_CHANNEL_2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(capture_right_Cnt)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    capture_right_Buf[<span class="number">0</span>] = HAL_TIM_ReadCapturedValue(&amp;htim2,TIM_CHANNEL_2);<span class="comment">//获取当前的捕获值</span></span><br><span class="line">                    capture_right_Cnt++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    capture_right_Buf[<span class="number">1</span>] = HAL_TIM_ReadCapturedValue(&amp;htim2,TIM_CHANNEL_2);<span class="comment">//获取当前的捕获值.</span></span><br><span class="line">                    HAL_TIM_IC_Stop_IT(&amp;htim2,TIM_CHANNEL_2); <span class="comment">//停止捕获   或者: __HAL_TIM_DISABLE(&amp;htim2);</span></span><br><span class="line">                    capture_right_Cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_1);</span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_2);</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim2,TIM_CHANNEL_1);  <span class="comment">//开启TIM2的捕获通道1</span></span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim2,TIM_CHANNEL_2);  <span class="comment">//开启TIM2的捕获通道2</span></span><br><span class="line">__HAL_TIM_ENABLE_IT(&amp;htim2,TIM_IT_UPDATE);  <span class="comment">//使能更新中断</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Infinite loop */</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line"></span><br><span class="line">    Load_PWM(<span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line">    <span class="keyword">switch</span> (capture_left_Cnt)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            capture_left_Cnt++;</span><br><span class="line">            __HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim2, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);</span><br><span class="line">            HAL_TIM_IC_Start_IT(&amp;htim2, TIM_CHANNEL_1);	<span class="comment">//启动输入捕获       或者: __HAL_TIM_ENABLE(&amp;htim2);</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            left_time = capture_left_Buf[<span class="number">1</span>]- capture_left_Buf[<span class="number">0</span>];    <span class="comment">//周期</span></span><br><span class="line">            capture_left_Cnt = <span class="number">0</span>;  <span class="comment">//清空标志位</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (capture_right_Cnt)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            capture_right_Cnt++;</span><br><span class="line">            __HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim2, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_RISING);</span><br><span class="line">            HAL_TIM_IC_Start_IT(&amp;htim2, TIM_CHANNEL_2);	<span class="comment">//启动输入捕获       或者: __HAL_TIM_ENABLE(&amp;htim2);</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            right_time = capture_right_Buf[<span class="number">1</span>]- capture_right_Buf[<span class="number">0</span>];    <span class="comment">//周期</span></span><br><span class="line">            capture_right_Cnt = <span class="number">0</span>;  <span class="comment">//清空标志位</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&#123;\&quot;left_time\&quot;:%d,\&quot;right_time\&quot;:%d&#125; \r\n&quot;</span>,left_time, right_time);</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>用杜邦线连接PA6-&gt;PA0     PA7-&gt;PA1</p>
<p>PWM脉冲 84M/168/1000 = 500Hz  1/500Hz = 20ms = 200us</p>
<p>(之前的截图，配置都一样)</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231222190002435.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231222190002435.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231222190002435"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32+esp8266+MQTT服务器通信</title>
    <url>/2022/07/25/STM32-esp8266-MQTT%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a><strong>硬件</strong></h2><p>STM32F103C8T6</p>
<p>ESP-01S</p>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a><strong>软件</strong></h2><ul>
<li>SYS-&gt;Debug-&gt;Serial Wire</li>
<li>RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</li>
<li>PC13-&gt;GPIO_Out</li>
<li>USART1-&gt;Mode-&gt;Asynchronous ,参数默认</li>
<li>USART2&gt;Mode-&gt;Asynchronous ,参数默认</li>
<li>NVIC-&gt;USART2 global interrupt-&gt;Enabled</li>
</ul>
<p>串口1与上位机tongxin</p>
<p>串口2与服务器通信</p>
<h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a><strong>服务器</strong></h2><p>本次使用的MQTT服务器，有钱的朋友们也可以自行去阿里云购买一个自己的云服务器。</p>
<p><a href="https://www.emqx.com/zh">EMQX</a>。EMQX Cloud 是 EMQ 公司推出的一款面向物联网领域的 MQTT 消息中间件产品。作为全球首个全托管的 MQTT 5.0 公有云服务，EMQX Cloud 提供了一站式运维代管、独有隔离环境的 MQTT 消息服务。在万物互联的时代，EMQX Cloud 可以帮助您快速构建面向物联网领域的行业应用，轻松实现物联网数据的采集、传输、计算和持久化。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726172718590.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726172718590.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726172718590"></p>
<p>此网站提供了一个免费在线MQTT 5服务器</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Broker</th>
<th style="text-align:center">broker-cn.emqx.io</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">TCP端口</td>
<td style="text-align:center">1883</td>
</tr>
<tr>
<td style="text-align:center">Websocket端口</td>
<td style="text-align:center">8083</td>
</tr>
<tr>
<td style="text-align:center">TCP/TLS端口</td>
<td style="text-align:center">8883</td>
</tr>
<tr>
<td style="text-align:center">Websocket/TLS端口</td>
<td style="text-align:center">8084</td>
</tr>
<tr>
<td style="text-align:center">CA证书文件</td>
<td style="text-align:center"><a href="https://assets.emqx.com/data/broker.emqx.io-ca.crt">broker.emqx.io-ca.crt</a></td>
</tr>
</tbody>
</table>
</div>
<h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h2><p>程序中主要的文件有</p>
<ul>
<li><code>esp8266.c</code> <code>esp8266.h</code></li>
<li><code>MqttKit.c</code> <code>MqttKit.h</code></li>
<li><code>onenet.c</code> <code>onenet.h</code></li>
<li><code>cJSON.c</code> <code>cJSON.h</code></li>
</ul>
<p>将上述文件分别添加到Inc和Src中，可能会遇到以下情况</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220724223541200.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220724223541200.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220724223541200"></p>
<p>这时只要重新加载一下<code>CMakeLists.txt</code></p>
<h3 id="esp8266"><a href="#esp8266" class="headerlink" title="esp8266"></a>esp8266</h3><p>模块使用的是安心可得<a href="https://detail.tmall.com/item.htm?id=620009362403&amp;ali_trackid=2:mm_50570328_39070332_145428725:1658741039_027_83388925&amp;union_lens=lensId:OPT@1658741031@2104f29f_0a54_18234ab8177_bef6@01;recoveryid:201_33.51.111.49_7879720_1658741024976;prepvid:201_33.51.73.70_7879076_1658741030569&amp;spm=4413u.19484427.29996460.8&amp;pvid=100_11.229.191.77_219850_1711658741031127422&amp;scm=null&amp;bxsign=tbk7Iahpn9i2A5MHzJnN9lcVS5433FnuKvCDNfLWDVzdVS8jj8DZ%20Dg%20HWBOTcRr6wJLGAqP%20lVzWp5VxMkpIvJVBOpiqNxEowwdc913O5vt8w=">ESP-01S</a></p>
<p>ESP-01S 是由安信可科技开发的 Wi-Fi 模块，该模块核心处理器ESP8266 在较小尺寸封装中集成了业界领先的 Tensilica L106 超低功耗 32 位微型MCU，带有16位精简模式，主频支持 80 MHz 和 160 MHz，支持 RTOS，集成Wi-Fi MAC/ BB/RF/PA/LNA。ESP-01S Wi-Fi 模块支持标准的 IEEE802.11 b/g/n 协议，完整的TCP/IP 协议栈。用户可以使用该模块为现有的设备添加联网功能，也可以构建独立的网络控制器。</p>
<p><code>esp8266.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __esp_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __esp_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REV_OK    0  <span class="comment">//接收完成标志</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REV_WAIT   1  <span class="comment">//接收未完成标志</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">_Bool</span>        uint1;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>   uint8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>         int8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>  uint16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">short</span>        int16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>    uint32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>             int32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>   <span class="keyword">size_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart_SendString</span><span class="params">(UART_HandleTypeDef *USARTx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *str, <span class="keyword">unsigned</span> <span class="keyword">short</span> len)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UsartPrintf</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">char</span> *fmt,...)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ESP8266_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//esp8266初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ESP8266_Clear</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//清空缓存</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ESP8266_SendData</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *data, <span class="keyword">unsigned</span> <span class="keyword">short</span> len)</span></span>;<span class="comment">//发送数据</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">ESP8266_GetIPD</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> timeOut)</span></span>;<span class="comment">//获取平台返回的数据</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>下面介绍以下几个重要功能函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">************************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：  Usart_SendString</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  函数功能：  串口数据发送</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  入口参数：  USARTx：串口组</span></span><br><span class="line"><span class="comment">*           str：要发送的数据</span></span><br><span class="line"><span class="comment">*           len：数据长度</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  返回参数：  无</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  说明：       </span></span><br><span class="line"><span class="comment">************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart_SendString</span><span class="params">(UART_HandleTypeDef *USARTx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *str, <span class="keyword">unsigned</span> <span class="keyword">short</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">uint16_t</span> j;</span><br><span class="line">   <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len;j++)<span class="comment">//循环发送数据</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">while</span>((USART2-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕</span></span><br><span class="line">      USART2-&gt;DR=*str++;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">************************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：  UsartPrintf</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  函数功能：  格式化打印</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  入口参数：  USARTx：串口组</span></span><br><span class="line"><span class="comment">*           fmt：不定长参</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  返回参数：  无</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  说明：       </span></span><br><span class="line"><span class="comment">************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UsartPrintf</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">char</span> *fmt,...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> printf_TXBUFFERSIZE=<span class="number">1026</span>;</span><br><span class="line">    <span class="keyword">char</span> buffer[printf_TXBUFFERSIZE];</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    va_list arg_ptr;</span><br><span class="line">    va_start(arg_ptr,fmt);</span><br><span class="line">    vsnprintf(buffer,printf_TXBUFFERSIZE+<span class="number">1</span>,fmt,arg_ptr);</span><br><span class="line">    <span class="keyword">while</span>((i&lt;printf_TXBUFFERSIZE)&amp;&amp;buffer[i])</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Transmit(huart,(<span class="keyword">uint8_t</span> *)&amp;buffer[i++],<span class="number">1</span>,<span class="number">0xFFFF</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    va_end(arg_ptr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述两个函数在usart.c中都没有定义，需要自己定义串口数据发送和格式化打印函数。</p>
<p>esp8266初始化函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ESP8266_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   __HAL_UART_ENABLE_IT(&amp;huart2,UART_IT_RXNE);<span class="comment">//使能串口接收中断</span></span><br><span class="line">   ESP8266_Clear();</span><br><span class="line"></span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 0. AT - 测试MCU-8266通讯\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(ESP8266_SendCmd(<span class="string">&quot;AT\r\n&quot;</span>, <span class="string">&quot;OK&quot;</span>))</span><br><span class="line">        HAL_Delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 1. AT+RST - 软复位8266\r\n&quot;</span>);</span><br><span class="line">    ESP8266_SendCmd(<span class="string">&quot;AT+RST\r\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    HAL_Delay(<span class="number">500</span>);</span><br><span class="line">    ESP8266_SendCmd(<span class="string">&quot;AT+CIPCLOSE\r\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    HAL_Delay(<span class="number">500</span>);</span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 2. AT+CWMODE=1,1 - 设置8266工作模式为STA\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(ESP8266_SendCmd(<span class="string">&quot;AT+CWMODE=1\r\n&quot;</span>, <span class="string">&quot;OK&quot;</span>))</span><br><span class="line">        HAL_Delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 3. AT+CWDHCP=1,1 - 使能STA模式下DHCP\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(ESP8266_SendCmd(<span class="string">&quot;AT+CWDHCP=1,1\r\n&quot;</span>, <span class="string">&quot;OK&quot;</span>))</span><br><span class="line">        HAL_Delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 4. AT+CWJAP - 连接WIFI\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(ESP8266_SendCmd(ESP8266_WIFI_INFO, <span class="string">&quot;GOT IP&quot;</span>))</span><br><span class="line">        HAL_Delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 5. AT+CIPSTART - 连接服务器\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(ESP8266_SendCmd(ESP8266_ONENET_INFO, <span class="string">&quot;CONNECT&quot;</span>))</span><br><span class="line">        HAL_Delay(<span class="number">500</span>);</span><br><span class="line">    ESP8266_INIT_OK = <span class="number">1</span>;</span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;&gt; 6. ESP8266 Init OK - ESP8266初始化成功\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过串口1实时打印esp8266的状态，串口2通过esp8266发送指令连接wifi、连接服务器等</p>
<p><code>ESP8266_WIFI_INFO</code>、<code>ESP8266_ONENET_INFO</code>两个宏定义为</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIFI_SSID                  <span class="meta-string">&quot;******&quot;</span>                      <span class="comment">// WIFI的名称 必须用2.4G的wifi不能用5G的，且不能用中文、空格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIFI_PSWD                 <span class="meta-string">&quot;******&quot;</span>             <span class="comment">// WIFI密码</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_HOST                   <span class="meta-string">&quot;broker.emqx.io&quot;</span>         <span class="comment">// MQTT服务器域名或IP</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT                   <span class="meta-string">&quot;1883&quot;</span>                      <span class="comment">// MQTT服务器端口（一般为1883不用改）</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESP8266_WIFI_INFO        <span class="meta-string">&quot;AT+CWJAP=\&quot;&quot;</span> WIFI_SSID <span class="meta-string">&quot;\&quot;,\&quot;&quot;</span> WIFI_PSWD <span class="meta-string">&quot;\&quot;\r\n&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESP8266_ONENET_INFO       <span class="meta-string">&quot;AT+CIPSTART=\&quot;TCP\&quot;,\&quot;&quot;</span> SERVER_HOST <span class="meta-string">&quot;\&quot;,&quot;</span> SERVER_PORT <span class="meta-string">&quot;\r\n&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>在移植过程中只需修改上述宏即可</p>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Includes ------------------------------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private includes ----------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp8266.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;onenet.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *devSubTopic[] = &#123;<span class="string">&quot;/mysmarthome/sub&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> devPubTopic[] = <span class="string">&quot;/mysmarthome/pub&quot;</span>;</span><br><span class="line"><span class="keyword">uint8_t</span> ESP8266_INIT_OK = <span class="number">0</span>;<span class="comment">//esp8266初始化完成标志</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private function prototypes -----------------------------------------------*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemClock_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">/* USER CODE BEGIN PFP */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PFP */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private user code ---------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  The application entry point.</span></span><br><span class="line"><span class="comment">  * @retval int</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> timeCount = <span class="number">0</span>;  <span class="comment">//发送间隔变量</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *dataPtr = <span class="literal">NULL</span>;</span><br><span class="line">  <span class="comment">/* USER CODE END 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* MCU Configuration--------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Configure the system clock */</span></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize all configured peripherals */</span></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  MX_USART2_UART_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">    UsartPrintf(&amp;huart1, <span class="string">&quot;Hardware init OK\r\n&quot;</span>);</span><br><span class="line">    ESP8266_Init();                <span class="comment">//初始化ESP8266</span></span><br><span class="line">    <span class="keyword">while</span>(OneNet_DevLink())</span><br><span class="line">        HAL_Delay(<span class="number">500</span>);<span class="comment">//接入OneNET</span></span><br><span class="line">    OneNet_Subscribe(devSubTopic, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      <span class="keyword">if</span>(++timeCount &gt;= <span class="number">200</span>)                           <span class="comment">//发送间隔5s</span></span><br><span class="line">      &#123;</span><br><span class="line">          UsartPrintf(&amp;huart1, <span class="string">&quot;OneNet_Publish\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">          OneNet_Publish(devPubTopic, <span class="string">&quot;MQTT Publish Test&quot;</span>);</span><br><span class="line"></span><br><span class="line">          timeCount = <span class="number">0</span>;</span><br><span class="line">          ESP8266_Clear();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//数据解析</span></span><br><span class="line">      dataPtr = ESP8266_GetIPD(<span class="number">3</span>);</span><br><span class="line">      <span class="keyword">if</span>(dataPtr != <span class="literal">NULL</span>)</span><br><span class="line">          OneNet_RevPro(dataPtr);</span><br><span class="line"></span><br><span class="line">      HAL_Delay(<span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主函数中，以下这几处都跟stm32与服务器实现发布与订阅有重要作用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">OneNet_Subscribe(devSubTopic, <span class="number">1</span>);<span class="comment">//订阅的话题和话题数量</span></span><br><span class="line">OneNet_Publish(devPubTopic, <span class="string">&quot;MQTT Publish Test&quot;</span>);<span class="comment">//发布的话题和话题内容</span></span><br><span class="line">dataPtr = ESP8266_GetIPD(<span class="number">3</span>);<span class="comment">//获取平台返回的数据</span></span><br><span class="line">OneNet_RevPro(dataPtr);<span class="comment">//如果数据不为空，则对数据处理</span></span><br></pre></td></tr></table></figure>
<p>下面是发布和订阅的话题名称，可自行修改</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *devSubTopic[] = &#123;<span class="string">&quot;/mysmarthome/sub&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> devPubTopic[] = <span class="string">&quot;/mysmarthome/pub&quot;</span>;</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br></pre></td></tr></table></figure>
<p>对发布内容来说，修改msg的值即可确定stm32发布给服务器的内容</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OneNet_Publish</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *topic, <span class="keyword">const</span> <span class="keyword">char</span> *msg)</span></span></span><br></pre></td></tr></table></figure>
<p>而stm32订阅服务器的数据（即服务器发布给stm32的数据）需要在<code>OneNet_RevPro</code>函数中对数据进行json处理。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OneNet_RevPro</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    MQTT_PACKET_STRUCTURE mqttPacket = &#123;<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;                         <span class="comment">//协议包</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> *req_payload = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> *cmdid_topic = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> topic_len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> req_len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> type = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> qos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> pkt_id = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">short</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> *dataPtr = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> numBuf[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    cJSON *json , *json_value;</span><br><span class="line"></span><br><span class="line">    type = MQTT_UnPacketRecv(cmd);</span><br><span class="line">    <span class="keyword">switch</span>(type)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> MQTT_PKT_CMD:                                           <span class="comment">//命令下发</span></span><br><span class="line"></span><br><span class="line">            result = MQTT_UnPacketCmd(cmd, &amp;cmdid_topic, &amp;req_payload, &amp;req_len);  <span class="comment">//解出topic和消息体</span></span><br><span class="line">            <span class="keyword">if</span>(result == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                UsartPrintf(&amp;huart1, <span class="string">&quot;cmdid: %s, req: %s, req_len: %d\r\n&quot;</span>, cmdid_topic, req_payload, req_len);</span><br><span class="line"></span><br><span class="line">                MQTT_DeleteBuffer(&amp;mqttPacket);                            <span class="comment">//删包</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MQTT_PKT_PUBLISH:                                        <span class="comment">//接收的Publish消息</span></span><br><span class="line"></span><br><span class="line">            result = MQTT_UnPacketPublish(cmd, &amp;cmdid_topic, &amp;topic_len, &amp;req_payload, &amp;req_len, &amp;qos, &amp;pkt_id);</span><br><span class="line">            <span class="keyword">if</span>(result == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                UsartPrintf(&amp;huart1, <span class="string">&quot;topic: %s, topic_len: %d, payload: %s, payload_len: %d\r\n&quot;</span>,</span><br><span class="line">                            cmdid_topic, topic_len, req_payload, req_len);</span><br><span class="line">                <span class="comment">// 对数据包req_payload进行JSON格式解析</span></span><br><span class="line">                json = cJSON_Parse(req_payload);<span class="comment">//对发布的数据进行json解析</span></span><br><span class="line">                <span class="keyword">if</span> (!json)UsartPrintf(&amp;huart1, <span class="string">&quot;Error before: [%s]\n&quot;</span>, cJSON_GetErrorPtr());</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    json_value = cJSON_GetObjectItem(json, <span class="string">&quot;LED&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (json_value-&gt;valueint)</span><br><span class="line">                        HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);<span class="comment">//开灯</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);<span class="comment">//关灯</span></span><br><span class="line">                &#125;</span><br><span class="line">                cJSON_Delete(json);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> MQTT_PKT_PUBACK:                                         <span class="comment">//发送Publish消息，平台回复的Ack</span></span><br><span class="line">      </span><br><span class="line">         <span class="keyword">if</span>(MQTT_UnPacketPublishAck(cmd) == <span class="number">0</span>)</span><br><span class="line">            UsartPrintf(&amp;huart1, <span class="string">&quot;Tips:    MQTT Publish Send OK\r\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">         result = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   ESP8266_Clear();                           <span class="comment">//清空缓存</span></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>(result == <span class="number">-1</span>)</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">strstr</span>((<span class="keyword">char</span> *)req_payload, <span class="string">&quot;OPEN&quot;</span>))       <span class="comment">//搜索&quot;OPEN&quot;</span></span><br><span class="line">   &#123;</span><br><span class="line">         UsartPrintf(&amp;huart1, <span class="string">&quot;Blue_Led_ON\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strstr</span>((<span class="keyword">char</span> *)req_payload, <span class="string">&quot;CLOED&quot;</span>))  <span class="comment">//搜索&quot;CLOED&quot;</span></span><br><span class="line">   &#123;</span><br><span class="line">         UsartPrintf(&amp;huart1, <span class="string">&quot;Blue_Led_OFF\r\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(type == MQTT_PKT_CMD || type == MQTT_PKT_PUBLISH)</span><br><span class="line">   &#123;</span><br><span class="line">      MQTT_FreeBuffer(cmdid_topic);</span><br><span class="line">      MQTT_FreeBuffer(req_payload);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>移植过程中只需要修改下面这部分内容即可</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> MQTT_PKT_PUBLISH:                                        <span class="comment">//接收的Publish消息       </span></span><br><span class="line">	result = MQTT_UnPacketPublish(cmd, &amp;cmdid_topic, &amp;topic_len, &amp;req_payload, &amp;req_len, &amp;qos, &amp;pkt_id);</span><br><span class="line">       <span class="keyword">if</span>(result == <span class="number">0</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           UsartPrintf(&amp;huart1, <span class="string">&quot;topic: %s, topic_len: %d, payload: %s, payload_len: %d\r\n&quot;</span>,</span><br><span class="line">                       cmdid_topic, topic_len, req_payload, req_len);</span><br><span class="line">           <span class="comment">// 对数据包req_payload进行JSON格式解析</span></span><br><span class="line">           json = cJSON_Parse(req_payload);<span class="comment">//对发布的数据进行json解析</span></span><br><span class="line">           <span class="keyword">if</span> (!json)UsartPrintf(&amp;huart1, <span class="string">&quot;Error before: [%s]\n&quot;</span>, cJSON_GetErrorPtr());</span><br><span class="line">           <span class="keyword">else</span> &#123;</span><br><span class="line">               json_value = cJSON_GetObjectItem(json, <span class="string">&quot;LED&quot;</span>);</span><br><span class="line">               <span class="keyword">if</span> (json_value-&gt;valueint)<span class="comment">//json_value &gt; 0且为整形</span></span><br><span class="line">                   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);<span class="comment">//开灯</span></span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);<span class="comment">//关灯</span></span><br><span class="line">           &#125;</span><br><span class="line">           cJSON_Delete(json);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>
<p>发布数据时要以json格式进行发送eg:<code>&#123;&quot;msg&quot;: &quot;hello&quot;&#125;</code></p>
<p>上述中当我们发布<code>&#123;&quot;LED&quot;:1&#125;</code>，LED等就为高电平，<code>&#123;&quot;LED&quot;:0&#125;</code>，LED等就为低电平</p>
<p>烧录程序后，连接串口，打开自己的手机热点（必须用2.4G的wifi不能用5G的），然后出现以下情况及表示连接服务器成功。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726172844453.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726172844453.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726172844453"></p>
<h2 id="EMQ服务器的使用"><a href="#EMQ服务器的使用" class="headerlink" title="EMQ服务器的使用"></a>EMQ服务器的使用</h2><p>首先登录官网<a href="https://www.emqx.com/zh">EMQX</a>，找到学习下的<code>MQTT WebSocket客户端</code><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173113644.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173113644.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726173113644"></p>
<p>进去之后，点击适用</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173345820.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173345820.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726173345820"></p>
<p>创建新的连接，自定义Name，Host和Port修改成自己的服务器名即可，然后Connect</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173605418.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173605418.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726173605418"></p>
<h3 id="STM32发布、服务器订阅"><a href="#STM32发布、服务器订阅" class="headerlink" title="STM32发布、服务器订阅"></a>STM32发布、服务器订阅</h3><p>New Subscription-&gt;订阅stm32的发布话题<code>/mysmarthome/pub</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173646297.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173646297.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726173646297"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173839876.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726173839876.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726173839876"></p>
<p>此时就会看到stm32向服务器发来的消息<code>MQTT Publish Test</code>,实现</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726174022384.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726174022384.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726174022384"></p>
<h3 id="STM32订阅、服务器发布"><a href="#STM32订阅、服务器发布" class="headerlink" title="STM32订阅、服务器发布"></a>STM32订阅、服务器发布</h3><p>将Payload选为JSON格式发布，topic为<code>/mysmarthome/sub</code>,发布内容为<code>&#123;&quot;LED&quot;:1&#125;</code>和<code>&#123;&quot;LED&quot;:0&#125;</code>,实现控制stm32的LED亮灭。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726174618057.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726174618057.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726174618057"></p>
<p><strong><em>注意!!!,在新建发布与订阅话题中，有一项为QoS，此选项要与STM32中一致</em></strong></p>
<p>分别在onenet.c中的<code>OneNet_Subscribe</code>和<code>OneNet_Publish</code>函数中</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726174957956.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726174957956.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726174957956"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726175010591.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726175010591.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726175010591"></p>
<h2 id="MQTT客户端的使用"><a href="#MQTT客户端的使用" class="headerlink" title="MQTT客户端的使用"></a>MQTT客户端的使用</h2><p>上面中使用是在线发布与订阅，下面使用MQTT软件实现发布订阅</p>
<p>下载地址<a href="https://www.emqx.com/zh/downloads-and-install?product=MQTTX&amp;version=1.8.0&amp;os=Windows&amp;oslabel=Windows">MQTT.fx</a><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180341408.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180341408.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726180341408"></p>
<p>打开之后点击小齿轮新建连接</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180557653.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180557653.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726180557653"></p>
<p>然后Apply，Connect之后就可以发布和订阅话题了</p>
<p>订阅话题</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180859303.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180859303.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726180859303"></p>
<p>发布话题</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180945510.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220726180945510.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220726180945510"></p>
<h3 id="移植"><a href="#移植" class="headerlink" title="移植"></a>移植</h3><p>下面总结下移植时需要修改的参数</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>WIFI_SSID</strong></td>
<td style="text-align:center">WIFI的名称 必须用2.4G的wifi不能用5G的，且不能用中文、空格</td>
</tr>
<tr>
<td style="text-align:center"><strong>WIFI_PSWD</strong></td>
<td style="text-align:center">WIFI密码</td>
</tr>
<tr>
<td style="text-align:center"><strong>SERVER_HOST</strong></td>
<td style="text-align:center">MQTT服务器域名或IP</td>
</tr>
<tr>
<td style="text-align:center"><strong>SERVER_PORT</strong></td>
<td style="text-align:center">MQTT服务器端口（一般为1883不用改）</td>
</tr>
<tr>
<td style="text-align:center"><strong>*devSubTopic[]</strong></td>
<td style="text-align:center">订阅话题</td>
</tr>
<tr>
<td style="text-align:center"><strong>devPubTopic[]</strong></td>
<td style="text-align:center">发布话题</td>
</tr>
<tr>
<td style="text-align:center">OneNet_Publish(const char <em>topic, const char **</em>msg**)</td>
<td style="text-align:center">发布内容</td>
</tr>
<tr>
<td style="text-align:center">cJSON_GetObjectItem(json, <strong>“LED”</strong>);</td>
<td style="text-align:center">对订阅的命令做出判断</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库ADC</title>
    <url>/2022/07/21/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93ADC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32CubeMx配置HAL库ADC"><a href="#STM32CubeMx配置HAL库ADC" class="headerlink" title="STM32CubeMx配置HAL库ADC"></a>STM32CubeMx配置HAL库ADC</h1><h2 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h2><p>ADC是（Analog-to-DigitalConverter）的缩写。指模/数转换器或者模拟/数字转换器。是指将连续变量的模拟信号转换为离散的数字信号的器件。典型的模拟数字转换器将模拟信号转换为表示一定比例电压值的数字信号。</p>
<p>STM32的ADC精度是12位，它有18个通道，可以测量16路外部和2个内部信号源，各通道的A/D转换可以单次、连续、扫描或间断模式执行，ADC的结果可以左对齐或右对齐方式存储在16位数据寄存器中。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721215640945.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721215640945.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721215640945"></p>
<p>本章选取stm32的内部温度传感器为例，说明stm32cubemx配置ADC的整个过程。</p>
<h2 id="内部温度传感器"><a href="#内部温度传感器" class="headerlink" title="内部温度传感器"></a>内部温度传感器</h2><p>STM32 有一个内部的温度传感器，可以用来测量 CPU 及周围的温度(TA)。该温度传感器 在内部和 ADCx_IN16 输入通道相连接，此通道把传感器输出的电压转换成数字值。温度传感 器模拟输入推荐采样时间是 17.1μs。 STM32 的内部温度传感器支持的温度范围为：-40~125 度，精度为±1.5℃左右（实际效果不咋地）。</p>
<p>STM32 的内部温度传感器固定的连接在 ADC 的通道 16 上，所以，我们在设 置好 ADC 之后只要读取通道 16 的值，就是温度传感器返回来的电压值了。根据这个值，我们 就可以计算出当前温度。计算公式如下： </p>
<p><strong>T（℃）={（V25-Vsense）/Avg_Slope}+25</strong></p>
<p> 上式中： V25=Vsense 在 25 度时的数值（典型值为：1.43）。 Avg_Slope=温度与Vsense曲线的平均斜率（单位：mv/℃或uv/℃）（典型值：4.3mv/℃）。 利用以上公式，我们就可以方便的计算出当前温度传感器的温度了。</p>
<h2 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><ul>
<li>SYS-&gt;Debug-&gt;Serial Wire</li>
<li>USART1选择为异步通讯方式，波特率设置为115200Bits/s，传输数据长度为8Bit，无奇偶校验，1位停止位</li>
<li>RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</li>
<li>时钟树，时钟设置为72M，ADC预分频因子设置为<strong>6</strong>，ADC_CLK为<strong>12MHz</strong></li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721220414964.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721220414964.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721220414964"></p>
<ul>
<li>激活ADC1温度传感器通道，设置右对齐，关闭扫描、连续及间断模式，使能regular conversion，设置软件触发、设置采样时间239.5个周期（19.96us）</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721220826063.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721220826063.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721220826063"></p>
<h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h2><p><code>adc.c</code>中的初始化程序</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ADC1 init function */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MX_ADC1_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN ADC1_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END ADC1_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  ADC_ChannelConfTypeDef sConfig = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN ADC1_Init 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END ADC1_Init 1 */</span></span><br><span class="line">  <span class="comment">/** Common config</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  hadc1.Instance = ADC1;</span><br><span class="line">  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;</span><br><span class="line">  hadc1.Init.ContinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.DiscontinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;</span><br><span class="line">  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;</span><br><span class="line">  hadc1.Init.NbrOfConversion = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_Init(&amp;hadc1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/** Configure Regular Channel</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;</span><br><span class="line">  sConfig.Rank = ADC_REGULAR_RANK_1;</span><br><span class="line">  sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_ConfigChannel(&amp;hadc1, &amp;sConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN ADC1_Init 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END ADC1_Init 2 */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line">  <span class="keyword">uint16_t</span> adc_value;</span><br><span class="line">  <span class="keyword">float</span> vol_value,temp;</span><br><span class="line">  <span class="comment">/* USER CODE END 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* MCU Configuration--------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Configure the system clock */</span></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize all configured peripherals */</span></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_ADC1_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">    HAL_ADC_Start(&amp;hadc1); <span class="comment">//启动ADC转换</span></span><br><span class="line">    HAL_ADC_PollForConversion(&amp;hadc1,<span class="number">10</span>); <span class="comment">//等待转换完成，10ms表示超时时间</span></span><br><span class="line">    adc_value= HAL_ADC_GetValue(&amp;hadc1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ADC转换数据:%d\r\n&quot;</span>, adc_value);</span><br><span class="line">    vol_value=adc_value*(<span class="number">3.3</span>/<span class="number">4096</span>);<span class="comment">//AD值乘以分辨率为电压值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;电压值为%.2f\r\n&quot;</span>,vol_value);</span><br><span class="line">    temp=(<span class="number">1.43</span> - vol_value)/<span class="number">0.0043</span> + <span class="number">25</span>;<span class="comment">//根据公式算出温度值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MCU内部温度为%.2f\r\n&quot;</span>,temp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721215358949.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721215358949.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721215358949"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库PWM</title>
    <url>/2022/07/20/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93PWM/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="PWM简介"><a href="#PWM简介" class="headerlink" title="PWM简介"></a>PWM简介</h2><p>PWM(Pulse Width Modulation)是脉冲宽度调制的缩写，是一种利用微处理器的数字输出来对模拟电路进行控制的技术。PWM的原理是</p>
<p>通过调节<strong>占空比</strong>来调节脉冲宽度，从而改变输出电压的大小。波形图如下<br><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822103209917.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822103209917.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230822103209917"></p>
<p>PWM的两个重要参数为<strong>频率</strong>和<strong>占空比</strong>。频率是周期的导数即$f=1/T$,占空比是指脉宽时间占周期的比例。</p>
<p>STM32中用定时器来输出PWM，其原理图如下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822103605225.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822103605225.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230822103605225"></p>
<p>定时器重复计数从0到ARR，设定比较值为CCRx，当定时器的计数值向上计数到和CCRx的值相等时，对应波形输出管脚电瓶翻转，</p>
<p>当定时器计数值计到ARR时，输出管脚波形再次翻转。从图中可以看出，定时器的一个计时周期对应一个 PWM周期，脉宽（高电平的宽</p>
<p>度）需要根据输出管脚的初始电平的不同或者为0—CCRx这一段，或者为CCRx—ARR,这一段。改变CCRx的值即可实现脉宽的控制。</p>
<p>PWM频率和占空比的影响因素有:</p>
<ul>
<li>ARR :决定PWM周期(在系统时钟频率固定的情况下)</li>
<li>CCRx:决定PWM占空比(高低电平所占整个周期比例)</li>
</ul>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul>
<li>stm32f103c8t6</li>
<li>tb6612fng</li>
<li>直流电机</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">硬件</th>
<th style="text-align:center">引脚</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">电机1A</td>
<td style="text-align:center">PB12</td>
<td style="text-align:center">普通IO</td>
</tr>
<tr>
<td style="text-align:center">电机1B</td>
<td style="text-align:center">PB13</td>
<td style="text-align:center">普通IO</td>
</tr>
<tr>
<td style="text-align:center">电机2A</td>
<td style="text-align:center">PB14</td>
<td style="text-align:center">普通IO</td>
</tr>
<tr>
<td style="text-align:center">电机2B</td>
<td style="text-align:center">PB15</td>
<td style="text-align:center">普通IO</td>
</tr>
<tr>
<td style="text-align:center">PWMA</td>
<td style="text-align:center">PA6</td>
<td style="text-align:center">TIM3_CH1</td>
</tr>
<tr>
<td style="text-align:center">PWMB</td>
<td style="text-align:center">PA7</td>
<td style="text-align:center">TIM3_CH2</td>
</tr>
</tbody>
</table>
</div>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX</h3><ul>
<li>RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</li>
<li>SYS-&gt;Debug-&gt;Serial Wire</li>
<li>GPIO</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822104850113.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822104850113.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230822104850113"></p>
<ul>
<li>TIM3-&gt;Channel1-&gt;PWM Generation CH1</li>
<li>TIM3-&gt;Channel2-&gt;PWM Generation CH1</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822105013360.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230822105013360.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230822105013360"></p>
<p>预分频系数(PSC)设置为144-1，自动重装载值为1000-1，PWM模式1，向上计数，则计时器时钟频率为$72M/144/1000=500Hz$,周期为$T=1/500=2ms$</p>
<ul>
<li>Clock Configuration-&gt;HCLK-&gt;72</li>
<li>GRNRATE CODE</li>
</ul>
<h3 id="CLion"><a href="#CLion" class="headerlink" title="CLion"></a>CLion</h3><p>在Core/Inc新建<code>motor.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> STM32_MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STM32_MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIN1_RESET HAL_GPIO_WritePin(AIN1_GPIO_Port, AIN1_Pin, GPIO_PIN_RESET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIN2_RESET HAL_GPIO_WritePin(AIN2_GPIO_Port, AIN2_Pin, GPIO_PIN_RESET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIN1_SET HAL_GPIO_WritePin(AIN1_GPIO_Port, AIN1_Pin, GPIO_PIN_SET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIN2_SET HAL_GPIO_WritePin(AIN2_GPIO_Port, AIN2_Pin, GPIO_PIN_SET)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIN1_RESET HAL_GPIO_WritePin(BIN1_GPIO_Port, BIN1_Pin, GPIO_PIN_RESET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIN2_RESET HAL_GPIO_WritePin(BIN2_GPIO_Port, BIN2_Pin, GPIO_PIN_RESET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIN1_SET HAL_GPIO_WritePin(BIN1_GPIO_Port, BIN1_Pin, GPIO_PIN_SET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIN2_SET HAL_GPIO_WritePin(BIN2_GPIO_Port, BIN2_Pin, GPIO_PIN_SET)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Limit_PWM</span><span class="params">(<span class="keyword">int</span> *motorA, <span class="keyword">int</span> *motorB)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Load_PWM</span><span class="params">(<span class="keyword">int</span> Left_Motor, <span class="keyword">int</span> Right_Motor)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* MOTOR_MOTOR_H_ */</span></span></span><br></pre></td></tr></table></figure>
<p>在Core/Inc新建<code>motor.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    @brief 控制电机进行正转、反转、停止</span></span><br><span class="line"><span class="comment"> *    @param None</span></span><br><span class="line"><span class="comment"> *    @retval None</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LeftMotor_Go</span><span class="params">()</span> <span class="comment">//左电机正转 AIN输出相反电平  BIN也输出相反电平</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AIN1_RESET;</span><br><span class="line">    AIN2_SET;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LeftMotor_Back</span><span class="params">()</span>  <span class="comment">//左电机反转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AIN1_SET;</span><br><span class="line">    AIN2_RESET;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LeftMotor_Stop</span><span class="params">()</span>  <span class="comment">//左电机停止 AIN和BIN输出相同电平</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AIN1_RESET;</span><br><span class="line">    AIN2_RESET;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RightMotor_Go</span><span class="params">()</span> <span class="comment">//右电机正转 AIN输出相反电平  BIN也输出相反电平</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BIN1_SET;</span><br><span class="line">    BIN2_RESET;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RightMotor_Back</span><span class="params">()</span>  <span class="comment">//右电机反转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BIN1_RESET;</span><br><span class="line">    BIN2_SET;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RightMotor_Stop</span><span class="params">()</span>  <span class="comment">//右电机停止 AIN和BIN输出相同电平</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BIN1_RESET;</span><br><span class="line">    BIN2_RESET;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    @brief 绝对值</span></span><br><span class="line"><span class="comment"> *    @param int整数</span></span><br><span class="line"><span class="comment"> *    @retval int整数的绝对值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GFP_Abs</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    q=p&gt;<span class="number">0</span>?p:(-p);</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    @brief 控制电机进行PWM限速</span></span><br><span class="line"><span class="comment"> *    @param 左右电机的PWM值</span></span><br><span class="line"><span class="comment"> *    @retval None</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Limit_PWM</span><span class="params">(<span class="keyword">int</span> *motorA, <span class="keyword">int</span> *motorB)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(*motorA&gt;PWM_MAX) *motorA=PWM_MAX;</span><br><span class="line">    <span class="keyword">if</span>(*motorA&lt;PWM_MIN) *motorA=PWM_MIN;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(*motorB&gt;PWM_MAX) *motorB=PWM_MAX;</span><br><span class="line">    <span class="keyword">if</span>(*motorB&lt;PWM_MIN) *motorB=PWM_MIN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    @brief 控制电机进行速度方向控制</span></span><br><span class="line"><span class="comment"> *    @param 左右电机的PWM值</span></span><br><span class="line"><span class="comment"> *    @retval None</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Load_PWM</span><span class="params">(<span class="keyword">int</span> Left_Motor, <span class="keyword">int</span> Right_Motor)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Left_Motor&gt;<span class="number">0</span>) LeftMotor_Go();</span><br><span class="line">    <span class="keyword">else</span> LeftMotor_Back();</span><br><span class="line">    __HAL_TIM_SET_COMPARE(&amp;htim3, TIM_CHANNEL_2, GFP_Abs(Right_Motor));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Right_Motor&gt;<span class="number">0</span>) RightMotor_Go();</span><br><span class="line">    <span class="keyword">else</span> RightMotor_Back();</span><br><span class="line">    __HAL_TIM_SET_COMPARE(&amp;htim3, TIM_CHANNEL_1, GFP_Abs(Left_Motor));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"><span class="keyword">int</span> PWM_MAX = <span class="number">1000</span>, PWM_MIN = <span class="number">-1000</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemClock_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line">  SystemClock_Config();</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM3_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_1);</span><br><span class="line">  HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_2);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      Load_PWM(<span class="number">800</span>, <span class="number">800</span>);</span><br><span class="line">      HAL_Delay(<span class="number">2000</span>);</span><br><span class="line">      Load_PWM(<span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line">      HAL_Delay(<span class="number">2000</span>);</span><br><span class="line">      Load_PWM(<span class="number">-800</span>, <span class="number">-800</span>);</span><br><span class="line">      HAL_Delay(<span class="number">2000</span>);</span><br><span class="line">      Load_PWM(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      HAL_Delay(<span class="number">2000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库RTC</title>
    <url>/2022/07/21/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93RTC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>RTC (Real Time Clock)</strong>：实时时钟</p>
<h2 id="软件设置"><a href="#软件设置" class="headerlink" title="软件设置"></a>软件设置</h2><ul>
<li>SYS-&gt;Debug-&gt;Serial Wire</li>
<li>RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</li>
<li>RCC-&gt;LSE-&gt;Crystal/Ceramic Resonator</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721162800394.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721162800394.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721162800394"></p>
<ul>
<li>时钟树将RTC的频率设置为32.768KHz</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721162934893.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721162934893.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721162934893"></p>
<ul>
<li>USART1-&gt;Mode-&gt;Asynchronous</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721165423421.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721165423421.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721165423421"></p>
<ul>
<li>RTC激活时钟源，激活日历，RTC OUT选择<code>No RTC Output</code></li>
<li>设置日历初始时间日期</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721163342315.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721163342315.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721163342315"></p>
<ul>
<li>打开中断</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721164028876.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721164028876.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721164028876"></p>
<h2 id="程序修改"><a href="#程序修改" class="headerlink" title="程序修改"></a>程序修改</h2><p>main.c中</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line">RTC_DateTypeDef GetDate;</span><br><span class="line">RTC_TimeTypeDef GetTime;</span><br><span class="line">RTC_AlarmTypeDef sAlarm;</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private function prototypes -----------------------------------------------*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemClock_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">/* USER CODE BEGIN PFP */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PFP */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private user code ---------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  The application entry point.</span></span><br><span class="line"><span class="comment">  * @retval int</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* MCU Configuration--------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Configure the system clock */</span></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize all configured peripherals */</span></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_RTC_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  __HAL_RTC_SECOND_ENABLE_IT(&amp;hrtc,RTC_IT_SEC);<span class="comment">//开启秒中断</span></span><br><span class="line">  sAlarm.Alarm = RTC_ALARM_A;</span><br><span class="line">  sAlarm.AlarmTime.Hours=<span class="number">17</span>;</span><br><span class="line">  sAlarm.AlarmTime.Minutes=<span class="number">10</span>;</span><br><span class="line">  sAlarm.AlarmTime.Seconds=<span class="number">0</span>;</span><br><span class="line">  HAL_RTC_SetAlarm_IT(&amp;hrtc,&amp;sAlarm,RTC_FORMAT_BIN);<span class="comment">//设置闹钟并使能闹钟中断</span></span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line">      HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">      HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);</span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>rtc.c</code>中</p>
<p>定义外部变量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> RTC_DateTypeDef GetDate;</span><br><span class="line"><span class="keyword">extern</span> RTC_TimeTypeDef GetTime;</span><br><span class="line"><span class="comment">/* USER CODE END 0 */</span></span><br></pre></td></tr></table></figure>
<p>编写秒中断处理回调函数和闹钟中断处理函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_RTCEx_RTCEventCallback</span><span class="params">(RTC_HandleTypeDef *hrtc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_RTC_GetDate(hrtc,&amp;GetDate,RTC_FORMAT_BIN);</span><br><span class="line">    HAL_RTC_GetTime(hrtc,&amp;GetTime,RTC_FORMAT_BIN);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Date:%02d-%02d-%02d\r\n&quot;</span>,<span class="number">2000</span>+GetDate.Year,GetDate.Month,GetDate.Date);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Time:%02d:%02d:%02d\r\n&quot;</span>,GetTime.Hours,GetTime.Minutes,GetTime.Seconds);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_RTC_AlarmAEventCallback</span><span class="params">(RTC_HandleTypeDef *hrtc)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Alarm Active...!!!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 1 */</span></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721172003463.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220721172003463.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220721172003463"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库外部中断</title>
    <url>/2022/07/18/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E4%B8%AD%E6%96%AD%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32CubeMx配置HAL库EXTI"><a href="#STM32CubeMx配置HAL库EXTI" class="headerlink" title="STM32CubeMx配置HAL库EXTI"></a>STM32CubeMx配置HAL库EXTI</h1><p><strong>本节以按键外部中断为例</strong></p>
<h2 id="GPIO配置"><a href="#GPIO配置" class="headerlink" title="GPIO配置"></a>GPIO配置</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Pin</th>
<th style="text-align:center">State</th>
<th style="text-align:center">Mode</th>
<th style="text-align:center">GPIO Pull-up/Pull-down</th>
<th style="text-align:center">User Label</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">PA0</td>
<td style="text-align:center">GPIO_EXTI0</td>
<td style="text-align:center">上升沿触发</td>
<td style="text-align:center">Pull-down</td>
<td style="text-align:center">WK_UP_EXTI</td>
</tr>
<tr>
<td style="text-align:center">PC5</td>
<td style="text-align:center">GPIO_EXTI5</td>
<td style="text-align:center">下降沿触发</td>
<td style="text-align:center">Pull-up</td>
<td style="text-align:center">KEY0_EXTI</td>
</tr>
</tbody>
</table>
</div>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718180730151.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718180730151.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220718180730151"></p>
<h2 id="NVIC配置"><a href="#NVIC配置" class="headerlink" title="NVIC配置"></a>NVIC配置</h2><p>设置优先级组<code>NVIC_PRIORITYGROUP_2</code></p>
<p>设置中断<code>EXTI line0 interrupt</code>和<code>EXTI line[9:5] interrupt</code></p>
<p>启动中断<code>Enabel</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718165640952.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718165640952.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220718165640952"></p>
<h2 id="GENERATE-CODE"><a href="#GENERATE-CODE" class="headerlink" title="GENERATE CODE"></a>GENERATE CODE</h2><p><code>gpio.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MX_GPIO_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOC_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = WK_UP_EXTI_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLDOWN;</span><br><span class="line">  HAL_GPIO_Init(WK_UP_EXTI_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = KEY0_EXTI_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  HAL_GPIO_Init(KEY0_EXTI_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = LED0_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">  HAL_GPIO_Init(LED0_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = KEY1_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  HAL_GPIO_Init(KEY1_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = LED1_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">  HAL_GPIO_Init(LED1_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* EXTI interrupt init*/</span></span><br><span class="line">  HAL_NVIC_SetPriority(EXTI0_IRQn, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI0_IRQn);</span><br><span class="line"></span><br><span class="line">  HAL_NVIC_SetPriority(EXTI9_5_IRQn, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>stm32f1xx_hal_msp.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_MspInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN MspInit 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END MspInit 0 */</span></span><br><span class="line"></span><br><span class="line">  __HAL_RCC_AFIO_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_PWR_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* System interrupt init*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/** NOJTAG: JTAG-DP Disabled and SW-DP Enabled</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  __HAL_AFIO_REMAP_SWJ_NOJTAG();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN MspInit 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END MspInit 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>stm32f1xx_it.c</code>文件中，有两个中断服务函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EXTI0_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI0_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI0_IRQn 0 */</span></span><br><span class="line">  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI0_IRQn 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI0_IRQn 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief This function handles EXTI line[9:5] interrupts.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EXTI9_5_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI9_5_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI9_5_IRQn 0 */</span></span><br><span class="line">  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN EXTI9_5_IRQn 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END EXTI9_5_IRQn 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编写中断回调函数"><a href="#编写中断回调函数" class="headerlink" title="编写中断回调函数"></a>编写中断回调函数</h2><p>找到中断服务函数，按住<code>ctrl+鼠标左键</code>点击<code>HAL_GPIO_EXTI_IRQHandler</code>,找到函数定义</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718181838325.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718181838325.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220718181838325"></p>
<p><code>HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)</code>即为中断回调函数</p>
<p>在<code>stm32f1xx_it.c</code>文件中编写</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="keyword">uint16_t</span> GPIO_Pin)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_Delay(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">switch</span>(GPIO_Pin)&#123;</span><br><span class="line">        <span class="keyword">case</span> GPIO_PIN_0:</span><br><span class="line">            HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> KEY0_EXTI_Pin:</span><br><span class="line">            HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="keyword">uint16_t</span> GPIO_Pin)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(GPIO_Pin==WK_UP_EXTI_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_EXTI_GPIO_Port, WK_UP_EXTI_Pin) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);</span><br><span class="line">        &#125;</span><br><span class="line">        __HAL_GPIO_EXTI_CLEAR_IT(WK_UP_EXTI_Pin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(GPIO_Pin==KEY0_EXTI_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY0_EXTI_GPIO_Port, KEY0_EXTI_Pin) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);</span><br><span class="line">        &#125;</span><br><span class="line">        __HAL_GPIO_EXTI_CLEAR_IT(KEY0_EXTI_Pin);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库按键</title>
    <url>/2022/07/17/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E6%8C%89%E9%94%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32CubeMx配置HAL库按键"><a href="#STM32CubeMx配置HAL库按键" class="headerlink" title="STM32CubeMx配置HAL库按键"></a>STM32CubeMx配置HAL库按键</h1><h2 id="GPIO配置"><a href="#GPIO配置" class="headerlink" title="GPIO配置"></a>GPIO配置</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Pin</th>
<th style="text-align:center">GPIO mode</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">PA0</td>
<td style="text-align:center">GPIO_Input</td>
</tr>
<tr>
<td style="text-align:center">PA15</td>
<td style="text-align:center">GPIO_Input</td>
</tr>
<tr>
<td style="text-align:center">PC5</td>
<td style="text-align:center">GPIO_Input</td>
</tr>
</tbody>
</table>
</div>
<p>根据stm32f103rct6的原理图</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207172258824.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207172258824.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220717225538637"></p>
<p>按以下表格设置</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Pin</th>
<th style="text-align:center">GPIO Pull-up/Pull-down</th>
<th style="text-align:center">User Label</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">PA0</td>
<td style="text-align:center">Pull-down</td>
<td style="text-align:center">WK_UP</td>
</tr>
<tr>
<td style="text-align:center">PA15</td>
<td style="text-align:center">Pull-up</td>
<td style="text-align:center">KEY1</td>
</tr>
<tr>
<td style="text-align:center">PC5</td>
<td style="text-align:center">Pull-up</td>
<td style="text-align:center">KEY0</td>
</tr>
</tbody>
</table>
</div>
<h2 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h2><p><code>main.c</code>里的<code>while</code>循环</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">    <span class="comment">/*读取此时按键值并判断是否是被按下状态，如果是被按下状态进入函数内*/</span></span><br><span class="line">    <span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*延时一小段时间，消除抖动*/</span></span><br><span class="line">        HAL_Delay(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">/*延时时间后再来判断按键状态，如果还是按下状态说明按键确实被按下*/</span></span><br><span class="line">        <span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*等待按键弹开才退出按键扫描函数*/</span></span><br><span class="line">            <span class="keyword">while</span>(HAL_GPIO_ReadPin(KEY0_GPIO_Port,KEY0_Pin)==<span class="number">0</span>);</span><br><span class="line">            <span class="comment">/*翻转LED0*/</span></span><br><span class="line">            HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库定时器</title>
    <url>/2022/07/20/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="STM32CubeMx配置"><a href="#STM32CubeMx配置" class="headerlink" title="STM32CubeMx配置"></a>STM32CubeMx配置</h2><ul>
<li>RCC设置HSE为Crystal/Ceramic Resonator</li>
<li>SYS设置Debug为Serial Wire</li>
<li>GPIO设置PD2为GPIO_Output</li>
</ul>
<p>定时器的配置主要由两个：定时时间与是否重装置定时器</p>
<p>定时频率=定时器时钟/(预分频+1)/(计数值+1)Hz</p>
<p>定时时间=1/定时频率s</p>
<ul>
<li>TIM3设置时钟源为内部时钟，PSC为（7200-1），ARR为（10000-1），因为定时器时钟为72M</li>
<li>所以定时频率$\nu  = \frac7200000072000000 = 1$，定时时间为$t=1/1=1$s。</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220720111330879.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220720111330879.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220720111330879"></p>
<p>打开NVIC中断</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220720112148223.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220720112148223.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220720112148223"></p>
<h2 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h2><p><code>tim.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_HandleTypeDef htim3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* TIM3 init function */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MX_TIM3_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN TIM3_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END TIM3_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN TIM3_Init 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END TIM3_Init 1 */</span></span><br><span class="line">  htim3.Instance = TIM3;</span><br><span class="line">  htim3.Init.Prescaler = <span class="number">7200</span><span class="number">-1</span>;</span><br><span class="line">  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim3.Init.Period = <span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim3) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim3, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim3, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN TIM3_Init 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END TIM3_Init 2 */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h2><p>主函数中使能中断</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  HAL_Init();</span><br><span class="line">  SystemClock_Config();</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM3_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_TIM_Base_Start_IT(&amp;htim3);<span class="comment">//开启中断</span></span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编写回调函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim==&amp;htim3)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure>
<p>烧录程序，这时会看到LED每1s翻转一次。</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库流水灯</title>
    <url>/2022/07/16/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E6%B5%81%E6%B0%B4%E7%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32CubeMx配置HAL库流水灯"><a href="#STM32CubeMx配置HAL库流水灯" class="headerlink" title="STM32CubeMx配置HAL库流水灯"></a>STM32CubeMx配置HAL库流水灯</h1><h2 id="RCC"><a href="#RCC" class="headerlink" title="RCC"></a>RCC</h2><p>RCC-&gt;High Speed Clock (HSE)-&gt; Crystal/Ceramic Resonator</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351760.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351760.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716210251784"></p>
<ul>
<li><p>Disable（禁用）</p>
</li>
<li><p>BYPASS Clock Source（旁路时钟源）</p>
</li>
<li><p>Crystal/Ceramic Resonator（晶体/陶瓷晶振）</p>
</li>
</ul>
<p>对于<strong>BYPASS Clock Source</strong>（旁路时钟源），就是由外部给定一个时钟信号，是单向的，猜测一般用于作为同步时钟。可以在<strong>Clock Configuration</strong>中看到这个时钟是由外部输入的。</p>
<p>而对于<strong>Crystal/Ceramic Resonator</strong>（晶体/陶瓷晶振），就是外部晶体，不标准的说法叫外部晶振，一般我们用的都是这个模式。可以看到时钟是“双向”的。</p>
<h2 id="Clock-Configuration"><a href="#Clock-Configuration" class="headerlink" title="Clock Configuration"></a>Clock Configuration</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351770.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351770.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716210820819"></p>
<h2 id="GPIO"><a href="#GPIO" class="headerlink" title="GPIO"></a>GPIO</h2><p>设置PC13为GPIO_Output</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351773.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351773.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716211015556"></p>
<h2 id="Project-Manager"><a href="#Project-Manager" class="headerlink" title="Project Manager"></a>Project Manager</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351785.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162351785.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716211144111"></p>
<ul>
<li>Copy all used libraries into the project folder<br>将所有已使用的库复制到项目文件夹中</li>
<li>Copy only the necessary library files<br>只复制必要的库文件</li>
<li>Add necessary library files as reference in the toolchain project configuratio.<br>在工具链项目配置中添加必要的库文件作为参考。</li>
<li>Generate peripheral initialization as a pair of “.cl.h’ files per peripheral<br>每个外设生成一对“.cl.h”文件的外围初始化</li>
<li>Backup previously generated files when re-generating<br>在重新生成时备份以前生成的文件</li>
<li>Keep User Code when re-generating<br>重新生成时保留用户代码</li>
<li>Delete previously generated files when not re-generated<br>当未重新生成时删除以前生成的文件。</li>
</ul>
<h2 id="GENERATE-CODE"><a href="#GENERATE-CODE" class="headerlink" title="GENERATE CODE"></a>GENERATE CODE</h2><p>宏定义文件在<code>main.h</code>中</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED_Pin_Pin GPIO_PIN_13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED_Pin_GPIO_Port GPIOC</span></span><br></pre></td></tr></table></figure>
<p><code>gpio.c</code>文件为生成的IO配置</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MX_GPIO_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">  __HAL_RCC_GPIOC_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line">  HAL_GPIO_WritePin(LED_Pin_GPIO_Port, LED_Pin_Pin, GPIO_PIN_RESET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*Configure GPIO pin : PtPin */</span></span><br><span class="line">  GPIO_InitStruct.Pin = LED_Pin_Pin;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">  HAL_GPIO_Init(LED_Pin_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h2><p><code>main.c</code>中<code>while</code>循环</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line"></span><br><span class="line">    HAL_GPIO_WritePin(LED_Pin_GPIO_Port,LED_Pin_Pin, GPIO_PIN_RESET);</span><br><span class="line">    HAL_Delay(<span class="number">300</span>);</span><br><span class="line">    HAL_GPIO_WritePin(LED_Pin_GPIO_Port,LED_Pin_Pin, GPIO_PIN_SET);</span><br><span class="line">    HAL_Delay(<span class="number">300</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>在已经勾选Keep User Code when re-generating时，生成的代码添加内容需填写在</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END*/</span></span><br></pre></td></tr></table></figure>
<p>否则在重新生成后，所编写的代码会删除</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库串口通信</title>
    <url>/2022/07/18/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32CubeMx配置HAL库串口通信"><a href="#STM32CubeMx配置HAL库串口通信" class="headerlink" title="STM32CubeMx配置HAL库串口通信"></a>STM32CubeMx配置HAL库串口通信</h1><h2 id="USART"><a href="#USART" class="headerlink" title="USART"></a>USART</h2><p>通信配置参考<a href="https://blog.csdn.net/weixin_43892323/article/details/105339949">STM32CubeMX实战教程（六）</a></p>
<ul>
<li>波特率设置（Baud Rate），没有哪种波特率最好，根据实际情况进行修改，<strong>要与串口调试助手上一致</strong></li>
<li>数据位数（Word Length），如果使能了奇偶校验，<strong>那么实际数据将在该位数上减一</strong></li>
<li>校验（Parity），可选择<strong>奇偶校验或不校验</strong></li>
<li>停止位（Stop Bits），额外<strong>一位或两位</strong>用于作为发送或接收完毕信号位</li>
<li>数据方向（Data Direction），可选择<strong>仅发送，仅接收或收发模式</strong></li>
<li>过采样（Over Sampling），8倍或16倍采样率可以<strong>有效防止数据出错</strong></li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719092523226.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719092523226.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719092523226"></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Mode</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Asynchronous</td>
<td style="text-align:center">异步模式</td>
</tr>
<tr>
<td style="text-align:center">Synchronous</td>
<td style="text-align:center">同步模式</td>
</tr>
<tr>
<td style="text-align:center">Single Wire (Half-Duplex)</td>
<td style="text-align:center">半双工单线模式</td>
</tr>
<tr>
<td style="text-align:center">Multiprocessor Communication</td>
<td style="text-align:center">多处理器通讯模式</td>
</tr>
<tr>
<td style="text-align:center">IrDA</td>
<td style="text-align:center">红外解码通信</td>
</tr>
<tr>
<td style="text-align:center">LIN</td>
<td style="text-align:center">总线通信</td>
</tr>
<tr>
<td style="text-align:center">SmartCard</td>
<td style="text-align:center">智能卡模式</td>
</tr>
<tr>
<td style="text-align:center">SmartCard with Card Clock</td>
<td style="text-align:center">带时钟智能卡模式</td>
</tr>
</tbody>
</table>
</div>
<p>UART(Universal Asynchronous Receiver/Transmitter)为通用异步收发器。</p>
<p>USART（Universal Synchronous/Asynchronous Receiver/Transmitter）通用同步/异步串行接收/发送器USART是一个全双工通用同步/异步串行收发模块，该接口是一个高度灵活的串行通信设备。</p>
<h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><h3 id="发送和接收函数"><a href="#发送和接收函数" class="headerlink" title="发送和接收函数"></a>发送和接收函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//串口轮询模式发送,使用超时管理机制</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Transmit</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size, <span class="keyword">uint32_t</span> Timeout)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//串口轮询模式发送,使用超时管理机制</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Receive</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size, <span class="keyword">uint32_t</span> Timeout)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口中断模式发送</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Transmit_IT</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口中断模式接收</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Receive_IT</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口DMA模式发送</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Transmit_DMA</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口DMA模式接收</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Receive_DMA</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size)</span></span>;</span><br></pre></td></tr></table></figure>
<p>函数传递参数</p>
<ul>
<li>huart: 这个参数用来选择具体要使用的串口</li>
<li>pData: 这个参数是要发送的数据或是接受数据缓存区</li>
<li>size: 发送\接受数据的长度</li>
<li>Timeout： 设置发送\接收超时的时间</li>
</ul>
<h3 id="串口相关回调函数"><a href="#串口相关回调函数" class="headerlink" title="串口相关回调函数"></a>串口相关回调函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//串口发送中断回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口发送一半中断回调函数（用的较少）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxHalfCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口接收中断回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;</span><br><span class="line"></span><br><span class="line">串口接收一半回调函数（用的较少）</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxHalfCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//传输过程中出现错误时，通过中断处理函数调用</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_ErrorCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;</span><br></pre></td></tr></table></figure>
<p>若要使用回调函数，需要自己重写，不会自动生成。</p>
<p>以上的函数都在官方库stm32f4xx_hal_uart.c里面。参考<a href="https://blog.csdn.net/qq_45699195/article/details/119912517">stm32cubemx 串口（详细）</a></p>
<h2 id="Usart-c"><a href="#Usart-c" class="headerlink" title="Usart.c"></a>Usart.c</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">UART_HandleTypeDef huart1;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MX_USART1_UART_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART1_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART1_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART1_Init 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART1_Init 1 */</span></span><br><span class="line">  huart1.Instance = USART1;</span><br><span class="line">  huart1.Init.BaudRate = <span class="number">115200</span>;</span><br><span class="line">  huart1.Init.WordLength = UART_WORDLENGTH_8B;</span><br><span class="line">  huart1.Init.StopBits = UART_STOPBITS_1;</span><br><span class="line">  huart1.Init.Parity = UART_PARITY_NONE;</span><br><span class="line">  huart1.Init.Mode = UART_MODE_TX_RX;</span><br><span class="line">  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;</span><br><span class="line">  huart1.Init.OverSampling = UART_OVERSAMPLING_16;</span><br><span class="line">  <span class="keyword">if</span> (HAL_UART_Init(&amp;huart1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART1_Init 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART1_Init 2 */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="轮询方式（不用中断）"><a href="#轮询方式（不用中断）" class="headerlink" title="轮询方式（不用中断）"></a>轮询方式（不用中断）</h2><h3 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">	HAL_UART_Transmit(&amp;huart1,<span class="string">&quot;\r\nTest_HAL_USART\r\n&quot;</span> ,<span class="number">25</span>,<span class="number">0xffff</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719094744718.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719094744718.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719094744718"></p>
<h3 id="sprintf函数"><a href="#sprintf函数" class="headerlink" title="sprintf函数"></a>sprintf函数</h3><p><strong>字符串</strong>格式化函数 sprintf主要功能把格式化的数据写在某个字符串中，使用sprintf时经常出问题，需要格外注意。</p>
<p><strong>sprintf</strong> 是个变参函数 ，该函数包含在<strong>stdio.h</strong>的头文件]中，使用时需导入这个头文件。</p>
<p><code>int sprintf( char *buffer, const char *format [, argument] ... );</code><br>除了前两个参数类型固定外，后面可以接任意多个参数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">include <span class="string">&quot;stdio.h&quot;</span></span><br><span class="line"><span class="keyword">char</span> buffer[<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">char</span> ch=<span class="string">&#x27;d&#x27;</span>;</span><br><span class="line"><span class="built_in">sprintf</span>(buffer,<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);</span><br><span class="line"><span class="comment">// Hello World</span></span><br><span class="line"><span class="built_in">sprintf</span>(buffer,<span class="string">&quot;abc%d\n&quot;</span>,t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);</span><br><span class="line"><span class="comment">//abc12</span></span><br><span class="line"><span class="built_in">sprintf</span>(buffer,<span class="string">&quot;abc%c%d\n&quot;</span>,ch,t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);</span><br><span class="line"><span class="comment">//abcd12</span></span><br></pre></td></tr></table></figure>
<p>在stm32中应用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> Uart_Buf[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">       	<span class="built_in">sprintf</span>(Uart_Buf, <span class="string">&quot;\r\nUSART1 Welcome\r\n&quot;</span>);</span><br><span class="line">        HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">        HAL_UART_Transmit(&amp;huart1,(<span class="keyword">uint8_t</span>*)Uart_Buf ,<span class="number">25</span>,<span class="number">0xffff</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719101120045.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719101120045.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719101120045"></p>
<p><em>注意！！！Buffer要大于字符串长度否则后缀会出现乱码情况。</em></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719101248788.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719101248788.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719101248788"></p>
<h2 id="printf重定向"><a href="#printf重定向" class="headerlink" title="printf重定向"></a>printf重定向</h2><p>重定向的作用<strong>printf函数</strong>用在<strong>STM32</strong>中，而printf的输出终端是<strong>串口</strong>。</p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>在<code>usart.c</code>中<code>UART_HandleTypeDef huart1;</code>以下添加:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __GNUC__</span></span><br><span class="line"><span class="comment">/* With GCC/RAISONANCE, small printf (option LD Linker-&gt;Libraries-&gt;Small printf</span></span><br><span class="line"><span class="comment">   set to &#x27;Yes&#x27;) calls __io_putchar() */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* __GNUC__ */</span></span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Retargets the C library printf function to the USART.</span></span><br><span class="line"><span class="comment">  * @param  None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">PUTCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* Place your implementation of fputc here */</span></span><br><span class="line">    <span class="comment">/* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */</span></span><br><span class="line">    HAL_UART_Transmit(&amp;huart1, (<span class="keyword">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xFFFF</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就可以在stm32中使用printf函数输出了（<code>#include &quot;stdio.h&quot;</code>）。</p>
<h3 id="CLion便捷设置"><a href="#CLion便捷设置" class="headerlink" title="CLion便捷设置"></a>CLion便捷设置</h3><p>每次配置串口时，这样<code>ctrl+c</code>和<code>ctrl+v</code>串口重定向又很繁琐，可以使用CLion的便捷设置。</p>
<p>文件-&gt;设置,搜索实时模板，在C/C++一栏添加<strong>实时模板</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103027986.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103027986.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719103027986"></p>
<p>缩写为<code>$printf</code>,描述可不写，然后把重定向函数复制到模板文件</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103230776.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103230776.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719103230776"></p>
<p>点击下面的<strong>定义(define)</strong>,<strong>勾选C</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103325556.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103325556.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719103325556"></p>
<p>这样以后直接输入命令<code>$printf</code>,就可以生成串口重定向函数了。</p>
<h3 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103614318.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103614318.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719103614318"></p>
<p>转换编码格式，<code>UTF-8—&gt;GBK</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103825619.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719103825619.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719103825619"></p>
<p>重新烧录</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719104000833.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719104000833.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719104000833"></p>
<h2 id="中断方式"><a href="#中断方式" class="headerlink" title="中断方式"></a>中断方式</h2><p><strong>NVIC 设置</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719104837034.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719104837034.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719104837034"></p>
<p>在<code>main.c</code></p>
<p>定义</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">uint8_t</span> RxBuff[<span class="number">10</span>];</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br></pre></td></tr></table></figure>
<p>主函数中打开接收中断</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_UART_Receive_IT(&amp;huart1, RxBuff,<span class="number">1</span>);</span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br></pre></td></tr></table></figure>
<p>添加中断回调函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;Instance==USART1)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Transmit(&amp;huart1,RxBuff,<span class="number">1</span>,<span class="number">1000</span>);</span><br><span class="line">        HAL_UART_Receive_IT(&amp;huart1,RxBuff,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719150722490.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719150722490.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719150722490"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32CubeMx配置HAL库编码器测速</title>
    <url>/2023/08/24/STM32CubeMx%E9%85%8D%E7%BD%AEHAL%E5%BA%93%E7%BC%96%E7%A0%81%E5%99%A8%E6%B5%8B%E9%80%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="编码器概述"><a href="#编码器概述" class="headerlink" title="编码器概述"></a>编码器概述</h2><p><img src="https://img-blog.csdnimg.cn/20210119213847839.gif#pic_center" class="lazyload placeholder" data-srcset="https://img-blog.csdnimg.cn/20210119213847839.gif#pic_center" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p>编码器是一种用来测量机械旋转或位移的传感器。它能够测量机械部件在旋转或直线运动时的位移位置或速度等信息，并将其转换成一系</p>
<p>列电信号。按照读出方式编码器可以分为接触式和非接触式两种；按照工作原理编码器可分为增量式和绝对式两类。编码器按照检测原</p>
<p>理，可以分为光学式、磁式、感应式和电容式。</p>
<p>而我们常见的是光电编码器(光学式)和霍尔编码器(磁式)</p>
<p>下面主要以霍尔编码器的原理及应用为主。</p>
<h2 id="霍尔编码器"><a href="#霍尔编码器" class="headerlink" title="霍尔编码器"></a>霍尔编码器</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824102110353.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824102110353.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824102110353"></p>
<p>霍尔编码器是一种通过磁电转换将输出轴上的机械几何位移量转换成脉冲或数字量的传感器。霍尔编码器是由霍尔码盘（磁环）和霍尔元</p>
<p>件组成。霍尔码盘是在一定直径的圆板上等分地布置有不同的磁极。当电动机旋转时，霍尔元件检测输出电压信号，从而得到电动机的转</p>
<p>速和位置信息  。</p>
<p>根据A、B相位信号来测量转速和方向：</p>
<ul>
<li>转速：单位时间测量到的脉冲数量</li>
<li>旋转方向：A、B之间相位的超前或滞后</li>
</ul>
<h3 id="实物"><a href="#实物" class="headerlink" title="实物"></a>实物</h3><p>通常编码器一般和电机相连在一起，实现电机实际测速</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824112400666.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824112400666.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824112400666"></p>
<h3 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">硬件</th>
<th style="text-align:center">引脚</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">编码器1+</td>
<td style="text-align:center">PA0</td>
<td style="text-align:center">TIM2_CH1</td>
</tr>
<tr>
<td style="text-align:center">编码器1-</td>
<td style="text-align:center">PA1</td>
<td style="text-align:center">TIM2_CH2</td>
</tr>
<tr>
<td style="text-align:center">编码器2+</td>
<td style="text-align:center">PB6</td>
<td style="text-align:center">TIM4_CH1</td>
</tr>
<tr>
<td style="text-align:center">编码器2-</td>
<td style="text-align:center">PB7</td>
<td style="text-align:center">TIM4_CH1</td>
</tr>
</tbody>
</table>
</div>
<h2 id="STM32编码器模式"><a href="#STM32编码器模式" class="headerlink" title="STM32编码器模式"></a>STM32编码器模式</h2><p>STM32单片机自带正交解码函数，采用定时器的编码器模式，所以一个电机需要采用两个定时器通道来采集A、B相信号。</p>
<p>三种计数模式</p>
<ul>
<li>A相计数(TI1计数)</li>
<li>B相计数(TI2计数)</li>
<li>A相和B相都计数(TI1和TI2都计数)</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824105005435.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824105005435.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824105005435"></p>
<p>如图假设以TI1技术，当上升沿或下降沿触发时，看对应的TI2信号，图中的计数方向1为例，此时TI1为上升沿，对应的TI2为低电平，由表中可知TI1FP1信号为上升，相对信号(TI2)为低电平，则为向上计数；计数方向2对应TI1为下降沿，TI2为高电平，为向上计数。依次类推，仅在TI2计数和在TI1、TI2计数原理相同。</p>
<ul>
<li>仅在TI1计数或仅在TI2计数为——二倍频</li>
<li>在TI1和TI2都计数为——四倍频</li>
</ul>
<p>计数方向</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824111026698.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824111026698.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824111026698"></p>
<p>向上计数0—65535装载值，向下计数65535—0</p>
<p>两种计数测速方法：</p>
<p>①这次编码器计数值 = 计数器值 + 计数器溢出次数 * 计数器最大计数值</p>
<p>计数器两次变化值 = 这次编码器计数值 - 上次编码器计数值</p>
<p>然后根据此变化量计算速度</p>
<p>②计数器变化量 = 当前计数值</p>
<p>每次计数器清零</p>
<p>根据此变化量 计算速度</p>
<p><strong>本次使用方法②来进行测速</strong></p>
<h2 id="STM32CubeMx配置"><a href="#STM32CubeMx配置" class="headerlink" title="STM32CubeMx配置"></a>STM32CubeMx配置</h2><p>TIM2-&gt;Combined Channels-&gt;<strong>Encoder Mode</strong></p>
<p>TIM4-&gt;Combined Channels-&gt;<strong>Encoder Mode</strong></p>
<p><strong>!!!STM32编码器模式采用定时器的通道1和通道2</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824112807447.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824112807447.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824112807447"></p>
<p>最大装载值设置为<strong>65535</strong>，编码器模式为<strong>Encoder Model TI1 and TI2</strong>(TI1和TI2都计数)，有需要的也可以适当调节下滤波值<strong>Input Fiter</strong></p>
<p>也可以适当打开全局中断，方便查看溢出值</p>
<h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><p>主函数<code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 编码器初始化</span></span><br><span class="line"><span class="keyword">short</span> Enc1_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">short</span> Enc2_cnt = <span class="number">0</span>;</span><br><span class="line">HAL_TIM_Encoder_Start(&amp;htim2, TIM_CHANNEL_ALL);</span><br><span class="line">HAL_TIM_Encoder_Start(&amp;htim4, TIM_CHANNEL_ALL);</span><br><span class="line"><span class="comment">// 定时器中断初始化</span></span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim4);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    Enc1_cnt = -(<span class="keyword">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim2);</span><br><span class="line">    Enc2_cnt = (<span class="keyword">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim4);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enc1_cnt: %d\r\n&quot;</span>, Enc1_cnt);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enc2_cnt: %d\r\n&quot;</span>, Enc2_cnt);</span><br><span class="line">    __HAL_TIM_SET_COUNTER(&amp;htim2, <span class="number">0</span>);</span><br><span class="line">    __HAL_TIM_SET_COUNTER(&amp;htim4, <span class="number">0</span>);</span><br><span class="line">    HAL_Delay(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>编码器测速</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824113610792.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824113610792.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824113610792"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824113729265.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824113729265.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824113729265"></p>
<p>根据自己购买的编码器参数，主要看<strong>脉冲数</strong>和<strong>减速比</strong>，我所用电机型号为驰海电机 GM25-370:</p>
<ul>
<li>脉冲数为11PPR(编码器线数),</li>
<li>减速比为1:45</li>
</ul>
<p>即 编码器转一圈计数值 = 脉冲数 * 减速比</p>
<p>又因为我们采用四倍频计数，所以</p>
<p>编码器转一圈计数值 = 脉冲数 <em> 减速比 </em> 4</p>
<p>再考虑到延时函数，将速度单位设置在m/s,需要再<strong>速度乘以1s/延时时间</strong></p>
<p>所以 <strong>速度 = 计数变化量 / 一圈计数值 = 计数变化量 / 减速比 / 脉冲数 / 4 * 1s/延时时间</strong></p>
<p>即 <strong>Speed = Cnt * 100 /45/ 11/4</strong></p>
<p><strong>可以将程序烧录，把清零程序注释，看看转一圈的计数值是否与自己的计算值对应</strong></p>
<p>则主函数<code>main.c</code>修改为</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">short</span> Enc1_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">short</span> Enc2_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">float</span> motor1_speed = <span class="number">0.00</span>;</span><br><span class="line"><span class="keyword">float</span> motor2_speed = <span class="number">0.00</span>;</span><br><span class="line"><span class="comment">//..................</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//..............................</span></span><br><span class="line">  HAL_TIM_Encoder_Start(&amp;htim2, TIM_CHANNEL_ALL);</span><br><span class="line">  HAL_TIM_Encoder_Start(&amp;htim4, TIM_CHANNEL_ALL);</span><br><span class="line">  HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line">  HAL_TIM_Base_Start_IT(&amp;htim4);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      Enc1_cnt = -(<span class="keyword">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim2);</span><br><span class="line">      Enc2_cnt = (<span class="keyword">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim4);</span><br><span class="line">      </span><br><span class="line">      motor1_speed = (<span class="keyword">float</span>)Enc1_cnt*<span class="number">100</span>/<span class="number">45</span>/<span class="number">11</span>/<span class="number">4</span>;</span><br><span class="line">      motor2_speed = (<span class="keyword">float</span>)Enc2_cnt*<span class="number">100</span>/<span class="number">45</span>/<span class="number">11</span>/<span class="number">4</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Enc1_cnt: %d\r\n&quot;</span>, Enc1_cnt);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Enc2_cnt: %d\r\n&quot;</span>, Enc2_cnt);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;motor1_speed: %.3f\r\n&quot;</span>, motor1_speed);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;motor2_speed: %.3f\r\n&quot;</span>, motor2_speed);</span><br><span class="line">      __HAL_TIM_SET_COUNTER(&amp;htim2, <span class="number">0</span>);</span><br><span class="line">      __HAL_TIM_SET_COUNTER(&amp;htim4, <span class="number">0</span>);</span><br><span class="line">      HAL_Delay(<span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>演示</strong></p>
<p>可以转动电机来观察计数值与速度，正转为正值，反转为负值</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/编码器测速.gif" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/编码器测速.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="编码器测速"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32F103C8T6烧录问题</title>
    <url>/2022/07/22/STM32F103C8t6%E7%83%A7%E5%BD%95%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近烧录stm32f103c8t6时总是检测不到stlink-v2，一开始以为是clion环境的事情，然后就换到Keil5中烧录，但还是No Target检测不到，所以排除开发环境。</p>
<p>又怀疑是stlink的事，把stlink接到了rct6上可以正常烧录，接到c6t6上也可以正常烧录，所以排除stlink的事。</p>
<p>所以只能是板子的事情，因为前几天c8t6的板子都可以正常烧录，一定不是坏的，肯定是哪里连接有问题。</p>
<p>在网上不停的寻找资料，终于找到一位老哥的解决办法<a href="https://www.it610.com/article/1544925712564162560.htm">解决STM32F103C8T6使用ST-Link V2烧录的问题</a></p>
<p>文章中提到了4条原因</p>
<ul>
<li>1、烧录程序一定要供电，不供电不能完成烧录</li>
<li>2、ST-LINK是否接触不良，还有杜邦线是不是好的，要内部断了也是不能正常使用的</li>
<li>3、按住reset点击download</li>
<li>4、boot0 接高电平download正常程序后，再接回低电平，即可烧录</li>
</ul>
<p>第四条就是我的解决办法，现将boot0接入高电平，然后可以完美进去烧录，然后在接回低电平，就可以正常烧录进去了。（移动跳线帽即可）</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220722222017978.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220722222017978.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220722222017978"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32Cubemx配置虚拟串口</title>
    <url>/2022/07/19/STM32Cubemx%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%B2%E5%8F%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="虚拟串口简介"><a href="#虚拟串口简介" class="headerlink" title="虚拟串口简介"></a>虚拟串口简介</h2><p>USB 虚拟串口，简称 VCP，是 Virtual COM Port 的简写，它是利用 USB 的 CDC 类来实现的一种通信接口。</p>
<p>我们可以利用 STM32 自带的 USB 功能，来实现一个 USB 虚拟串口，从而通过 USB，实现电脑与 STM32 的数据互传。上位机无需编写专门的 USB 程序，只需要一个串口调试]助手即可调试，非常实用。</p>
<h2 id="STM32CubeMx配置"><a href="#STM32CubeMx配置" class="headerlink" title="STM32CubeMx配置"></a>STM32CubeMx配置</h2><p><strong>Connectivity-&gt;USB,勾选Device(FS)</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201222323.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201222323.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719201222323"></p>
<p><strong>Middleware-&gt;USB_DEVICE,Class For FS IP 选择<code>Communication Device Class (Virtual Port Com)</code></strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201350197.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201350197.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719201350197"></p>
<p>时钟配置，<code>48 To USB</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201456147.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201456147.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719201456147"></p>
<h2 id="编写程序"><a href="#编写程序" class="headerlink" title="编写程序"></a>编写程序</h2><p>自动生成的USB虚拟串口文件</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201723531.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719201723531.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719201723531"></p>
<p>main.c中</p>
<p>包含头文件<code>#include &quot;usbd_cdc_if.h&quot;</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usbd_cdc_if.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buff[<span class="number">20</span>] = &#123;<span class="string">&quot;USB_CDC\r\n&quot;</span>&#125;;</span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Infinite loop */</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">    HAL_Delay(<span class="number">500</span>);</span><br><span class="line">    CDC_Transmit_FS(buff,<span class="keyword">sizeof</span>(buff));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>烧录程序，本次硬件使用的是stm32f103c6t6,可以使用micro USB线连接PC。</p>
<p><strong><em>注意！！！大部分商家给的USB线一般只具有充电功能，而无数据传输功能，所以插上电脑，电脑会没有反应，一定要用具有数据传输功能的USB线连接，一般来说手机充电线就可以。（这个问题找了很久！！）</em></strong></p>
<p>设备管理器查看端口，出现以下情况就表明虚拟串口连接成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719202420741.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719202420741.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719202420741"></p>
<p>打开XCOM软件，实现串口通信</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719202723060.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719202723060.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719202723060"></p>
<p><strong><em>2022/07/22:</em></strong></p>
<p><strong><em>补充 :</em></strong></p>
<h2 id="虚拟串口重定向usb-printf"><a href="#虚拟串口重定向usb-printf" class="headerlink" title="虚拟串口重定向usb_printf"></a>虚拟串口重定向<code>usb_printf</code></h2><p>在<code>usbd_cdc_if.c</code>中添加</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN INCLUDE */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdarg.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END INCLUDE */</span></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"><span class="comment">/* USER CODE BEGIN PRIVATE_FUNCTIONS_IMPLEMENTATION */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">usb_printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    va_list args;</span><br><span class="line">    <span class="keyword">uint32_t</span> length;</span><br><span class="line"></span><br><span class="line">    va_start(args, format);</span><br><span class="line">    length = vsnprintf((<span class="keyword">char</span> *)UserTxBufferFS, APP_TX_DATA_SIZE, (<span class="keyword">char</span> *)format, args);</span><br><span class="line">    va_end(args);</span><br><span class="line">    CDC_Transmit_FS(UserTxBufferFS, length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PRIVATE_FUNCTIONS_IMPLEMENTATION */</span></span><br></pre></td></tr></table></figure>
<p>然后再<code>usbd_cdc_if.c</code>声明函数即可</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32HAL库RS485-ModBus协议控制伺服电机</title>
    <url>/2023/05/27/STM32HAL%E5%BA%93RS485-ModBus%E5%8D%8F%E8%AE%AE%E6%8E%A7%E5%88%B6%E4%BC%BA%E6%9C%8D%E7%94%B5%E6%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32HAL库RS485-ModBus协议控制伺服电机"><a href="#STM32HAL库RS485-ModBus协议控制伺服电机" class="headerlink" title="STM32HAL库RS485-ModBus协议控制伺服电机"></a>STM32HAL库RS485-ModBus协议控制伺服电机</h1><p>一个月前，接手了一个学长的毕设小车，小车采用rs485通信的modbus协议驱动轮毂电机，与往常我学习的pwm控制电机方法大相径庭，在这里以这篇博客记录下该学习过程。</p>
<h2 id="小车主要架构"><a href="#小车主要架构" class="headerlink" title="小车主要架构"></a>小车主要架构</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/bc2d1ec33d2159e2ac3bb8c752c8a640.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/bc2d1ec33d2159e2ac3bb8c752c8a640.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422152803354"></p>
<h2 id="电机型号"><a href="#电机型号" class="headerlink" title="电机型号"></a>电机型号</h2><p><a href="http://www.zlingkj.com/">中菱轮毂电机</a></p>
<h2 id="轮毂驱动器ZLAC8015D"><a href="#轮毂驱动器ZLAC8015D" class="headerlink" title="轮毂驱动器ZLAC8015D"></a>轮毂驱动器ZLAC8015D</h2><ul>
<li>ZLAC8015D 的 RS485 支持 Modbus RTU 协议。</li>
<li>驱动器地址为 0-127 可设，默认为 1；</li>
<li>波特率 9600、19200、38400、57600、115200、128000、256000 等 7 种， 可通过软件设置。</li>
</ul>
<p><strong>默认 115200； 数据位 8，无奇偶校验，停止位 1</strong></p>
<h2 id="RS485通信"><a href="#RS485通信" class="headerlink" title="RS485通信"></a>RS485通信</h2><p>RS485接口组成的<strong>半双工网络</strong>，一般是<strong>两线制</strong>，多采用屏蔽双绞线传输，这种接线方式为总线式拓扑结构在同一总线上最多可以挂接32个结点。我们知道，最初数据是模拟信号输出简单过程量，后来仪表接口是RS232接口，这种接口可以实现点对点的通信方式，但这种方式不能实现联网功能，随后出现的RS485解决了这个问题。为此本文通过问答的形式详细介绍RS485接口。</p>
<p>RS485_RE为<strong>高电平</strong>的时候，DE为高电平有效，允许<strong>发送数据</strong><br>RS485_RE为<strong>低电平</strong>的时候，RE为低电平有效，允许<strong>接收数据</strong></p>
<p>485转换芯片可以把输入的串口信号转化成差分信号,也可以差分信号转化成串口信号</p>
<p>信号线A、B</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">A&gt;B</th>
<th style="text-align:center">0</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">B&gt;A</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
</div>
<h2 id="STM32实现主从机RS485通信"><a href="#STM32实现主从机RS485通信" class="headerlink" title="STM32实现主从机RS485通信"></a>STM32实现主从机RS485通信</h2><p>STM32F103ZET6 </p>
<p>RS485接口 A接A B接B</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b8a4f38008a073ada8a2aa6ecb30096d.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b8a4f38008a073ada8a2aa6ecb30096d.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422180220414"></p>
<p>从机：</p>
<p>RS485发送 “Hello World”</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> Buff[<span class="number">30</span>];</span><br><span class="line"><span class="comment">//*******************</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line">      HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET); <span class="comment">//拉高发送</span></span><br><span class="line">      <span class="built_in">sprintf</span>(Buff,<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">      HAL_UART_Transmit(&amp;huart2, Buff, <span class="keyword">sizeof</span>(Buff), <span class="number">0xffff</span>); </span><br><span class="line">      HAL_Delay(<span class="number">500</span>);</span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>主机：</p>
<p>RS485接收 “Hello World”</p>
<p>虚拟串口打印</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HAL_UART_Receive_IT(&amp;huart2, RxBuff,<span class="number">1</span>);</span><br><span class="line">HAL_GPIO_WritePin(GPIOD,GPIO_PIN_7, GPIO_PIN_RESET);  <span class="comment">//拉低接收</span></span><br><span class="line"><span class="comment">//*******************************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> i;</span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;Instance==USART2)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Receive_IT(&amp;huart2,RxBuff,<span class="number">10</span>);</span><br><span class="line">        CDC_Transmit_FS(RxBuff, <span class="keyword">sizeof</span>(RxBuff));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/bcef8e242e703374611f6adadbeb0ef4.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/bcef8e242e703374611f6adadbeb0ef4.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230417170911895"></p>
<h2 id="Modbus协议"><a href="#Modbus协议" class="headerlink" title="Modbus协议"></a>Modbus协议</h2><p>Modbus就是一种用在工业上的简单协议!</p>
<p>大致分为以下几种:</p>
<ul>
<li>Modbus-RTU</li>
<li>Modbus-ASCII</li>
<li>Modbus-TCP</li>
</ul>
<p>以上三种协议，一个设备只会有一种协议，该电机使用的是Modbus-RTU。</p>
<p>Modbus是<strong>主从方式通信</strong>，也就是说，不能同步进行通信，总线上每次只有一个数据进行传输，即主机发送，从机应答，主机不发送，总线上就没有数据通信。</p>
<h3 id="Modbus-Poll主机Modbus-Slave从机通信"><a href="#Modbus-Poll主机Modbus-Slave从机通信" class="headerlink" title="Modbus Poll主机Modbus Slave从机通信"></a>Modbus Poll主机Modbus Slave从机通信</h3><p>第三方测试软件：vspd、Modbus Poll、Modbus  Slave</p>
<p>虚拟一个串口</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/bce7bd088dc75569c0c3141c916d32ed.png" class="lazyload placeholder" data-srcset="https://img-blog.csdnimg.cn/img_convert/bce7bd088dc75569c0c3141c916d32ed.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422151542599"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e724c1c8ad5eae04bc38e982bfaec844.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e724c1c8ad5eae04bc38e982bfaec844.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422152049651"></p>
<p>修改配置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/cef7118adccbdaef3c4c166d35411565.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/cef7118adccbdaef3c4c166d35411565.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422152532666"></p>
<p><strong>读取数据</strong></p>
<p>发送</p>
<p>Tx:000024-    01 03 00 00 00 0A C5 CD</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">01</th>
<th style="text-align:center">03</th>
<th style="text-align:center">00 00</th>
<th style="text-align:center">00 0A</th>
<th style="text-align:center">C5 CD</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ID号</td>
<td style="text-align:center">功能码</td>
<td style="text-align:center">起始地址</td>
<td style="text-align:center">数据内容</td>
<td style="text-align:center">校验码</td>
</tr>
</tbody>
</table>
</div>
<p>接收</p>
<p>Rx:000143- 01 03 0A 00 01 00 02 00 01 00 00 00 00 37 26</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">01</th>
<th style="text-align:center">03</th>
<th style="text-align:center">0A</th>
<th style="text-align:center">00 01 00 02 00 01 00 00 00 00</th>
<th style="text-align:center">37 26</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ID号</td>
<td style="text-align:center">功能码</td>
<td style="text-align:center">字节长度</td>
<td style="text-align:center">数据内容</td>
<td style="text-align:center">校验位</td>
</tr>
</tbody>
</table>
</div>
<p><strong>发送单条数据</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">01</th>
<th style="text-align:center">06</th>
<th style="text-align:center">00 04</th>
<th style="text-align:center">00 03</th>
<th style="text-align:center">88 0A</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ID号</td>
<td style="text-align:center">功能码</td>
<td style="text-align:center">起始地址</td>
<td style="text-align:center">数据内容</td>
<td style="text-align:center">校验码</td>
</tr>
</tbody>
</table>
</div>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b7b03e3f0ed0726e4a8011311a42c57c.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/b7b03e3f0ed0726e4a8011311a42c57c.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422160343498"></p>
<p><strong>发送多条数据</strong></p>
<p>主机TX：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">ID</th>
<th style="text-align:center">功能码</th>
<th style="text-align:center">起始地址</th>
<th style="text-align:center">寄存器长度</th>
<th style="text-align:center">数据内容</th>
<th style="text-align:center">校验码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">01</td>
<td style="text-align:center">16(0X10)</td>
<td style="text-align:center">00 00</td>
<td style="text-align:center">00 05</td>
<td style="text-align:center">10字节</td>
<td style="text-align:center">XX XX</td>
</tr>
</tbody>
</table>
</div>
<p>Tx:001200-    01 10 00 03 00 01 02 00 04 A7 A0</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">ID</th>
<th style="text-align:center">功能码</th>
<th style="text-align:center">起始地址</th>
<th style="text-align:center">数据长度</th>
<th style="text-align:center">字节长度</th>
<th style="text-align:center">数据内容</th>
<th style="text-align:center">校验码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">01</td>
<td style="text-align:center">10</td>
<td style="text-align:center">00 03</td>
<td style="text-align:center">00 01</td>
<td style="text-align:center">02</td>
<td style="text-align:center">00 04</td>
<td style="text-align:center">A7 A0</td>
</tr>
</tbody>
</table>
</div>
<p>功能码：</p>
<ul>
<li>03-&gt;读取数据</li>
<li>06-&gt;发送单条数据</li>
<li>10-&gt;发送多条数据</li>
</ul>
<h3 id="SSCOM主机Modbus-Slave从机通信"><a href="#SSCOM主机Modbus-Slave从机通信" class="headerlink" title="SSCOM主机Modbus Slave从机通信"></a>SSCOM主机Modbus Slave从机通信</h3><p>读取数据</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/9bdf80fc4f22b11888dc14d80c9ab159.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/9bdf80fc4f22b11888dc14d80c9ab159.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422165736981"></p>
<p>发送单条数据</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/a97dc8cc33121ad43c153f5a9f2f9942.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/a97dc8cc33121ad43c153f5a9f2f9942.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422165911874"></p>
<p>发送多条数据</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c58093df3a0c52138f5d47735e7ccf0a.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c58093df3a0c52138f5d47735e7ccf0a.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230422170213418"></p>
<h3 id="STM32通过RS485完成Modbus协议通信"><a href="#STM32通过RS485完成Modbus协议通信" class="headerlink" title="STM32通过RS485完成Modbus协议通信"></a>STM32通过RS485完成Modbus协议通信</h3><h4 id="移植Modbus协议"><a href="#移植Modbus协议" class="headerlink" title="移植Modbus协议"></a>移植Modbus协议</h4><p><code>mbrtu_master.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MBRTU_MASTER_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MBRTU_MASTER_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mbrtu_master.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// MODBUS RTU 主机控制结构</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 收发数据缓存</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">uint8_t</span> ucBuf[<span class="number">128</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 收发数据状态</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">uint16_t</span> usStatus;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 如果使用了RTOS需要进行互斥,那么需要实现以下两个函数的绑定</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">void</span> (*lock)(<span class="keyword">void</span>);</span><br><span class="line">	<span class="keyword">void</span> (*unlock)(<span class="keyword">void</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 微秒延时函数,用于等待超时</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">void</span> (*delayms)(<span class="keyword">uint32_t</span> nms);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 定时器启动和停止函数</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">void</span> (*timerStop)(<span class="keyword">void</span>);</span><br><span class="line">	<span class="keyword">void</span> (*timerStart)(<span class="keyword">void</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 发送数据函数,可以是串口、TCP等</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">uint32_t</span> (*sendData)(<span class="keyword">const</span> <span class="keyword">void</span>* buf, <span class="keyword">uint32_t</span> len);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// 以下四个回调函数分别是:读线圈、读离散量输入、读保持寄存器、读输入寄存器</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">void</span> (*readCoilsCallback)(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span>* pucBitsOfCoilsState, <span class="keyword">uint16_t</span> usLen);</span><br><span class="line">	<span class="keyword">void</span> (*readDiscreteInputsCallback)(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span>* pucBitsOfDiscreteInputsState, <span class="keyword">uint16_t</span> usLen);</span><br><span class="line">	<span class="keyword">void</span> (*readHoldingRegistersCallback)(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span>* pusHoldingRegistersVal, <span class="keyword">uint16_t</span> usLen);</span><br><span class="line">	<span class="keyword">void</span> (*readInputRegistersCallback)(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span>* pusInputRegistersVal, <span class="keyword">uint16_t</span> usLen);</span><br><span class="line"></span><br><span class="line">&#125;MBRTUMaterTypeDef;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timerStop</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timerStart</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delayms</span><span class="params">(<span class="keyword">uint32_t</span> nms)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">sendData</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *buf, <span class="keyword">uint32_t</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readCoilsCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *pucBitsOfCoilsState, <span class="keyword">uint16_t</span> usLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readDiscreteInputsCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *pucBitsOfDiscreteInputsState, <span class="keyword">uint16_t</span> usLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readHoldingRegistersCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span> *pusHoldingRegistersVal, <span class="keyword">uint16_t</span> usLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readInputRegistersCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span> *pusInputRegistersVal, <span class="keyword">uint16_t</span> usLen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// MODBUS RTU 主机 API</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadCoils</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadDiscreteInputs</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadHoldingRegisters</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadInputRegisters</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteSingleCoil</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint8_t</span> ucState, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteSingleRegister</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usRegVal, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteMultipleCoils</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span>* pucStateBitsBuf, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteMultipleRegisters</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span>* pusRegVal, <span class="keyword">uint16_t</span> usTimeout)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// MODBUS RTU 主机接收数据回调函数和超时回调函数</span></span><br><span class="line"><span class="comment">/// </span></span><br><span class="line"><span class="comment">/// MBRTUMasterRecvByteISRCallback：放置于串口接收中断中</span></span><br><span class="line"><span class="comment">/// MBRTUMasterTimerISRCallback：放置于定时器超时中断中</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MBRTUMasterRecvByteISRCallback</span><span class="params">(MBRTUMaterTypeDef* psModbus, <span class="keyword">uint8_t</span> ucByte)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MBRTUMasterTimerISRCallback</span><span class="params">(MBRTUMaterTypeDef* psModbus)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* MBRTU_MASTER_H_ */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><code>mbrtu_master.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * mbrtu_master.c</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Created on: 2022年4月29日</span></span><br><span class="line"><span class="comment"> *      Author: hello</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mbrtu_master.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint16_t</span> <span class="title">usMBCRC16</span><span class="params">(<span class="keyword">uint8_t</span> *pucFrame, <span class="keyword">uint16_t</span> usLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> aucCRCHi[] =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> aucCRCLo[] =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xC3</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0xC2</span>, <span class="number">0xC6</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0xC7</span>,</span><br><span class="line">            <span class="number">0x05</span>, <span class="number">0xC5</span>, <span class="number">0xC4</span>, <span class="number">0x04</span>, <span class="number">0xCC</span>, <span class="number">0x0C</span>, <span class="number">0x0D</span>, <span class="number">0xCD</span>, <span class="number">0x0F</span>, <span class="number">0xCF</span>, <span class="number">0xCE</span>, <span class="number">0x0E</span>,</span><br><span class="line">            <span class="number">0x0A</span>, <span class="number">0xCA</span>, <span class="number">0xCB</span>, <span class="number">0x0B</span>, <span class="number">0xC9</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0xC8</span>, <span class="number">0xD8</span>, <span class="number">0x18</span>, <span class="number">0x19</span>, <span class="number">0xD9</span>,</span><br><span class="line">            <span class="number">0x1B</span>, <span class="number">0xDB</span>, <span class="number">0xDA</span>, <span class="number">0x1A</span>, <span class="number">0x1E</span>, <span class="number">0xDE</span>, <span class="number">0xDF</span>, <span class="number">0x1F</span>, <span class="number">0xDD</span>, <span class="number">0x1D</span>, <span class="number">0x1C</span>, <span class="number">0xDC</span>,</span><br><span class="line">            <span class="number">0x14</span>, <span class="number">0xD4</span>, <span class="number">0xD5</span>, <span class="number">0x15</span>, <span class="number">0xD7</span>, <span class="number">0x17</span>, <span class="number">0x16</span>, <span class="number">0xD6</span>, <span class="number">0xD2</span>, <span class="number">0x12</span>, <span class="number">0x13</span>, <span class="number">0xD3</span>,</span><br><span class="line">            <span class="number">0x11</span>, <span class="number">0xD1</span>, <span class="number">0xD0</span>, <span class="number">0x10</span>, <span class="number">0xF0</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0xF1</span>, <span class="number">0x33</span>, <span class="number">0xF3</span>, <span class="number">0xF2</span>, <span class="number">0x32</span>,</span><br><span class="line">            <span class="number">0x36</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0x37</span>, <span class="number">0xF5</span>, <span class="number">0x35</span>, <span class="number">0x34</span>, <span class="number">0xF4</span>, <span class="number">0x3C</span>, <span class="number">0xFC</span>, <span class="number">0xFD</span>, <span class="number">0x3D</span>,</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0x3F</span>, <span class="number">0x3E</span>, <span class="number">0xFE</span>, <span class="number">0xFA</span>, <span class="number">0x3A</span>, <span class="number">0x3B</span>, <span class="number">0xFB</span>, <span class="number">0x39</span>, <span class="number">0xF9</span>, <span class="number">0xF8</span>, <span class="number">0x38</span>,</span><br><span class="line">            <span class="number">0x28</span>, <span class="number">0xE8</span>, <span class="number">0xE9</span>, <span class="number">0x29</span>, <span class="number">0xEB</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0xEA</span>, <span class="number">0xEE</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0xEF</span>,</span><br><span class="line">            <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0xEC</span>, <span class="number">0x2C</span>, <span class="number">0xE4</span>, <span class="number">0x24</span>, <span class="number">0x25</span>, <span class="number">0xE5</span>, <span class="number">0x27</span>, <span class="number">0xE7</span>, <span class="number">0xE6</span>, <span class="number">0x26</span>,</span><br><span class="line">            <span class="number">0x22</span>, <span class="number">0xE2</span>, <span class="number">0xE3</span>, <span class="number">0x23</span>, <span class="number">0xE1</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0xE0</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x61</span>, <span class="number">0xA1</span>,</span><br><span class="line">            <span class="number">0x63</span>, <span class="number">0xA3</span>, <span class="number">0xA2</span>, <span class="number">0x62</span>, <span class="number">0x66</span>, <span class="number">0xA6</span>, <span class="number">0xA7</span>, <span class="number">0x67</span>, <span class="number">0xA5</span>, <span class="number">0x65</span>, <span class="number">0x64</span>, <span class="number">0xA4</span>,</span><br><span class="line">            <span class="number">0x6C</span>, <span class="number">0xAC</span>, <span class="number">0xAD</span>, <span class="number">0x6D</span>, <span class="number">0xAF</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>, <span class="number">0xAE</span>, <span class="number">0xAA</span>, <span class="number">0x6A</span>, <span class="number">0x6B</span>, <span class="number">0xAB</span>,</span><br><span class="line">            <span class="number">0x69</span>, <span class="number">0xA9</span>, <span class="number">0xA8</span>, <span class="number">0x68</span>, <span class="number">0x78</span>, <span class="number">0xB8</span>, <span class="number">0xB9</span>, <span class="number">0x79</span>, <span class="number">0xBB</span>, <span class="number">0x7B</span>, <span class="number">0x7A</span>, <span class="number">0xBA</span>,</span><br><span class="line">            <span class="number">0xBE</span>, <span class="number">0x7E</span>, <span class="number">0x7F</span>, <span class="number">0xBF</span>, <span class="number">0x7D</span>, <span class="number">0xBD</span>, <span class="number">0xBC</span>, <span class="number">0x7C</span>, <span class="number">0xB4</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0xB5</span>,</span><br><span class="line">            <span class="number">0x77</span>, <span class="number">0xB7</span>, <span class="number">0xB6</span>, <span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0xB2</span>, <span class="number">0xB3</span>, <span class="number">0x73</span>, <span class="number">0xB1</span>, <span class="number">0x71</span>, <span class="number">0x70</span>, <span class="number">0xB0</span>,</span><br><span class="line">            <span class="number">0x50</span>, <span class="number">0x90</span>, <span class="number">0x91</span>, <span class="number">0x51</span>, <span class="number">0x93</span>, <span class="number">0x53</span>, <span class="number">0x52</span>, <span class="number">0x92</span>, <span class="number">0x96</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x97</span>,</span><br><span class="line">            <span class="number">0x55</span>, <span class="number">0x95</span>, <span class="number">0x94</span>, <span class="number">0x54</span>, <span class="number">0x9C</span>, <span class="number">0x5C</span>, <span class="number">0x5D</span>, <span class="number">0x9D</span>, <span class="number">0x5F</span>, <span class="number">0x9F</span>, <span class="number">0x9E</span>, <span class="number">0x5E</span>,</span><br><span class="line">            <span class="number">0x5A</span>, <span class="number">0x9A</span>, <span class="number">0x9B</span>, <span class="number">0x5B</span>, <span class="number">0x99</span>, <span class="number">0x59</span>, <span class="number">0x58</span>, <span class="number">0x98</span>, <span class="number">0x88</span>, <span class="number">0x48</span>, <span class="number">0x49</span>, <span class="number">0x89</span>,</span><br><span class="line">            <span class="number">0x4B</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x4A</span>, <span class="number">0x4E</span>, <span class="number">0x8E</span>, <span class="number">0x8F</span>, <span class="number">0x4F</span>, <span class="number">0x8D</span>, <span class="number">0x4D</span>, <span class="number">0x4C</span>, <span class="number">0x8C</span>,</span><br><span class="line">            <span class="number">0x44</span>, <span class="number">0x84</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0x87</span>, <span class="number">0x47</span>, <span class="number">0x46</span>, <span class="number">0x86</span>, <span class="number">0x82</span>, <span class="number">0x42</span>, <span class="number">0x43</span>, <span class="number">0x83</span>,</span><br><span class="line">            <span class="number">0x41</span>, <span class="number">0x81</span>, <span class="number">0x80</span>, <span class="number">0x40</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint8_t</span> ucCRCHi = <span class="number">0xFF</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> ucCRCLo = <span class="number">0xFF</span>;</span><br><span class="line">    <span class="keyword">int</span> iIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usLen--)</span><br><span class="line">    &#123;</span><br><span class="line">        iIndex = ucCRCLo ^ *(pucFrame++);</span><br><span class="line">        ucCRCLo = (<span class="keyword">uint8_t</span>)(ucCRCHi ^ aucCRCHi[iIndex]);</span><br><span class="line">        ucCRCHi = aucCRCLo[iIndex];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">uint16_t</span>)(ucCRCHi &lt;&lt; <span class="number">8</span> | ucCRCLo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取数据</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">MBRTUMasterRead</span><span class="params">(MBRTUMaterTypeDef *pMaster, <span class="keyword">uint8_t</span> ucSlaveAddr, <span class="keyword">uint8_t</span> ucCmd, <span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> crc;</span><br><span class="line"></span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">0</span>] = ucSlaveAddr;</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">1</span>] = ucCmd;</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">2</span>] = ((usStartAddr &amp; <span class="number">0XFF00</span>) &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">3</span>] = (usStartAddr &amp; <span class="number">0XFF</span>);</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">4</span>] = ((usNum &amp; <span class="number">0XFF00</span>) &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">5</span>] = (usNum &amp; <span class="number">0XFF</span>);</span><br><span class="line"></span><br><span class="line">    crc = usMBCRC16((<span class="keyword">uint8_t</span> *)pMaster-&gt;ucBuf, <span class="number">6</span>);</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">6</span>] = (<span class="keyword">uint8_t</span>)(crc &amp; <span class="number">0xFF</span>);</span><br><span class="line">    pMaster-&gt;ucBuf[<span class="number">7</span>] = (<span class="keyword">uint8_t</span>)(crc &gt;&gt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pMaster-&gt;sendData(pMaster-&gt;ucBuf, <span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机读取线圈状态</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      要读取的线圈起始地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x01</span></span><br><span class="line"><span class="comment"> * @param  usNum          要读取的线圈数量</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadCoils</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    MBRTUMasterRead(psModbus, ucSlaveAddress, <span class="number">0X01</span>, usAddress, usNum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X01</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                psModbus-&gt;readCoilsCallback(usAddress, usNum, &amp;psModbus-&gt;ucBuf[<span class="number">3</span>], psModbus-&gt;ucBuf[<span class="number">2</span>]);</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机读取离散量输入</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      要读取的离散量起始地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x02</span></span><br><span class="line"><span class="comment"> * @param  usNum          要读取的离散量数量</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadDiscreteInputs</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    MBRTUMasterRead(psModbus, ucSlaveAddress, <span class="number">0X02</span>, usAddress, usNum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X02</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                psModbus-&gt;readDiscreteInputsCallback(usAddress, usNum, &amp;psModbus-&gt;ucBuf[<span class="number">3</span>], psModbus-&gt;ucBuf[<span class="number">2</span>]);</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机读取保持寄存器!!!!!!!!!!!!</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      要读取的保持寄存器起始地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x03</span></span><br><span class="line"><span class="comment"> * @param  usNum          要读取的保持寄存器数量</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadHoldingRegisters</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    MBRTUMasterRead(psModbus, ucSlaveAddress, <span class="number">0X03</span>, usAddress, usNum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X03</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                psModbus-&gt;readHoldingRegistersCallback(usAddress, usNum, (<span class="keyword">const</span> <span class="keyword">uint16_t</span> *)&amp;psModbus-&gt;ucBuf[<span class="number">3</span>], psModbus-&gt;ucBuf[<span class="number">2</span>] &gt;&gt; <span class="number">1</span>);</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机读取输入寄存器</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      要读取的输入寄存器起始地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x04</span></span><br><span class="line"><span class="comment"> * @param  usNum          要读取的输入寄存器数量</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterReadInputRegisters</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    MBRTUMasterRead(psModbus, ucSlaveAddress, <span class="number">0X04</span>, usAddress, usNum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X04</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                psModbus-&gt;readInputRegistersCallback(usAddress, usNum, (<span class="keyword">const</span> <span class="keyword">uint16_t</span> *)&amp;psModbus-&gt;ucBuf[<span class="number">3</span>], psModbus-&gt;ucBuf[<span class="number">2</span>] &gt;&gt; <span class="number">1</span>);</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机写单个线圈</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      线圈地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x05</span></span><br><span class="line"><span class="comment"> * @param  ucState        要设置的线圈状态，1或者0</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteSingleCoil</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint8_t</span> ucState, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line">    <span class="keyword">uint16_t</span> crc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">0</span>] = ucSlaveAddress;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">1</span>] = <span class="number">0X05</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">2</span>] = usAddress &amp; <span class="number">0XFF</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">3</span>] = usAddress &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">4</span>] = ucState ? <span class="number">0XFF</span> : <span class="number">0X00</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">5</span>] = <span class="number">0X00</span>;</span><br><span class="line">    crc = usMBCRC16((<span class="keyword">uint8_t</span> *)psModbus-&gt;ucBuf, <span class="number">6</span>);</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">6</span>] = (<span class="keyword">uint8_t</span>)(crc &amp; <span class="number">0xFF</span>);</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">7</span>] = (<span class="keyword">uint8_t</span>)(crc &gt;&gt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">    psModbus-&gt;sendData(psModbus-&gt;ucBuf, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X05</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机写单个寄存器!!!!!!!!!!!</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      寄存器地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x06</span></span><br><span class="line"><span class="comment"> * @param  usRegVal       寄存器值</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//	MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, 1, RUN_MODE_ADDR, 0x0003, 100);</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteSingleRegister</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usRegVal, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line">    <span class="keyword">uint16_t</span> crc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">0</span>] = ucSlaveAddress;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">1</span>] = <span class="number">0X06</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">2</span>] = usAddress &amp; <span class="number">0XFF</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">3</span>] = usAddress &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">4</span>] = usRegVal &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">5</span>] = usRegVal &amp; <span class="number">0XFF</span>;</span><br><span class="line">    crc = usMBCRC16((<span class="keyword">uint8_t</span> *)psModbus-&gt;ucBuf, <span class="number">6</span>);</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">6</span>] = (<span class="keyword">uint8_t</span>)(crc &amp; <span class="number">0xFF</span>);</span><br><span class="line">    psModbus-&gt;ucBuf[<span class="number">7</span>] = (<span class="keyword">uint8_t</span>)(crc &gt;&gt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">    psModbus-&gt;sendData(psModbus-&gt;ucBuf, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X06</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机写多个线圈状态</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress  从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress       线圈起始地址</span></span><br><span class="line"><span class="comment"> * @param  usNum           要写的线圈数量</span></span><br><span class="line"><span class="comment"> * @param  pucStateBitsBuf 存放线圈状态，1比特代表一个线圈状态</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteMultipleCoils</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *pucStateBitsBuf, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line">    <span class="keyword">uint16_t</span> crc;</span><br><span class="line">    <span class="keyword">uint16_t</span> usIndex = <span class="number">0</span>, usBytes = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = ucSlaveAddress;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = <span class="number">0X0F</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usAddress &amp; <span class="number">0XFF</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usAddress &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usNum &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usNum &amp; <span class="number">0XFF</span>;</span><br><span class="line"></span><br><span class="line">    usBytes = (usNum - <span class="number">1</span>) / <span class="number">8</span> + <span class="number">1</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usBytes;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usBytes--)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;ucBuf[usIndex++] = *pucStateBitsBuf++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    crc = usMBCRC16((<span class="keyword">uint8_t</span> *)psModbus-&gt;ucBuf, usIndex);</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = (<span class="keyword">uint8_t</span>)(crc &amp; <span class="number">0xFF</span>);</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = (<span class="keyword">uint8_t</span>)(crc &gt;&gt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">    psModbus-&gt;sendData(psModbus-&gt;ucBuf, usIndex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X0F</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主机写多个寄存器!!!!!!!!!!!</span></span><br><span class="line"><span class="comment"> * @param  ucSlaveAddress 从机地址</span></span><br><span class="line"><span class="comment"> * @param  usAddress      要写的寄存器起始地址</span></span><br><span class="line"><span class="comment"> * @param  usCmd          0x10</span></span><br><span class="line"><span class="comment"> * @param  usNum          要写的寄存器数量</span></span><br><span class="line"><span class="comment"> * @param  pusRegVal      存放要写的寄存器值</span></span><br><span class="line"><span class="comment"> * @param  usTimeout      超时时间,单位毫秒</span></span><br><span class="line"><span class="comment"> * @return                0:成功  &lt;0:执行失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MBRTUMasterWriteMultipleRegisters</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucSlaveAddress, <span class="keyword">uint16_t</span> usAddress, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span> *pusRegVal, <span class="keyword">uint16_t</span> usTimeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> delay;</span><br><span class="line">    <span class="keyword">uint16_t</span> crc;</span><br><span class="line">    <span class="keyword">uint16_t</span> usIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;lock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = ucSlaveAddress;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = <span class="number">0X10</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usAddress &amp; <span class="number">0XFF</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usAddress &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usNum &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usNum &amp; <span class="number">0XFF</span>;</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = usNum &lt;&lt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usNum--)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;ucBuf[usIndex++] = *pusRegVal &gt;&gt; <span class="number">8</span>;</span><br><span class="line">        psModbus-&gt;ucBuf[usIndex++] = *pusRegVal &amp; <span class="number">0XFF</span>;</span><br><span class="line">        pusRegVal++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    crc = usMBCRC16((<span class="keyword">uint8_t</span> *)psModbus-&gt;ucBuf, usIndex);</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = (<span class="keyword">uint8_t</span>)(crc &amp; <span class="number">0xFF</span>);</span><br><span class="line">    psModbus-&gt;ucBuf[usIndex++] = (<span class="keyword">uint8_t</span>)(crc &gt;&gt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">    psModbus-&gt;sendData(psModbus-&gt;ucBuf, usIndex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (usTimeout != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (psModbus-&gt;usStatus &amp; <span class="number">0X8000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (psModbus-&gt;ucBuf[<span class="number">0</span>] == ucSlaveAddress &amp;&amp; psModbus-&gt;ucBuf[<span class="number">1</span>] == <span class="number">0X10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psModbus-&gt;usStatus = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        delay = usTimeout &gt; <span class="number">5</span> ? <span class="number">5</span> : usTimeout;</span><br><span class="line">        usTimeout -= delay;</span><br><span class="line">        psModbus-&gt;delayms(delay);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;unlock != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;unlock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MBRTUMasterRecvByteISRCallback</span><span class="params">(MBRTUMaterTypeDef *psModbus, <span class="keyword">uint8_t</span> ucByte)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    psModbus-&gt;timerStop();</span><br><span class="line">    <span class="keyword">if</span> (psModbus-&gt;usStatus &lt; <span class="keyword">sizeof</span>(psModbus-&gt;ucBuf))</span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;ucBuf[psModbus-&gt;usStatus++] = ucByte;</span><br><span class="line">        psModbus-&gt;timerStart();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        psModbus-&gt;usStatus |= <span class="number">0X8000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MBRTUMasterTimerISRCallback</span><span class="params">(MBRTUMaterTypeDef *psModbus)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    psModbus-&gt;timerStop();</span><br><span class="line">    psModbus-&gt;usStatus |= <span class="number">0X8000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_RTOS</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mutex_lock</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mutex_unlock</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timerStop</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_TIM_Base_Stop_IT(&amp;htim3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timerStart</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    __HAL_TIM_SET_COUNTER(&amp;htim3, <span class="number">0</span>);</span><br><span class="line">    HAL_TIM_Base_Start_IT(&amp;htim3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delayms</span><span class="params">(<span class="keyword">uint32_t</span> nms)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_Delay(nms);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">sendData</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *buf, <span class="keyword">uint32_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (HAL_UART_Transmit(&amp;huart2, (<span class="keyword">uint8_t</span> *)buf, len, <span class="number">100</span>) != HAL_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        len = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readCoilsCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *pucBitsOfCoilsState, <span class="keyword">uint16_t</span> usLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> ucLoops = (usNum - <span class="number">1</span>) / <span class="number">8</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> ucState, ucBits;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Read %d coils starting at start address %d: &quot;</span>, usNum, usStartAddr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (ucLoops != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ucState = *pucBitsOfCoilsState++;</span><br><span class="line">        ucBits = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (usNum != <span class="number">0</span> &amp;&amp; ucBits &lt; <span class="number">8</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ucState &amp; <span class="number">0X01</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">            ucState &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            usNum--;</span><br><span class="line">            ucBits++;</span><br><span class="line">        &#125;</span><br><span class="line">        ucLoops--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readDiscreteInputsCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *pucBitsOfDiscreteInputsState, <span class="keyword">uint16_t</span> usLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> ucLoops = (usNum - <span class="number">1</span>) / <span class="number">8</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> ucState, ucBits;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Read %d discrete inputs starting at start address %d: &quot;</span>, usNum, usStartAddr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (ucLoops != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ucState = *pucBitsOfDiscreteInputsState++;</span><br><span class="line">        ucBits = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (usNum != <span class="number">0</span> &amp;&amp; ucBits &lt; <span class="number">8</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ucState &amp; <span class="number">0X01</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">            ucState &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            usNum--;</span><br><span class="line">            ucBits++;</span><br><span class="line">        &#125;</span><br><span class="line">        ucLoops--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readHoldingRegistersCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span> *pusHoldingRegistersVal, <span class="keyword">uint16_t</span> usLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> val;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Read %d hold registers starting at start address %d: &quot;</span>, usNum, usStartAddr);</span><br><span class="line">    <span class="keyword">while</span> (usLen--)</span><br><span class="line">    &#123;</span><br><span class="line">        val = *pusHoldingRegistersVal++;</span><br><span class="line">        val = ((val &amp; <span class="number">0X00FF</span>) &lt;&lt; <span class="number">8</span>) | ((val &amp; <span class="number">0XFF00</span>) &gt;&gt; <span class="number">8</span>); <span class="comment">// 转换大小端</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04X &quot;</span>, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readInputRegistersCallback</span><span class="params">(<span class="keyword">uint16_t</span> usStartAddr, <span class="keyword">uint16_t</span> usNum, <span class="keyword">const</span> <span class="keyword">uint16_t</span> *pusInputRegistersVal, <span class="keyword">uint16_t</span> usLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> val;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Read %d input registers starting at start address %d: &quot;</span>, usNum, usStartAddr);</span><br><span class="line">    <span class="keyword">while</span> (usLen--)</span><br><span class="line">    &#123;</span><br><span class="line">        val = *pusInputRegistersVal++;</span><br><span class="line">        val = ((val &amp; <span class="number">0X00FF</span>) &lt;&lt; <span class="number">8</span>) | ((val &amp; <span class="number">0XFF00</span>) &gt;&gt; <span class="number">8</span>); <span class="comment">// 转换大小端</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04X &quot;</span>, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MBRTUMaterTypeDef MBRTUHandle =</span><br><span class="line">        &#123;</span><br><span class="line">                .delayms = delayms,</span><br><span class="line">                .timerStart = timerStart,</span><br><span class="line">                .timerStop = timerStop,</span><br><span class="line">                .sendData = sendData,</span><br><span class="line">                .readCoilsCallback = readCoilsCallback,</span><br><span class="line">                .readDiscreteInputsCallback = readDiscreteInputsCallback,</span><br><span class="line">                .readHoldingRegistersCallback = readHoldingRegistersCallback,</span><br><span class="line">                .readInputRegistersCallback = readInputRegistersCallback,</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_RTOS <span class="comment">// 使用了RTOS那么需要实现互斥</span></span></span><br><span class="line">                .lock = mutex_lock,</span><br><span class="line">                .unlock = mutex_unlock,</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure>
<p><code>main.c</code></p>
<p>TX </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> MBRTUMaterTypeDef MBRTUHandle;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">/*.............*/</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET); <span class="comment">//拉高发送</span></span><br><span class="line">      MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">6</span>, <span class="number">0X0501</span>, <span class="number">100</span>);</span><br><span class="line">      HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/cdc1f6ecde37c0fefd307bf02f90b1ad.gif" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/cdc1f6ecde37c0fefd307bf02f90b1ad.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h4 id="STM32主机Modbus-Slave从机通信"><a href="#STM32主机Modbus-Slave从机通信" class="headerlink" title="STM32主机Modbus Slave从机通信"></a>STM32主机Modbus Slave从机通信</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mbrtu_master.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> MBRTUMaterTypeDef MBRTUHandle;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;=<span class="number">255</span>;j++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">8</span>;i++) &#123;</span><br><span class="line">        MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, i, j, <span class="number">100</span>);</span><br><span class="line">        HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/05e1ae7876487613c3178ce86f2013cc.gif" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/05e1ae7876487613c3178ce86f2013cc.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h4 id="STM32按键控制发送ZLAC8015D电机指令"><a href="#STM32按键控制发送ZLAC8015D电机指令" class="headerlink" title="STM32按键控制发送ZLAC8015D电机指令"></a>STM32按键控制发送ZLAC8015D电机指令</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">      <span class="keyword">if</span> (HAL_GPIO_ReadPin(WK_UP_GPIO_Port, WK_UP_Pin) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">/*延时一小段时间，消除抖动*/</span></span><br><span class="line">            HAL_Delay(<span class="number">10</span>);</span><br><span class="line">            <span class="comment">/*延时时间后再来判断按键状态，如果还是按下状态说明按键确实被按下*/</span></span><br><span class="line">            <span class="keyword">if</span> (HAL_GPIO_ReadPin(WK_UP_GPIO_Port, WK_UP_Pin) == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">/*等待按键弹开才退出按键扫描函数*/</span></span><br><span class="line">                <span class="keyword">while</span> (HAL_GPIO_ReadPin(WK_UP_GPIO_Port, WK_UP_Pin) == <span class="number">1</span>);</span><br><span class="line">                MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X200D</span>, <span class="number">0x0003</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//                MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, 1, 0X2088, 0X0064, 100);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (HAL_GPIO_ReadPin(KEY0_GPIO_Port, KEY0_Pin) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">/*延时一小段时间，消除抖动*/</span></span><br><span class="line">            HAL_Delay(<span class="number">10</span>);</span><br><span class="line">            <span class="comment">/*延时时间后再来判断按键状态，如果还是按下状态说明按键确实被按下*/</span></span><br><span class="line">            <span class="keyword">if</span> (HAL_GPIO_ReadPin(KEY0_GPIO_Port, KEY0_Pin) == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">/*等待按键弹开才退出按键扫描函数*/</span></span><br><span class="line">                <span class="keyword">while</span> (HAL_GPIO_ReadPin(KEY0_GPIO_Port, KEY0_Pin) == <span class="number">0</span>);</span><br><span class="line">           </span><br><span class="line">                MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X200E</span>, <span class="number">0x0008</span>, <span class="number">100</span>);</span><br><span class="line">                HAL_Delay(<span class="number">10</span>);</span><br><span class="line">                MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X200E</span>, <span class="number">0x0010</span>, <span class="number">100</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">/*延时一小段时间，消除抖动*/</span></span><br><span class="line">            HAL_Delay(<span class="number">10</span>);</span><br><span class="line">            <span class="comment">/*延时时间后再来判断按键状态，如果还是按下状态说明按键确实被按下*/</span></span><br><span class="line">            <span class="keyword">if</span> (HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">/*等待按键弹开才退出按键扫描函数*/</span></span><br><span class="line">                <span class="keyword">while</span> (HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">0</span>);</span><br><span class="line">                MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X2088</span>, <span class="number">0X0064</span>, <span class="number">100</span>);</span><br><span class="line"><span class="comment">//                HAL_Delay(10);</span></span><br><span class="line">                MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X2089</span>, <span class="number">0X0064</span>, <span class="number">100</span>);</span><br><span class="line">                HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_5);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>指令依次是</p>
<p>设置速度模式</p>
<p>使能</p>
<p>电机同步启动</p>
<p>设置左电机目标转速100RPM</p>
<p>设置右点击目标转速100RPM</p>
<p>、<img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/6b9319d49de1c8f7ffcfa7a7d75a6616.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/6b9319d49de1c8f7ffcfa7a7d75a6616.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230430183058256"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/cdb4964956f75fb731cfd64c634b34e7.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/cdb4964956f75fb731cfd64c634b34e7.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230429183327552"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32HAL库驱动DHT11和BH1750</title>
    <url>/2022/07/25/STM32HAL%E5%BA%93%E9%A9%B1%E5%8A%A8DHT11%E5%92%8CBH1750/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h2><ul>
<li>stm32f103c8t6</li>
<li>DHT11(温湿度传感器)</li>
<li>BH1750(光照度传感器)</li>
<li>OLED</li>
<li>micro USB数据传输线</li>
</ul>
<h2 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><ul>
<li>sys-&gt;Debug-&gt;Serial Wrie</li>
<li>RCC-&gt;HSE-&gt;Crystal/Cerarnic Resonator</li>
<li>PC13-&gt;GPIO_Out</li>
<li>TIM1-&gt;Clock Source-&gt;Internal Clock</li>
</ul>
<p><strong>Parameter Settings</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725090846257.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725090846257.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725090846257"></p>
<p>为后面DHT11的延时us起作用</p>
<ul>
<li>TIM2-&gt;Clock Source-&gt;Internal Clock</li>
</ul>
<p><strong>Parameter Settings</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725090436706.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725090436706.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725090436706"></p>
<p>NVIC Settings-&gt;TIM2 global interrupt </p>
<ul>
<li><p>[x] Enabled</p>
</li>
<li><p>打开I2C1</p>
</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725090808768.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725090808768.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725090808768"></p>
<ul>
<li>USB-&gt;Device(FS)   USB_DEVICE-&gt;Class For FS IP-&gt;Communication Device Class (Virtual Port Com)</li>
<li>Clock Configuration :<strong>48 To USB(MHz)</strong></li>
</ul>
<h2 id="DHT11代码编写"><a href="#DHT11代码编写" class="headerlink" title="DHT11代码编写"></a>DHT11代码编写</h2><p>DHT11是一款温湿度一体化的数字传感器，该传感器包括一个电阻式测湿元件和一个NTC测温元件，并与一个高性能8位单片机连接。通过单片机微处理器简单的电路连接就能够实时的采集湿度和温度。DHT11与STM32之间能采用简单的单总线进行通讯，仅需一个IO口。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725092738781.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725092738781.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725092738781"></p>
<p>本次IO口使用的是PA8</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725091332163.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725091332163.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725091332163"></p>
<p><code>dht11.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __DHT11_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __DHT11_H   </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f1xx_hal.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//IO方向设置</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_IO_IN()  &#123;GPIOA-&gt;CRH&amp;=0XFFFFFFF0;GPIOA-&gt;CRH|=8;&#125;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_IO_OUT() &#123;GPIOA-&gt;CRH&amp;=0XFFFFFFF0;GPIOA-&gt;CRH|=3;&#125;</span></span><br><span class="line"><span class="comment">////IO操作函数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    DHT11_DQ_IN   HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_8) <span class="comment">//数据端口    PA0入方向</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//初始化DHT11</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Read_Data</span><span class="params">(<span class="keyword">uint8_t</span> *humiH,<span class="keyword">uint8_t</span> *humiL,<span class="keyword">uint8_t</span> *tempH,<span class="keyword">uint8_t</span> *tempL)</span></span>;<span class="comment">//读取温湿度</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Read_Byte</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//读出一个字节</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Read_Bit</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//读出一个位</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Check</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//检测是否存在DHT11</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DHT11_Rst</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//复位DHT11  </span></span><br><span class="line">                      </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>dht11.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="comment">//利用TIM1,延时1us</span></span><br><span class="line"><span class="comment">//预分频因子设为72-1，向上计数，自动重载值为65535；因此计数器CNT_CLK = 1MHz，计数器周期为1us</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_us</span><span class="params">(<span class="keyword">uint16_t</span> us)</span></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> differ = <span class="number">0xffff</span>-us<span class="number">-5</span>;</span><br><span class="line">    __HAL_TIM_SET_COUNTER(&amp;htim1,differ);  <span class="comment">//设定TIM7计数器起始值</span></span><br><span class="line">    HAL_TIM_Base_Start(&amp;htim1);       <span class="comment">//启动定时器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(differ &lt; <span class="number">0xffff</span><span class="number">-5</span>)&#123;  <span class="comment">//判断</span></span><br><span class="line">        differ = __HAL_TIM_GET_COUNTER(&amp;htim1);       <span class="comment">//查询计数器的计数值</span></span><br><span class="line">    &#125;</span><br><span class="line">    HAL_TIM_Base_Stop(&amp;htim1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//复位DHT11</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DHT11_Rst</span><span class="params">(<span class="keyword">void</span>)</span>      </span></span><br><span class="line"><span class="function"></span>&#123;                 </span><br><span class="line">      DHT11_IO_OUT();    <span class="comment">//SET OUTPUT</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_8,GPIO_PIN_RESET);    <span class="comment">//拉低DQ</span></span><br><span class="line">    HAL_Delay(<span class="number">20</span>);     <span class="comment">//拉低至少18ms</span></span><br><span class="line">    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_8,GPIO_PIN_SET);      <span class="comment">//DQ=1 </span></span><br><span class="line">      delay_us(<span class="number">30</span>);      <span class="comment">//主机拉高20~40us</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//等待DHT11的回应</span></span><br><span class="line"><span class="comment">//返回1:未检测到DHT11的存在</span></span><br><span class="line"><span class="comment">//返回0:存在</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Check</span><span class="params">(<span class="keyword">void</span>)</span>     </span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">   <span class="keyword">uint8_t</span> retry=<span class="number">0</span>;</span><br><span class="line">   DHT11_IO_IN();<span class="comment">//SET INPUT   </span></span><br><span class="line">    <span class="keyword">while</span> (DHT11_DQ_IN&amp;&amp;retry&lt;<span class="number">100</span>)<span class="comment">//DHT11会拉低40~80us</span></span><br><span class="line">   &#123;</span><br><span class="line">      retry++;</span><br><span class="line">      delay_us(<span class="number">1</span>);</span><br><span class="line">   &#125;;  </span><br><span class="line">   <span class="keyword">if</span>(retry&gt;=<span class="number">100</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">else</span> retry=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!DHT11_DQ_IN&amp;&amp;retry&lt;<span class="number">100</span>)<span class="comment">//DHT11拉低后会再次拉高40~80us</span></span><br><span class="line">   &#123;</span><br><span class="line">      retry++;</span><br><span class="line">      delay_us(<span class="number">1</span>);</span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="keyword">if</span>(retry&gt;=<span class="number">100</span>)<span class="keyword">return</span> <span class="number">1</span>;        </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从DHT11读取一个位</span></span><br><span class="line"><span class="comment">//返回值：1/0</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Read_Bit</span><span class="params">(<span class="keyword">void</span>)</span>          </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">uint8_t</span> retry=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(DHT11_DQ_IN&amp;&amp;retry&lt;<span class="number">100</span>)<span class="comment">//等待变为低电平</span></span><br><span class="line">   &#123;</span><br><span class="line">      retry++;</span><br><span class="line">      delay_us(<span class="number">1</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   retry=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(!DHT11_DQ_IN&amp;&amp;retry&lt;<span class="number">100</span>)<span class="comment">//等待变高电平</span></span><br><span class="line">   &#123;</span><br><span class="line">      retry++;</span><br><span class="line">      delay_us(<span class="number">1</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   delay_us(<span class="number">40</span>);<span class="comment">//等待40us</span></span><br><span class="line">   <span class="keyword">if</span>(DHT11_DQ_IN)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从DHT11读取一个字节</span></span><br><span class="line"><span class="comment">//返回值：读到的数据</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Read_Byte</span><span class="params">(<span class="keyword">void</span>)</span>    </span></span><br><span class="line"><span class="function"></span>&#123;        </span><br><span class="line">    <span class="keyword">uint8_t</span> i,dat;</span><br><span class="line">    dat=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++) </span><br><span class="line">   &#123;</span><br><span class="line">          dat&lt;&lt;=<span class="number">1</span>; </span><br><span class="line">       dat|=DHT11_Read_Bit();</span><br><span class="line">    &#125;                     </span><br><span class="line">    <span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从DHT11读取一次数据</span></span><br><span class="line"><span class="comment">//temp:温度值(范围:0~50°)</span></span><br><span class="line"><span class="comment">//humi:湿度值(范围:20%~90%)</span></span><br><span class="line"><span class="comment">//返回值：0,正常;1,读取失败</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Read_Data</span><span class="params">(<span class="keyword">uint8_t</span> *humiH,<span class="keyword">uint8_t</span> *humiL,<span class="keyword">uint8_t</span> *tempH,<span class="keyword">uint8_t</span> *tempL)</span>    </span></span><br><span class="line"><span class="function"></span>&#123;        </span><br><span class="line">   <span class="keyword">uint8_t</span> buf[<span class="number">5</span>];</span><br><span class="line">   <span class="keyword">uint8_t</span> i;</span><br><span class="line">   DHT11_Rst();</span><br><span class="line">   <span class="keyword">if</span>(DHT11_Check()==<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)<span class="comment">//读取40位数据</span></span><br><span class="line">      &#123;</span><br><span class="line">         buf[i]=DHT11_Read_Byte();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>((buf[<span class="number">0</span>]+buf[<span class="number">1</span>]+buf[<span class="number">2</span>]+buf[<span class="number">3</span>])==buf[<span class="number">4</span>])</span><br><span class="line">      &#123;</span><br><span class="line">         *humiH=buf[<span class="number">0</span>];       </span><br><span class="line">         *humiL=buf[<span class="number">1</span>];       </span><br><span class="line">         *tempH=buf[<span class="number">2</span>];</span><br><span class="line">         *tempL=buf[<span class="number">3</span>];</span><br><span class="line">            </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;      </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化DHT11的IO口 DQ 同时检测DHT11的存在</span></span><br><span class="line"><span class="comment">//返回1:不存在</span></span><br><span class="line"><span class="comment">//返回0:存在        </span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">DHT11_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">   HAL_GPIO_WritePin(GPIOA,GPIO_PIN_8,GPIO_PIN_SET);                  <span class="comment">//PA8 输出高</span></span><br><span class="line">             </span><br><span class="line">   DHT11_Rst();  <span class="comment">//复位DHT11</span></span><br><span class="line">   <span class="keyword">return</span> DHT11_Check();<span class="comment">//等待DHT11的回应</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>在<code>main.c</code>中的使用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">uint8_t</span> humidityH;	  <span class="comment">//湿度整数部分</span></span><br><span class="line"><span class="keyword">uint8_t</span> humidityL;	  <span class="comment">//湿度小数部分</span></span><br><span class="line"><span class="keyword">uint8_t</span> temperatureH;   <span class="comment">//温度整数部分</span></span><br><span class="line"><span class="keyword">uint8_t</span> temperatureL;   <span class="comment">//温度小数部分</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">    DHT11_Init();</span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      <span class="comment">//将温湿度的整数小数部分分别赋值给4个变量</span></span><br><span class="line">      DHT11_Read_Data(&amp;humidityH,&amp;humidityL,&amp;temperatureH,&amp;temperatureL)</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="BH1750代码编写"><a href="#BH1750代码编写" class="headerlink" title="BH1750代码编写"></a>BH1750代码编写</h2><p>BH1750是一种用于两线式串行总线接口的数字型光强度传感器集成电路。这种集成电路可以根据收集的光线强度数据来调整液晶或者键盘背景灯的亮度。</p>
<p>BH1750引出了时钟线和数据线，单片机通过I2C协议可以与BH1750模块通讯。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725093745893.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725093745893.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725093745893"><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725093823377.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725093823377.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725093823377"></p>
<p>前面我们配置了I2C1,PB6接SCL,PB7接SDA</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725094359103.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725094359103.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725094359103"></p>
<p><code>bh1750.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __BH1750_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __BH1750_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint16_t</span> <span class="title">Get_BH1750_Value</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*bh1750地址*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    BH1750_ADDR_WRITE  0x46   <span class="comment">//01000110</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    BH1750_ADDR_READ   0x47   <span class="comment">//01000111</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    POWER_OFF_CMD  =  <span class="number">0x00</span>,  <span class="comment">//断电：无激活状态</span></span><br><span class="line">    POWER_ON_CMD   =  <span class="number">0x01</span>,  <span class="comment">//通电：等待测量指令</span></span><br><span class="line">    RESET_REGISTER =  <span class="number">0x07</span>,  <span class="comment">//重置数字寄存器（在断电状态下不起作用）</span></span><br><span class="line">    CONT_H_MODE       =  <span class="number">0x10</span>,  <span class="comment">//连续H分辨率模式：在11x分辨率下开始测量，测量时间120ms</span></span><br><span class="line">    CONT_H_MODE2   =  <span class="number">0x11</span>,  <span class="comment">//连续H分辨率模式2：在0.51x分辨率下开始测量，测量时间120ms</span></span><br><span class="line">    CONT_L_MODE       =  <span class="number">0x13</span>,  <span class="comment">//连续L分辨率模式：在411分辨率下开始测量，测量时间16ms</span></span><br><span class="line">    ONCE_H_MODE       =  <span class="number">0x20</span>,  <span class="comment">//一次高分辨率模式：在11x分辨率下开始测量，测量时间120ms，测量后自动设置为断电模式</span></span><br><span class="line">    ONCE_H_MODE2   =  <span class="number">0x21</span>,  <span class="comment">//一次高分辨率模式2：在0.51x分辨率下开始测量，测量时间120ms，测量后自动设置为断电模式</span></span><br><span class="line">    ONCE_L_MODE       =  <span class="number">0x23</span>   <span class="comment">//一次低分辨率模式：在411x分辨率下开始测量，测量时间16ms，测量后自动设置为断电模式</span></span><br><span class="line">&#125; BH1750_MODE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>bh1750.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bh1750.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;i2c.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*i2c句柄*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> bh1750_i2c hi2c1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*内部函数声明区*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">BH1750_Send_Cmd</span><span class="params">(BH1750_MODE cmd)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">BH1750_Read_Dat</span><span class="params">(<span class="keyword">uint8_t</span>* dat)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint16_t</span> <span class="title">BH1750_Dat_To_Lux</span><span class="params">(<span class="keyword">uint8_t</span>* dat)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  向BH1750发送一条指令</span></span><br><span class="line"><span class="comment"> * @param  cmd —— BH1750工作模式指令（在BH1750_MODE中枚举定义）</span></span><br><span class="line"><span class="comment"> * @retval 成功返回HAL_OK</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">BH1750_Send_Cmd</span><span class="params">(BH1750_MODE cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> HAL_I2C_Master_Transmit(&amp;bh1750_i2c, BH1750_ADDR_WRITE, (<span class="keyword">uint8_t</span>*)&amp;cmd, <span class="number">1</span>, <span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  从BH1750接收一次光强数据</span></span><br><span class="line"><span class="comment"> * @param  dat —— 存储光照强度的地址（两个字节数组）</span></span><br><span class="line"><span class="comment"> * @retval 成功 —— 返回HAL_OK</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">BH1750_Read_Dat</span><span class="params">(<span class="keyword">uint8_t</span>* dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> HAL_I2C_Master_Receive(&amp;bh1750_i2c, BH1750_ADDR_READ, dat, <span class="number">2</span>, <span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  将BH1750的两个字节数据转换为光照强度值（0-65535）</span></span><br><span class="line"><span class="comment"> * @param  dat  —— 存储光照强度的地址（两个字节数组）</span></span><br><span class="line"><span class="comment"> * @retval 成功 —— 返回光照强度值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint16_t</span> <span class="title">BH1750_Dat_To_Lux</span><span class="params">(<span class="keyword">uint8_t</span>* dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> lux = <span class="number">0</span>;</span><br><span class="line">    lux = dat[<span class="number">0</span>];</span><br><span class="line">    lux &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">    lux |= dat[<span class="number">1</span>];</span><br><span class="line">    lux = (<span class="keyword">int</span>)(lux / <span class="number">1.2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> lux;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  返回光照强度值</span></span><br><span class="line"><span class="comment"> * @param  无</span></span><br><span class="line"><span class="comment"> * @retval 成功 —— 返回光照强度值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">uint16_t</span> <span class="title">Get_BH1750_Value</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> dat[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;     <span class="comment">//dat[0]是高字节，dat[1]是低字节</span></span><br><span class="line">    <span class="keyword">uint16_t</span> lux;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(HAL_OK != BH1750_Send_Cmd(ONCE_H_MODE))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    HAL_Delay(<span class="number">120</span>);</span><br><span class="line">    <span class="keyword">if</span>(HAL_OK != BH1750_Read_Dat(dat))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    lux = BH1750_Dat_To_Lux(dat);</span><br><span class="line">    <span class="keyword">return</span> lux;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在<code>main.c</code>中使用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bh1750.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">uint16_t</span> Light; <span class="comment">//光照度</span></span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> 	</span><br><span class="line">      <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">     Light=Get_BH1750_Value(); <span class="comment">//获取关照度</span></span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="虚拟串口输出和OLED显示"><a href="#虚拟串口输出和OLED显示" class="headerlink" title="虚拟串口输出和OLED显示"></a>虚拟串口输出和OLED显示</h2><p>在主函数中我们使用VCP虚拟串口输出</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;i2c.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usb_device.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private includes ----------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bh1750.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usbd_cdc_if.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private typedef -----------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PTD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PTD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private define ------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PD */</span></span><br><span class="line"><span class="comment">/* USER CODE END PD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private macro -------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PM */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PM */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private variables ---------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">char</span> oledBuf[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">uint8_t</span> humidityH;   <span class="comment">//湿度整数部分</span></span><br><span class="line"><span class="keyword">uint8_t</span> humidityL;   <span class="comment">//湿度小数部分</span></span><br><span class="line"><span class="keyword">uint8_t</span> temperatureH;   <span class="comment">//温度整数部分</span></span><br><span class="line"><span class="keyword">uint8_t</span> temperatureL;   <span class="comment">//温度小数部分</span></span><br><span class="line"><span class="keyword">uint16_t</span> Light;</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private function prototypes -----------------------------------------------*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemClock_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">/* USER CODE BEGIN PFP */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PFP */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private user code ---------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  The application entry point.</span></span><br><span class="line"><span class="comment">  * @retval int</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* MCU Configuration--------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Configure the system clock */</span></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize all configured peripherals */</span></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_USB_DEVICE_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">  MX_TIM1_Init();</span><br><span class="line">  MX_I2C1_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">    OLED_ColorTurn(<span class="number">0</span>);<span class="comment">//0姝ｅ父鏄剧ず锛?1 鍙嶈壊鏄剧ず</span></span><br><span class="line">    OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0姝ｅ父鏄剧ず 1 灞忓箷缈昏浆鏄剧ず</span></span><br><span class="line">    OLED_Clear();</span><br><span class="line">    DHT11_Init();</span><br><span class="line">    HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      Light=Get_BH1750_Value();</span><br><span class="line">      DHT11_Read_Data(&amp;humidityH,&amp;humidityL,&amp;temperatureH,&amp;temperatureL);</span><br><span class="line">      usb_printf(<span class="string">&quot;Light:%d Lx\r\n&quot;</span>,Light);</span><br><span class="line">      usb_printf(<span class="string">&quot;Hum:%d.%d %%  Temp:%d.%d C\r\n&quot;</span>,humidityH,humidityL,temperatureH,temperatureL);</span><br><span class="line">      HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);</span><br><span class="line">      HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编写TIM2中断回调函数实现oled的显示</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 4 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim==&amp;htim2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(oledBuf,<span class="string">&quot;Light:%dLx&quot;</span>,Light);</span><br><span class="line">        OLED_ShowString(<span class="number">0</span>,<span class="number">0</span>,(<span class="keyword">uint8_t</span>*)oledBuf,<span class="number">16</span>);<span class="comment">//8*16 “ABC”</span></span><br><span class="line">        <span class="built_in">sprintf</span>(oledBuf,<span class="string">&quot;Hum:%d.%d %%&quot;</span>,humidityH,humidityL);</span><br><span class="line">        OLED_ShowString(<span class="number">0</span>,<span class="number">16</span>,(<span class="keyword">uint8_t</span>*)oledBuf,<span class="number">16</span>);<span class="comment">//8*16 “ABC”</span></span><br><span class="line">        <span class="built_in">sprintf</span>(oledBuf,<span class="string">&quot;Temp:%d.%d C&quot;</span>,temperatureH,temperatureL);</span><br><span class="line">        OLED_ShowString(<span class="number">0</span>,<span class="number">32</span>,(<span class="keyword">uint8_t</span> *)oledBuf,<span class="number">16</span>);<span class="comment">//8*16 “ABC”</span></span><br><span class="line">        OLED_Refresh();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* USER CODE END 4 */</span></span><br></pre></td></tr></table></figure>
<p><a href="https://download.csdn.net/download/weixin_51002159/86250257">程序资源</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725102218797.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725102218797.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725102218797"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725102047746.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725102047746.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725102047746" style="zoom: 33%;" /></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32HAL库驱动MPU6050</title>
    <url>/2023/04/04/STM32HAL%E5%BA%93%E9%A9%B1%E5%8A%A8MPU6050/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32HAL库驱动MPU6050"><a href="#STM32HAL库驱动MPU6050" class="headerlink" title="STM32HAL库驱动MPU6050"></a>STM32HAL库驱动MPU6050</h1><h2 id="STM32CubeMX配置"><a href="#STM32CubeMX配置" class="headerlink" title="STM32CubeMX配置"></a>STM32CubeMX配置</h2><p>System Core-&gt;RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</p>
<p>System Core-&gt;SYS-&gt;Debug-&gt;Serial Wire</p>
<p>Connectivity-&gt;I2C1-&gt;I2C-&gt;I2C</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/28eec1960b5683af523f57e838b2f452.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/28eec1960b5683af523f57e838b2f452.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230404212050219"></p>
<p>这里使用PB6/PB7分别作为IIC1的SCL时钟线/SDA数据线，可以分别设置Label SCL和SDA</p>
<p>Connectivity-&gt;USB-&gt;Device(FS)</p>
<p>Middleware-&gt;USB_DEVICE-&gt;Class For FS IP-&gt;Communic ation Device Class (Virtual Port Com)</p>
<p>Clock Configuration-&gt;To USB <strong>48MHz</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/2b2c3edcc86ca2cd02301198ac03b20c.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/2b2c3edcc86ca2cd02301198ac03b20c.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230404212427285"></p>
<p>GENERATE CODE </p>
<h2 id="CLion移植"><a href="#CLion移植" class="headerlink" title="CLion移植"></a>CLion移植</h2><p>本次编译器使用CLion,若为Keil5/STM32CubeIDE等同理</p>
<p><a href="https://download.csdn.net/download/weixin_51002159/87651746?spm=1001.2014.3001.5503">下载文件</a>移植MPU6050的文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Inc</span><br><span class="line">	-dmpKey.h</span><br><span class="line">	-dmpmap.h</span><br><span class="line">	-inv_mpu.h</span><br><span class="line">	-inv_mpu_dmp_motion_driver.h</span><br><span class="line">	-mpu6050.h</span><br><span class="line">Src</span><br><span class="line">	-inv_mpu.c</span><br><span class="line">	-inv_mpu_dmp_motion_driver.c</span><br><span class="line">	-mpu6050.c</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c063e2b1527334af8b345856de65f932.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/c063e2b1527334af8b345856de65f932.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230404213508231"></p>
<p>然后重新加载CMake项目</p>
<p>修改主要将i2c.c的宏定义 hi2c1更改到mpu6050.c;</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//-----i2c.c--------</span></span><br><span class="line">I2C_HandleTypeDef hi2c1;</span><br><span class="line"><span class="comment">//-----mpu6050.c----</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">MPU_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">uint8_t</span> res;</span><br><span class="line">  <span class="keyword">extern</span> I2C_HandleTypeDef hi2c1;</span><br><span class="line">  HAL_I2C_Init(&amp;hi2c1);</span><br><span class="line">  MPU_Write_Byte(MPU_PWR_MGMT1_REG,<span class="number">0X80</span>); </span><br><span class="line">  MPU_Write_Byte(MPU_PWR_MGMT1_REG,<span class="number">0X00</span>);  </span><br><span class="line">  MPU_Set_Gyro_Fsr(<span class="number">3</span>);            </span><br><span class="line">  MPU_Set_Accel_Fsr(<span class="number">0</span>);            </span><br><span class="line">  MPU_Set_Rate(<span class="number">50</span>);                  </span><br><span class="line">  MPU_Write_Byte(MPU_INT_EN_REG,<span class="number">0X00</span>); </span><br><span class="line">  MPU_Write_Byte(MPU_USER_CTRL_REG,<span class="number">0X00</span>);  </span><br><span class="line">  MPU_Write_Byte(MPU_FIFO_EN_REG,<span class="number">0X00</span>);    </span><br><span class="line">  MPU_Write_Byte(MPU_INTBP_CFG_REG,<span class="number">0X80</span>); </span><br><span class="line">  res=MPU_Read_Byte(MPU_DEVICE_ID_REG);</span><br><span class="line">  <span class="keyword">if</span>(res==MPU_ADDR)</span><br><span class="line">  &#123;</span><br><span class="line">    MPU_Write_Byte(MPU_PWR_MGMT1_REG,<span class="number">0X01</span>);    </span><br><span class="line">    MPU_Write_Byte(MPU_PWR_MGMT2_REG,<span class="number">0X00</span>);    </span><br><span class="line">    MPU_Set_Rate(<span class="number">50</span>);                 </span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译如果没有找到有关mpu6050的文件，则修改CMakeLists.txt中包含MPU6050的头文件</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/6f25765cbd2f6fe9b9bbf0a02568d4d9.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/6f25765cbd2f6fe9b9bbf0a02568d4d9.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230404213934080"></p>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line">    <span class="keyword">float</span> pitch,roll,yaw;         <span class="comment">//欧拉角</span></span><br><span class="line">    <span class="keyword">short</span> aacx,aacy,aacz;        <span class="comment">//加速度传感器原始数据</span></span><br><span class="line">    <span class="keyword">short</span> gyrox,gyroy,gyroz;      <span class="comment">//陀螺仪原始数据</span></span><br><span class="line">    <span class="keyword">float</span> temp;                    <span class="comment">//温度</span></span><br><span class="line"></span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_I2C1_Init();</span><br><span class="line">  MX_USB_DEVICE_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  MPU_Init();</span><br><span class="line">  mpu_dmp_init();</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      HAL_Delay(<span class="number">500</span>);</span><br><span class="line">      <span class="keyword">while</span> (mpu_dmp_get_data(&amp;pitch, &amp;roll, &amp;yaw));    <span class="comment">//必须要用while等待，才能读取成功</span></span><br><span class="line">      MPU_Get_Accelerometer(&amp;aacx, &amp;aacy, &amp;aacz);          <span class="comment">//得到加速度传感器数据</span></span><br><span class="line">      MPU_Get_Gyroscope(&amp;gyrox, &amp;gyroy, &amp;gyroz);           <span class="comment">//得到陀螺仪数据</span></span><br><span class="line">      temp = MPU_Get_Temperature();                                  <span class="comment">//得到温度信息</span></span><br><span class="line">      usb_printf(<span class="string">&quot;roll:%.2f  pitch:%.2f  yaw:%.2f\r\n&quot;</span>, roll, pitch, yaw);<span class="comment">//串口1输出采集信息</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="串口显示"><a href="#串口显示" class="headerlink" title="串口显示"></a>串口显示</h2><p>由于本次软件环境为Ubuntu下，所以使用串口软件<strong>CuteCom</strong></p>
<p>Windows下可以使用XCOM</p>
<p>下载CuteCom</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install cutecom</span><br></pre></td></tr></table></figure>
<p>输入命令打开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cutecom</span><br></pre></td></tr></table></figure>
<p>查看串口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /dev/tty*</span><br></pre></td></tr></table></figure>
<p>找到串口号，这里虚拟串口为<code>/dev/ttyACM0</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ea12223934ed6f05b4e11e2191f82c26.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ea12223934ed6f05b4e11e2191f82c26.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230404214640314"></p>
<p>添加权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 /dev/ttyACM0</span><br></pre></td></tr></table></figure>
<p>CuteCom显示MPU6050消息，翻滚角/俯仰角/偏航角</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/406f68ce15eba0c5e25c1fcdb22c7f69.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/406f68ce15eba0c5e25c1fcdb22c7f69.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230404214905151"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32串口通信DMA方式</title>
    <url>/2022/07/19/STM32%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1DMA%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="DMA概述"><a href="#DMA概述" class="headerlink" title="DMA概述"></a>DMA概述</h2><p>CPU将需要发送的数据从内存中取出写入串口的发送寄存器，串口再将自己寄存器里的数据发送出去，数据的传输工作有CPU完成，串口的接收过程也类似，全程需要CPU搬运数据，如果传输的数据过大，势必会影响CPU的工作效率。</p>
<p>而DMA的任务就是减轻CPU的负担，承担原本由CPU完成的数据搬运工作。DMA的工作过程，一般是CPU开启DMA传输，DMA按配置好的方式开始传输数据并计数，达到设置的数量DMA产生中断通知CPU传输完成，开启DMA传输后，由DMA将内存中的数据传输至串口寄存器，或者将串口寄存器数据写入内存，CPU只需要控制传输的开始和处理传输结束后的事情。DMA的传输路径除了内存到外设和外设到内存，还有内存到内存， 这在处理图像显示的时候尤其有用,使用DMA搬移图像的大量数据可以大大减轻CPU压力。</p>
<p>定时器，包括串口在内的各种连接功能的外设，ADC和DAC等都可以使用DMA，与DMA配合实现很多适用功能。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719224659377.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719224659377.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719224659377"></p>
<h2 id="配置DMA"><a href="#配置DMA" class="headerlink" title="配置DMA"></a>配置DMA</h2><p>在配置DMA时，我们会接触到通道这个概念，通道其实就是对DMA内部资源的分组，使DMA可以同时完成多项传输任务，通道的分配用STM32CubeMx即可。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719225432009.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719225432009.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719225432009"></p>
<h2 id="程序修改"><a href="#程序修改" class="headerlink" title="程序修改"></a>程序修改</h2><p>将串口中断函数后缀修改为DMA的方式通信</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_UART_Receive_DMA(&amp;huart1, RxBuff,<span class="number">1</span>);</span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br></pre></td></tr></table></figure>
<p>回调函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;Instance==USART1)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Transmit_DMA(&amp;huart1,RxBuff,<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;Instance==USART1)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Receive_DMA(&amp;huart1,RxBuff,<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719230030652.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220719230030652.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220719230030652"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32使用OLED移植U8g2库</title>
    <url>/2023/04/09/STM32%E4%BD%BF%E7%94%A8OLED%E7%A7%BB%E6%A4%8DU8g2%E5%BA%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32使用OLED移植U8g2库"><a href="#STM32使用OLED移植U8g2库" class="headerlink" title="STM32使用OLED移植U8g2库"></a>STM32使用OLED移植U8g2库</h1><h2 id="STM32CubeMX配置"><a href="#STM32CubeMX配置" class="headerlink" title="STM32CubeMX配置"></a>STM32CubeMX配置</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul>
<li>STM32F103C8T6</li>
<li>I2C通信OLED 128*64</li>
</ul>
<h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul>
<li><p>System Core-&gt;RCC-&gt;HSE-&gt;Crystal/Ceramic Resonator</p>
</li>
<li><p>System Core-&gt;SYS-&gt;Debug-&gt;Serial Wire</p>
</li>
<li><p>Connectivity-&gt;I2C1-&gt;I2C-&gt;I2C   <strong>I2C Speed Mode 为 Fast Mode</strong></p>
</li>
</ul>
<p><em>OLED使用I2C通信，不使用GPIO模拟I2C了</em></p>
<ul>
<li>Timers-&gt;TIM3用于延时用</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/f507f9ea5f9d1a9d1641a4c73b00d29d.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/f507f9ea5f9d1a9d1641a4c73b00d29d.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230405222847950"></p>
<ul>
<li><p>设置时钟树为72MHz</p>
</li>
<li><p>Generate Code</p>
<h2 id="U8g2库移植"><a href="#U8g2库移植" class="headerlink" title="U8g2库移植"></a>U8g2库移植</h2></li>
</ul>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>U8g2Github地址:  <a href="https://github.com/olikraus/u8g2">https://github.com/olikraus/u8g2</a></p>
<p>克隆到本地</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/olikraus/u8g2.git</span><br></pre></td></tr></table></figure>
<p>主要用到U8g2库的<code>csrc</code>文件夹</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e6d54c6f739584487a1a3781bdbc2bd1.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/e6d54c6f739584487a1a3781bdbc2bd1.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230405220231001"></p>
<h3 id="删除多余驱动文件"><a href="#删除多余驱动文件" class="headerlink" title="删除多余驱动文件"></a>删除多余驱动文件</h3><p>本次使用的oled为I2C通信，屏幕分辨率为128x64,ssd1306驱动芯片，所以保留<code>u8x8_d_ssd1306_128x64_noname.c</code>文件，而对于其他<code>u8x8_d_xxx_xxx.c</code>的文件删除，<strong><em>注意xxx分别为驱动型号和分辨率！！！</em></strong></p>
<p><strong>最后保留的文件</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8c3234915539e3951ae44a862ee30675.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8c3234915539e3951ae44a862ee30675.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230405221042200"></p>
<h3 id="精简U8g2程序代码"><a href="#精简U8g2程序代码" class="headerlink" title="精简U8g2程序代码"></a>精简U8g2程序代码</h3><p><code>u8g2_d_setup.c</code></p>
<p>删除多余函数只保留<code>void u8g2_Setup_ssd1306_i2c_128x64_noname_f</code>函数主体</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_Setup_ssd1306_i2c_128x64_noname_f</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">u8g2_cb_t</span> *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> tile_buf_height;</span><br><span class="line">    <span class="keyword">uint8_t</span> *buf;</span><br><span class="line">    u8g2_SetupDisplay(u8g2, u8x8_d_ssd1306_128x64_noname, u8x8_cad_ssd13xx_fast_i2c, byte_cb, gpio_and_delay_cb);</span><br><span class="line">    buf = u8g2_m_16_8_f(&amp;tile_buf_height);</span><br><span class="line">    u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>u8g2_d_memory.c</code></p>
<p>删除多余函数只保留<code>uint8_t *u8g2_m_16_8_f(uint8_t *page_cnt)</code>函数主体</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> *<span class="title">u8g2_m_16_8_f</span><span class="params">(<span class="keyword">uint8_t</span> *page_cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> U8G2_USE_DYNAMIC_ALLOC</span></span><br><span class="line">    *page_cnt = <span class="number">8</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> buf[<span class="number">1024</span>];</span><br><span class="line">    *page_cnt = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">return</span> buf;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Clion移植"><a href="#Clion移植" class="headerlink" title="Clion移植"></a>Clion移植</h3><p>在<code>Core</code>文件夹下新建<code>U8g2/Inc</code>和<code>U8g2/Src</code>文件夹分别储存头文件和源文件</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8314955778f7443d3041192cd5394e89.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8314955778f7443d3041192cd5394e89.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230405221607661"></p>
<p>重构CMake项目</p>
<p>在CMakeList.txt包含头文件</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(Core/Inc Core/U8g2/Inc....)</span><br></pre></td></tr></table></figure>
<h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><h3 id="定时延时微秒函数"><a href="#定时延时微秒函数" class="headerlink" title="定时延时微秒函数"></a>定时延时微秒函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tims_delay_us</span><span class="params">(<span class="keyword">uint32_t</span> nus)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint16_t</span>  differ = <span class="number">0xffff</span>-nus<span class="number">-5</span>;</span><br><span class="line">    <span class="comment">//设置定时器2的技术初始值</span></span><br><span class="line">            __HAL_TIM_SetCounter(&amp;htim3,differ);c</span><br><span class="line">    <span class="comment">//开启定时器</span></span><br><span class="line">    HAL_TIM_Base_Start(&amp;htim3);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( differ&lt;<span class="number">0xffff</span><span class="number">-5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        differ = __HAL_TIM_GetCounter(&amp;htim3);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//关闭定时器</span></span><br><span class="line">    HAL_TIM_Base_Stop(&amp;htim3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在<code>tim.h</code>中声明</p>
<h3 id="stm32-u8g2文件"><a href="#stm32-u8g2文件" class="headerlink" title="stm32_u8g2文件"></a>stm32_u8g2文件</h3><p><strong>新建stm32_u8g2.h</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __STM32_U8G2_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __STM32_U8G2_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Includes ------------------------------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;u8g2.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Private defines */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END Private defines */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> u8         unsigned char  <span class="comment">// ?unsigned char ????</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_LEN    128  <span class="comment">//</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_ADDRESS  0x78 <span class="comment">// oled</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD   0x00  <span class="comment">// </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_DATA  0x40  <span class="comment">// </span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Prototypes */</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_hw_i2c</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_gpio_and_delay</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2Init</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawPixelToFillScreen</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><strong>新建stm32_u8g2.c</strong></p>
<p><strong><em>注意I2C定义变量的修改！！！</em></strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32_u8g2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;i2c.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_hw_i2c</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* u8g2/u8x8 will never send more than 32 bytes between START_TRANSFER and END_TRANSFER */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> buffer[<span class="number">128</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> buf_idx;</span><br><span class="line">    <span class="keyword">uint8_t</span> *data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (msg)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_INIT:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* add your custom code to init i2c subsystem */</span></span><br><span class="line">            MX_I2C1_Init(); <span class="comment">//I2C初始化</span></span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_START_TRANSFER:</span><br><span class="line">        &#123;</span><br><span class="line">            buf_idx = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_SEND:</span><br><span class="line">        &#123;</span><br><span class="line">            data = (<span class="keyword">uint8_t</span> *)arg_ptr;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (arg_int &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                buffer[buf_idx++] = *data;</span><br><span class="line">                data++;</span><br><span class="line">                arg_int--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_END_TRANSFER:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (HAL_I2C_Master_Transmit(&amp;hi2c1, OLED_ADDRESS, buffer, buf_idx, <span class="number">1000</span>) != HAL_OK)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_SET_DC:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_gpio_and_delay</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (msg)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_100NANO: <span class="comment">// delay arg_int * 100 nano seconds</span></span><br><span class="line">            __NOP();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_10MICRO: <span class="comment">// delay arg_int * 10 micro seconds</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">uint16_t</span> n = <span class="number">0</span>; n &lt; <span class="number">320</span>; n++)</span><br><span class="line">            &#123;</span><br><span class="line">                __NOP();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_MILLI: <span class="comment">// delay arg_int * 1 milli second</span></span><br><span class="line">            HAL_Delay(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_I2C: <span class="comment">// arg_int is the I2C speed in 100KHz, e.g. 4 = 400 KHz</span></span><br><span class="line">            Tims_delay_us(<span class="number">5</span>);</span><br><span class="line">            <span class="keyword">break</span>;                    <span class="comment">// arg_int=1: delay by 5us, arg_int = 4: delay by 1.25us</span></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_I2C_CLOCK: <span class="comment">// arg_int=0: Output low at I2C clock pin</span></span><br><span class="line">            <span class="keyword">break</span>;                    <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_I2C_DATA:  <span class="comment">// arg_int=0: Output low at I2C data pin</span></span><br><span class="line">            <span class="keyword">break</span>;                    <span class="comment">// arg_int=1: Input dir with pullup high for I2C data pin</span></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_SELECT:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu select pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_NEXT:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu next pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_PREV:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu prev pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_HOME:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu home pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="number">1</span>); <span class="comment">// default return value</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//U8g2的初始化，需要调用下面这个u8g2_Setup_ssd1306_128x64_noname_f函数，该函数的4个参数含义：</span></span><br><span class="line"><span class="comment">//u8g2：传入的U8g2结构体</span></span><br><span class="line"><span class="comment">//U8G2_R0：默认使用U8G2_R0即可（用于配置屏幕是否要旋转）</span></span><br><span class="line"><span class="comment">//u8x8_byte_sw_i2c：使用软件IIC驱动，该函数由U8g2源码提供</span></span><br><span class="line"><span class="comment">//u8x8_gpio_and_delay：就是上面我们写的配置函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2Init</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u8g2_Setup_ssd1306_i2c_128x64_noname_f(u8g2, U8G2_R0, u8x8_byte_hw_i2c, u8x8_gpio_and_delay); <span class="comment">// 初始化u8g2 结构体</span></span><br><span class="line">    u8g2_InitDisplay(u8g2);                                                                       <span class="comment">// </span></span><br><span class="line">    u8g2_SetPowerSave(u8g2, <span class="number">0</span>);                                                                   <span class="comment">// </span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFontMode(u8g2, <span class="number">1</span>); <span class="comment">/*字体模式选择*/</span></span><br><span class="line">    u8g2_SetFontDirection(u8g2, <span class="number">0</span>); <span class="comment">/*字体方向选择*/</span></span><br><span class="line">    u8g2_SetFont(u8g2, u8g2_font_inb24_mf); <span class="comment">/*字库选择*/</span></span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">0</span>, <span class="number">20</span>, <span class="string">&quot;U&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFontDirection(u8g2, <span class="number">1</span>);</span><br><span class="line">    u8g2_SetFont(u8g2, u8g2_font_inb30_mn);</span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">21</span>,<span class="number">8</span>,<span class="string">&quot;8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFontDirection(u8g2, <span class="number">0</span>);</span><br><span class="line">    u8g2_SetFont(u8g2, u8g2_font_inb24_mf);</span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">51</span>,<span class="number">30</span>,<span class="string">&quot;g&quot;</span>);</span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">67</span>,<span class="number">30</span>,<span class="string">&quot;\xb2&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_DrawHLine(u8g2, <span class="number">2</span>, <span class="number">35</span>, <span class="number">47</span>);</span><br><span class="line">    u8g2_DrawHLine(u8g2, <span class="number">3</span>, <span class="number">36</span>, <span class="number">47</span>);</span><br><span class="line">    u8g2_DrawVLine(u8g2, <span class="number">45</span>, <span class="number">32</span>, <span class="number">12</span>);</span><br><span class="line">    u8g2_DrawVLine(u8g2, <span class="number">46</span>, <span class="number">33</span>, <span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFont(u8g2, u8g2_font_4x6_tr);</span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">1</span>,<span class="number">54</span>,<span class="string">&quot;github.com/olikraus/u8g2&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_SendBuffer(u8g2);</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画点填充</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawPixelToFillScreen</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1000</span>;</span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">64</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            u8g2_DrawPixel(u8g2,i, j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="test文件"><a href="#test文件" class="headerlink" title="test文件"></a>test文件</h3><p><strong>新建test.h</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __TEST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __TEST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;u8g2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawProcess</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testShowFont</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawFrame</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawRBox</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawCircle</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawFilledEllipse</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawMulti</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawXBM</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2DrawTest</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><strong>新建test.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//---------------U8g2测试函数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEND_BUFFER_DISPLAY_MS(u8g2, ms)\</span></span><br><span class="line"><span class="meta">  do &#123;\</span></span><br><span class="line"><span class="meta">    u8g2_SendBuffer(u8g2); \</span></span><br><span class="line"><span class="meta">    HAL_Delay(ms);\</span></span><br><span class="line"><span class="meta">  &#125;while(0);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//进度条显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawProcess</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">80</span>;i=i+<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_ClearBuffer(u8g2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> buff[<span class="number">20</span>];</span><br><span class="line">        <span class="built_in">sprintf</span>(buff,<span class="string">&quot;%d%%&quot;</span>,(<span class="keyword">int</span>)(i/<span class="number">80.0</span>*<span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">        u8g2_SetFont(u8g2,u8g2_font_ncenB12_tf);</span><br><span class="line">        u8g2_DrawStr(u8g2,<span class="number">16</span>,<span class="number">32</span>,<span class="string">&quot;STM32 U8g2&quot;</span>);<span class="comment">//字符显示</span></span><br><span class="line"></span><br><span class="line">        u8g2_SetFont(u8g2,u8g2_font_ncenB08_tf);</span><br><span class="line">        u8g2_DrawStr(u8g2,<span class="number">100</span>,<span class="number">49</span>,buff);<span class="comment">//当前进度显示</span></span><br><span class="line"></span><br><span class="line">        u8g2_DrawRBox(u8g2,<span class="number">16</span>,<span class="number">40</span>,i,<span class="number">10</span>,<span class="number">4</span>);<span class="comment">//圆角填充框矩形框</span></span><br><span class="line">        u8g2_DrawRFrame(u8g2,<span class="number">16</span>,<span class="number">40</span>,<span class="number">80</span>,<span class="number">10</span>,<span class="number">4</span>);<span class="comment">//圆角矩形</span></span><br><span class="line"></span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line">    HAL_Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//字体测试 数字英文可选用 u8g2_font_ncenB..(粗) 系列字体</span></span><br><span class="line"><span class="comment">//u8g2_font_unifont_t_symbols/u8g2_font_unifont_h_symbols(细 圆润)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testShowFont</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">char</span> testStr[<span class="number">14</span>] = <span class="string">&quot;STM32F103C8T6&quot;</span>;</span><br><span class="line"></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFont(u8g2,u8g2_font_u8glib_4_tf);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>,<span class="number">5</span>,testStr);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFont(u8g2,u8g2_font_ncenB08_tf);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>,<span class="number">30</span>,testStr);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line"></span><br><span class="line">    u8g2_SetFont(u8g2,u8g2_font_ncenB10_tr);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>,<span class="number">60</span>,testStr);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画空心矩形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawFrame</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">int</span> w = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">int</span> h = <span class="number">20</span>;</span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>, <span class="number">15</span>, <span class="string">&quot;DrawFrame&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_DrawFrame(u8g2, x, y, w, h);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawFrame(u8g2, x+w+<span class="number">5</span>, y<span class="number">-10</span>, w<span class="number">-20</span>, h+<span class="number">20</span>);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画实心圆角矩形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawRBox</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">int</span> w = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">int</span> h = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">3</span>;</span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>, <span class="number">15</span>, <span class="string">&quot;DrawRBox&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_DrawRBox(u8g2, x, y, w, h, r);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawRBox(u8g2, x+w+<span class="number">5</span>, y<span class="number">-10</span>, w<span class="number">-20</span>, h+<span class="number">20</span>, r);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画空心圆</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawCircle</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">600</span>;</span><br><span class="line">    <span class="keyword">int</span> stx = <span class="number">0</span>;  <span class="comment">//画图起始x</span></span><br><span class="line">    <span class="keyword">int</span> sty = <span class="number">16</span>; <span class="comment">//画图起始y</span></span><br><span class="line">    <span class="keyword">int</span> with = <span class="number">16</span>;<span class="comment">//一个图块的间隔</span></span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">15</span>;   <span class="comment">//圆的半径</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    u8g2_DrawStr(u8g2, <span class="number">0</span>, <span class="number">15</span>, <span class="string">&quot;DrawCircle&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_DrawCircle(u8g2, stx, sty - <span class="number">1</span> + with, r, U8G2_DRAW_UPPER_RIGHT); <span class="comment">//右上</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawCircle(u8g2, stx + with, sty, r, U8G2_DRAW_LOWER_RIGHT); <span class="comment">//右下</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawCircle(u8g2, stx - <span class="number">1</span> + with * <span class="number">3</span>, sty - <span class="number">1</span> + with, r, U8G2_DRAW_UPPER_LEFT); <span class="comment">//左上</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawCircle(u8g2, stx - <span class="number">1</span> + with * <span class="number">4</span>, sty, r, U8G2_DRAW_LOWER_LEFT); <span class="comment">//左下</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawCircle(u8g2, stx - <span class="number">1</span> + with * <span class="number">2</span>, sty - <span class="number">1</span> + with * <span class="number">2</span>, r, U8G2_DRAW_ALL);<span class="comment">//整个圆</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line"></span><br><span class="line">    u8g2_DrawCircle(u8g2, <span class="number">32</span>*<span class="number">3</span>, <span class="number">32</span>, <span class="number">31</span>, U8G2_DRAW_ALL);<span class="comment">//右侧整个圆</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画实心椭圆</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawFilledEllipse</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">800</span>;</span><br><span class="line">    <span class="keyword">int</span> with = <span class="number">16</span>;<span class="comment">//一个图块的间隔</span></span><br><span class="line">    <span class="keyword">int</span> rx = <span class="number">27</span>;  <span class="comment">//椭圆x方向的半径</span></span><br><span class="line">    <span class="keyword">int</span> ry = <span class="number">22</span>;  <span class="comment">//椭圆y方向的半径</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>, <span class="number">14</span>, <span class="string">&quot;DrawFilledEllipse&quot;</span>);</span><br><span class="line"></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawFilledEllipse(u8g2, <span class="number">0</span>, with, rx, ry, U8G2_DRAW_LOWER_RIGHT);<span class="comment">//右下</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawFilledEllipse(u8g2, with * <span class="number">4</span> - <span class="number">1</span>, with, rx, ry, U8G2_DRAW_LOWER_LEFT); <span class="comment">//左下</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawFilledEllipse(u8g2, <span class="number">0</span>, with * <span class="number">4</span> - <span class="number">1</span>, rx, ry, U8G2_DRAW_UPPER_RIGHT); <span class="comment">//右上</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawFilledEllipse(u8g2, with * <span class="number">4</span> - <span class="number">1</span>, with * <span class="number">4</span> - <span class="number">1</span>, rx, ry, U8G2_DRAW_UPPER_LEFT); <span class="comment">//左上</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">    u8g2_DrawFilledEllipse(u8g2, with * <span class="number">6</span>, with * <span class="number">2.5</span>, rx, ry, U8G2_DRAW_ALL);<span class="comment">//整个椭圆</span></span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//环形测试</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawMulti</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">64</span>; j+=<span class="number">16</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i+=<span class="number">16</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            u8g2_DrawPixel(u8g2, i, j);</span><br><span class="line">            u8g2_SendBuffer(u8g2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实心矩形逐渐变大</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>; i&gt;<span class="number">0</span>; i-=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawBox(u8g2,i*<span class="number">2</span>,i,<span class="number">128</span>-i*<span class="number">4</span>,<span class="number">64</span><span class="number">-2</span>*i);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//空心矩形逐渐变小</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawFrame(u8g2,i*<span class="number">2</span>,i,<span class="number">128</span>-i*<span class="number">4</span>,<span class="number">64</span><span class="number">-2</span>*i);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实心圆角矩形逐渐变大</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>; i&gt;<span class="number">0</span>; i-=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawRBox(u8g2,i*<span class="number">2</span>,i,<span class="number">128</span>-i*<span class="number">4</span>,<span class="number">64</span><span class="number">-2</span>*i,<span class="number">10</span>-i/<span class="number">3</span>);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//空心圆角矩形逐渐变小</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawRFrame(u8g2,i*<span class="number">2</span>,i,<span class="number">128</span>-i*<span class="number">4</span>,<span class="number">64</span><span class="number">-2</span>*i,<span class="number">10</span>-i/<span class="number">3</span>);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实心圆逐渐变大</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;<span class="number">64</span>; i+=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawDisc(u8g2,<span class="number">64</span>,<span class="number">32</span>,i, U8G2_DRAW_ALL);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//空心圆逐渐变小</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">64</span>; i&gt;<span class="number">0</span>; i-=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawCircle(u8g2,<span class="number">64</span>,<span class="number">32</span>,i, U8G2_DRAW_ALL);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实心椭圆逐渐变大</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;<span class="number">32</span>; i+=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawFilledEllipse(u8g2,<span class="number">64</span>,<span class="number">32</span>, i*<span class="number">2</span>, i, U8G2_DRAW_ALL);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//空心椭圆逐渐变小</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">32</span>; i&gt;<span class="number">0</span>; i-=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u8g2_DrawEllipse(u8g2,<span class="number">64</span>,<span class="number">32</span>, i*<span class="number">2</span>, i, U8G2_DRAW_ALL);</span><br><span class="line">        u8g2_SendBuffer(u8g2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// width: 128, height: 48</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> bilibili[] U8X8_PROGMEM = &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x80</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0f</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1e</span>, <span class="number">0xe0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0e</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3c</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0xfc</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x03</span>, <span class="number">0xfc</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3c</span>, <span class="number">0xc0</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x07</span>, <span class="number">0xfc</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3c</span>, <span class="number">0xc0</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x0f</span>, <span class="number">0xfc</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3c</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3c</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x78</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x78</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x79</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x98</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x79</span>, <span class="number">0x9f</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0xbe</span>, <span class="number">0xe7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x10</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x7b</span>, <span class="number">0x1f</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0xbe</span>, <span class="number">0xe7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x87</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0x0f</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x7b</span>, <span class="number">0x1e</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x3e</span>, <span class="number">0xe7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0xe7</span>, <span class="number">0x3f</span>, <span class="number">0xe0</span>, <span class="number">0x3f</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x7b</span>, <span class="number">0x1e</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x3e</span>, <span class="number">0xe7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0xe7</span>, <span class="number">0x3f</span>, <span class="number">0xe0</span>, <span class="number">0x3f</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x71</span>, <span class="number">0x1e</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x34</span>, <span class="number">0xe7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0xe7</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x3f</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x73</span>, <span class="number">0x1e</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x3c</span>, <span class="number">0xc7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x73</span>, <span class="number">0x1e</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x7c</span>, <span class="number">0xe7</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x73</span>, <span class="number">0x1e</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x7c</span>, <span class="number">0xef</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x77</span>, <span class="number">0x1e</span>, <span class="number">0x1e</span>, <span class="number">0x00</span>, <span class="number">0x7c</span>, <span class="number">0xef</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0xc1</span>, <span class="number">0xf7</span>, <span class="number">0x1e</span>, <span class="number">0xfe</span>, <span class="number">0x1f</span>, <span class="number">0x78</span>, <span class="number">0xef</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x70</span>, <span class="number">0x37</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0x87</span>, <span class="number">0xf7</span>, <span class="number">0x1e</span>, <span class="number">0xfe</span>, <span class="number">0xff</span>, <span class="number">0x78</span>, <span class="number">0xee</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0xe0</span>, <span class="number">0x3f</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0x9f</span>, <span class="number">0xf7</span>, <span class="number">0x1e</span>, <span class="number">0xfe</span>, <span class="number">0xff</span>, <span class="number">0x79</span>, <span class="number">0xce</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0xc0</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0xbf</span>, <span class="number">0xe7</span>, <span class="number">0x1e</span>, <span class="number">0xfe</span>, <span class="number">0xff</span>, <span class="number">0x7b</span>, <span class="number">0xce</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0xc7</span>, <span class="number">0xbf</span>, <span class="number">0xe7</span>, <span class="number">0x1e</span>, <span class="number">0xfe</span>, <span class="number">0xf8</span>, <span class="number">0x77</span>, <span class="number">0xce</span>, <span class="number">0x01</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0x0f</span>, <span class="number">0x3f</span>, <span class="number">0xe7</span>, <span class="number">0x1c</span>, <span class="number">0xfe</span>, <span class="number">0xf0</span>, <span class="number">0x77</span>, <span class="number">0xce</span>, <span class="number">0x03</span>, <span class="number">0xc0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1f</span>, <span class="number">0xe0</span>, <span class="number">0xcf</span>, <span class="number">0x3f</span>, <span class="number">0xe7</span>, <span class="number">0x1c</span>, <span class="number">0xfe</span>, <span class="number">0xf8</span>, <span class="number">0xf3</span>, <span class="number">0xce</span>, <span class="number">0x03</span>, <span class="number">0xc0</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x0f</span>, <span class="number">0xe0</span>, <span class="number">0xef</span>, <span class="number">0x1f</span>, <span class="number">0xe7</span>, <span class="number">0x1c</span>, <span class="number">0xfe</span>, <span class="number">0xfe</span>, <span class="number">0xf1</span>, <span class="number">0xce</span>, <span class="number">0x03</span>, <span class="number">0x80</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x0f</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0x0f</span>, <span class="number">0xcf</span>, <span class="number">0x1c</span>, <span class="number">0xfc</span>, <span class="number">0xff</span>, <span class="number">0xf0</span>, <span class="number">0xc0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x07</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0x03</span>, <span class="number">0x06</span>, <span class="number">0x1c</span>, <span class="number">0xfc</span>, <span class="number">0x7f</span>, <span class="number">0x60</span>, <span class="number">0xc0</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0xfe</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x03</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x1e</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x0c</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;;</span><br><span class="line"><span class="comment">// width: 128, height: 48</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> three_support[] U8X8_PROGMEM = &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfe</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x3f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf8</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x0f</span>, <span class="number">0xf0</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x7f</span>, <span class="number">0xfe</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x1f</span>, <span class="number">0xf8</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x0f</span>, <span class="number">0xf0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfe</span>, <span class="number">0xff</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x67</span>, <span class="number">0xe6</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfc</span>, <span class="number">0xff</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x67</span>, <span class="number">0xe6</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf8</span>, <span class="number">0xff</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x67</span>, <span class="number">0xe6</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf0</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x67</span>, <span class="number">0xee</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x7f</span>, <span class="number">0xfe</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x7f</span>, <span class="number">0xfe</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfe</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf8</span>, <span class="number">0xf9</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xfe</span>, <span class="number">0x7f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf8</span>, <span class="number">0xf0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xe0</span>, <span class="number">0xfd</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xf8</span>, <span class="number">0x1f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0xc0</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xc0</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDrawXBM</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1000</span>;</span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>, <span class="number">14</span>, <span class="string">&quot;Draw OLED&quot;</span>);</span><br><span class="line"></span><br><span class="line">    u8g2_DrawXBM(u8g2,<span class="number">0</span>, <span class="number">16</span>, <span class="number">128</span>, <span class="number">48</span>, bilibili);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line"></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">    u8g2_DrawStr(u8g2,<span class="number">0</span>, <span class="number">14</span>, <span class="string">&quot;bilibili&quot;</span>);</span><br><span class="line">    u8g2_DrawXBM(u8g2,<span class="number">0</span>, <span class="number">16</span>, <span class="number">128</span>, <span class="number">48</span>, three_support);</span><br><span class="line">    SEND_BUFFER_DISPLAY_MS(u8g2,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2DrawTest</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testDrawProcess(u8g2);</span><br><span class="line">    testDrawMulti(u8g2);</span><br><span class="line">    <span class="comment">//testDrawFrame(u8g2);</span></span><br><span class="line">    <span class="comment">//testDrawRBox(u8g2);</span></span><br><span class="line">    <span class="comment">//testDrawCircle(u8g2);</span></span><br><span class="line">    <span class="comment">//testDrawFilledEllipse(u8g2);</span></span><br><span class="line">    testShowFont(u8g2);</span><br><span class="line">    testDrawXBM(u8g2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><p><strong>main.c</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;i2c.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;u8g2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32_u8g2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemClock_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line">  SystemClock_Config();</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_I2C1_Init();</span><br><span class="line">  MX_TIM3_Init();</span><br><span class="line">  <span class="keyword">u8g2_t</span> u8g2;</span><br><span class="line">  u8g2Init(&amp;u8g2);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      u8g2_FirstPage(&amp;u8g2);</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">          draw(&amp;u8g2);</span><br><span class="line"></span><br><span class="line">          u8g2DrawTest(&amp;u8g2);</span><br><span class="line">      &#125; <span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p>[video(video-zNYN4enW-1680706473582)(type-bilibili)(url-<a href="https://www.bilibili.com/blackboard/webplayer/embed-whitelist-other.html?aid=739489130&amp;bvid=BV1Wk4y1q7G2&amp;cid=1079979028&amp;page=1)(image-https://img-blog.csdnimg.cn/editor-video.png)(title-STM32HAL库移植U8g2">https://www.bilibili.com/blackboard/webplayer/embed-whitelist-other.html?aid=739489130&amp;bvid=BV1Wk4y1q7G2&amp;cid=1079979028&amp;page=1)(image-https://img-blog.csdnimg.cn/editor-video.png)(title-STM32HAL库移植U8g2</a>)]</p>
<p><a href="https://blog.csdn.net/black_sneak/article/details/126312657">参考文章</a></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32使用PID调速</title>
    <url>/2023/08/24/STM32%E4%BD%BF%E7%94%A8PID%E8%B0%83%E9%80%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32使用PID调速"><a href="#STM32使用PID调速" class="headerlink" title="STM32使用PID调速"></a>STM32使用PID调速</h1><h2 id="PID原理"><a href="#PID原理" class="headerlink" title="PID原理"></a>PID原理</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824191607500.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824191607500.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824191607500"></p>
<p>PID算法是一种闭环控制系统中常用的算法，它结合了比例（P）、积分（I）和微分（D）三个环节，以实现对系统的控制。它的目的是使</p>
<p>控制系统的输出值尽可能接近预期的目标值。</p>
<p>在PID算法中，控制器通过不断地测量实际输出值和目标值之间的误差，并使用比例、积分和微分部分的控制参数来调整控制系统的输出</p>
<p>值。比例部分根据误差的大小进行控制，其输出与误差成正比。积分部分根据误差的历史累积值进行控制，其输出与误差积分的结果成正</p>
<p>比。微分部分根据误差的变化率进行控制，其输出与误差变化率成正比。</p>
<p>将这三个部分组合起来，就得到了PID算法。PID控制器不断地对系统进行测量和调整，直到实际输出值接近目标值为止。</p>
<p><strong>连续性公式</strong></p>
<script type="math/tex; mode=display">
u(t)=K_{p}*e(t)+K_{i}*\int_{0}^{t} e(t)dt+k{d}*\frac{de(t)}{dt}</script><p><strong>离散性公式</strong></p>
<script type="math/tex; mode=display">
u(t)=K_{p}*e(t)+K_{i}*\sum_{n=0}^{t} e(n)+k{d}*[e(t)-e(t-1)]</script><ul>
<li>比例系数Kp：<br>比例系数Kp的作用是根据当前<strong>误差的大小</strong>来调整控制器的输出。Kp越大，控制器对误差的灵敏度越高，系统的响应速度越快，但可能会出现过大的超调。Kp越小，控制器对误差的灵敏度越低，系统的响应速度越慢，但系统的稳定性较好。<strong>（快）</strong></li>
<li>积分系数Ki：<br>积分系数Ki的作用是根据<strong>误差的历史累积值</strong>来调整控制器的输出。Ki越大，控制器对误差的累积量越大，系统的稳态误差消除越快，但可能会出现过大的超调。Ki越小，控制器对误差的累积量越小，系统的稳态误差消除越慢，但系统的稳定性较好。<strong>（准）</strong></li>
<li>微分系数Kd：<br>微分系数Kd的作用是根据<strong>误差的变化率</strong>来调整控制器的输出。Kd越大，控制器对误差变化率的灵敏度越高，系统的响应速度越快，但可能会出现过大的超调。Kd越小，控制器对误差变化率的灵敏度越低，系统的响应速度越慢，但系统的稳定性较好。<strong>（稳）</strong></li>
</ul>
<h2 id="PID使用"><a href="#PID使用" class="headerlink" title="PID使用"></a>PID使用</h2><p>在工程文件中新建</p>
<p><code>pid.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//pid.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __BSP_PID_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	__BSP_PID_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f1xx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*pid*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> target_val;</span><br><span class="line">    <span class="keyword">float</span> actual_val;</span><br><span class="line">    <span class="keyword">float</span> err;</span><br><span class="line">    <span class="keyword">float</span> err_last;</span><br><span class="line">    <span class="keyword">float</span> err_sum;</span><br><span class="line">    <span class="keyword">float</span> Kp,Ki,Kd;</span><br><span class="line">&#125;PID_struct;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PID_Init</span><span class="params">(PID_struct *pid)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">P_realize</span><span class="params">(PID_struct * pid, <span class="keyword">float</span> actual_val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PI_realize</span><span class="params">(PID_struct * pid, <span class="keyword">float</span> actual_val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PID_realize</span><span class="params">(PID_struct * pid, <span class="keyword">float</span> actual_val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>结构体中储存pid的参数目标值、当前值、误差、kp、ki、kd等等</p>
<p><code>pid.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//pid.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pid.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PID_Init</span><span class="params">(PID_struct *pid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;PID_Init begin \n&quot;</span>);</span><br><span class="line">    pid-&gt;target_val=<span class="number">1.0</span>;</span><br><span class="line">    pid-&gt;actual_val=<span class="number">0.0</span>;</span><br><span class="line">    <span class="comment">//误差</span></span><br><span class="line">    pid-&gt;err=<span class="number">0.0</span>;</span><br><span class="line">    pid-&gt;err_last=<span class="number">0.0</span>;</span><br><span class="line">    pid-&gt;err_sum=<span class="number">0.0</span>;</span><br><span class="line">    <span class="comment">//需要自己调节</span></span><br><span class="line">    pid-&gt;Kp = <span class="number">120.0</span>;  <span class="comment">//快</span></span><br><span class="line">    pid-&gt;Ki = <span class="number">5.0</span>;   <span class="comment">//准</span></span><br><span class="line">    pid-&gt;Kd = <span class="number">0.3</span>;	<span class="comment">//稳</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">P_realize</span><span class="params">(PID_struct * pid, <span class="keyword">float</span> actual_val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pid-&gt;actual_val = actual_val;</span><br><span class="line">    pid-&gt;err = pid-&gt;target_val - pid-&gt;actual_val;</span><br><span class="line">    pid-&gt;actual_val = pid-&gt;Kp * pid-&gt;err;</span><br><span class="line">    <span class="keyword">return</span> pid-&gt;actual_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PI_realize</span><span class="params">(PID_struct * pid, <span class="keyword">float</span> actual_val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pid-&gt;actual_val = actual_val;</span><br><span class="line">    pid-&gt;err = pid-&gt;target_val - pid-&gt;actual_val;</span><br><span class="line">    pid-&gt;actual_val = pid-&gt;Kp*pid-&gt;err + pid-&gt;Ki*pid-&gt;err_sum;</span><br><span class="line">    <span class="keyword">return</span> pid-&gt;actual_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PID_realize</span><span class="params">(PID_struct * pid, <span class="keyword">float</span> actual_val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pid-&gt;actual_val = actual_val;</span><br><span class="line">    pid-&gt;err = pid-&gt;target_val - pid-&gt;actual_val;</span><br><span class="line">    pid-&gt;err_sum += pid-&gt;err;</span><br><span class="line">    pid-&gt;actual_val = pid-&gt;Kp*pid-&gt;err + pid-&gt;Ki*pid-&gt;err_sum + pid-&gt;Kd*(pid-&gt;err-pid-&gt;err_last);</span><br><span class="line">    pid-&gt;err_last = pid-&gt;err;</span><br><span class="line">    <span class="keyword">return</span> pid-&gt;actual_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一共有四个函数分别为PID初始化、P调节、PI调节、PID调节</p>
<p>传入参数为PID结构体，和编码器测的速度</p>
<p>返回值为实际PWM值</p>
<p>使用<code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private includes ----------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pid.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> Enc1_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">short</span> Enc2_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">float</span> motor1_speed = <span class="number">0.00</span>;</span><br><span class="line"><span class="keyword">float</span> motor2_speed = <span class="number">0.00</span>;</span><br><span class="line"><span class="keyword">int</span> PWM_MAX = <span class="number">1000</span>, PWM_MIN = <span class="number">-1000</span>;</span><br><span class="line">PID_struct motor1_pid;</span><br><span class="line">PID_struct motor2_pid;</span><br><span class="line"><span class="keyword">int</span> motor1_pwm, motor2_pwm;</span><br><span class="line"><span class="keyword">char</span> oledBuf[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemClock_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line">  SystemClock_Config();</span><br><span class="line">  <span class="comment">/* Initialize all configured peripherals */</span></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM3_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">  MX_TIM4_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_1);</span><br><span class="line">  HAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_2);</span><br><span class="line">  HAL_TIM_Encoder_Start(&amp;htim2, TIM_CHANNEL_ALL);</span><br><span class="line">  HAL_TIM_Encoder_Start(&amp;htim4, TIM_CHANNEL_ALL);</span><br><span class="line">  HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line">  HAL_TIM_Base_Start_IT(&amp;htim4);</span><br><span class="line">  <span class="comment">//PID初始化</span></span><br><span class="line">  PID_Init(&amp;motor1_pid);</span><br><span class="line">  PID_Init(&amp;motor2_pid);</span><br><span class="line">  OLED_Init();</span><br><span class="line">  OLED_ColorTurn(<span class="number">0</span>);</span><br><span class="line">  OLED_DisplayTurn(<span class="number">0</span>);</span><br><span class="line">  OLED_Clear();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      motor1_pwm = PID_realize(&amp;motor1_pid, motor1_speed);</span><br><span class="line">      motor2_pwm = PID_realize(&amp;motor2_pid, motor2_speed);</span><br><span class="line">      Load_PWM(motor1_pwm, motor2_pwm);</span><br><span class="line">      </span><br><span class="line">      Enc1_cnt = -(<span class="keyword">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim2);</span><br><span class="line">      Enc2_cnt = (<span class="keyword">short</span>)__HAL_TIM_GET_COUNTER(&amp;htim4);</span><br><span class="line">      motor1_speed = (<span class="keyword">float</span>)Enc1_cnt*<span class="number">100</span>/<span class="number">45</span>/<span class="number">11</span>/<span class="number">4</span>;</span><br><span class="line">      motor2_speed = (<span class="keyword">float</span>)Enc2_cnt*<span class="number">100</span>/<span class="number">45</span>/<span class="number">11</span>/<span class="number">4</span>;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Enc1_cnt: %d\r\n&quot;</span>, Enc1_cnt);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Enc2_cnt: %d\r\n&quot;</span>, Enc2_cnt);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;motor1_speed: %.3f\r\n&quot;</span>, motor1_speed);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;motor2_speed: %.3f\r\n&quot;</span>, motor2_speed);</span><br><span class="line">      <span class="comment">//OLED显示</span></span><br><span class="line">      <span class="built_in">sprintf</span>(oledBuf, <span class="string">&quot;left_speed :%.3f&quot;</span>,motor1_speed);</span><br><span class="line">      OLED_ShowString(<span class="number">0</span>, <span class="number">40</span>, (u8*)oledBuf, <span class="number">12</span>);</span><br><span class="line">      <span class="built_in">sprintf</span>(oledBuf, <span class="string">&quot;right_speed:%.3f&quot;</span>,motor2_speed);</span><br><span class="line">      OLED_ShowString(<span class="number">0</span>, <span class="number">52</span>, (u8*)oledBuf, <span class="number">12</span>);</span><br><span class="line">      OLED_Refresh();</span><br><span class="line">      __HAL_TIM_SET_COUNTER(&amp;htim2, <span class="number">0</span>);</span><br><span class="line">      __HAL_TIM_SET_COUNTER(&amp;htim4, <span class="number">0</span>);</span><br><span class="line">      HAL_Delay(<span class="number">10</span>);</span><br><span class="line">  &#125;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="匿名上位机显示波形"><a href="#匿名上位机显示波形" class="headerlink" title="匿名上位机显示波形"></a>匿名上位机显示波形</h2><p><a href="http://www.anotc.com/wiki/%E5%8C%BF%E5%90%8D%E4%BA%A7%E5%93%81%E8%B5%84%E6%96%99/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB">匿名上位机下载</a></p>
<p>匿名上位机通信协议可参考这篇文章<a href="https://blog.csdn.net/csol1607408930/article/details/123929485">匿名上位机V7.12协议编程（基于STM32F407+CubeMX+UART外设通信）</a></p>
<p><strong>使用</strong></p>
<p>新建<code>ano_upper.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> STM32_ANO_UPPER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STM32_ANO_UPPER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数据拆分宏定义，在发送大于1字节的数据类型时，比如int16、float等，需要把数据拆分成单独字节进行发送</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BYTE0(dwTemp) ( *( (char *)(&amp;dwTemp) ) ) <span class="comment">/*!&lt; uint32_t 数据拆分 byte0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BYTE1(dwTemp) ( *( (char *)(&amp;dwTemp) + 1) ) <span class="comment">/*!&lt; uint32_t 数据拆分 byte1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BYTE2(dwTemp) ( *( (char *)(&amp;dwTemp) + 2) ) <span class="comment">/*!&lt; uint32_t 数据拆分 byte2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BYTE3(dwTemp) ( *( (char *)(&amp;dwTemp) + 3) ) <span class="comment">/*!&lt; uint32_t 数据拆分 byte3 */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ANO_DT_Send_F1</span><span class="params">(<span class="keyword">uint16_t</span> data1, <span class="keyword">uint16_t</span> data2, <span class="keyword">uint16_t</span> data3, <span class="keyword">uint16_t</span> data4)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ANO_DT_Send_F2</span><span class="params">(<span class="keyword">int16_t</span> data1, <span class="keyword">int16_t</span> data2, <span class="keyword">int16_t</span> data3, <span class="keyword">int16_t</span> data4)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ANO_DT_Send_F3</span><span class="params">(<span class="keyword">int16_t</span> data1, <span class="keyword">int16_t</span> data2, <span class="keyword">int32_t</span> data3)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//STM32_ANO_UPPER_H</span></span></span><br></pre></td></tr></table></figure>
<p><code>ano_upper.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ano_upper.h&quot;</span></span></span><br><span class="line"><span class="comment">/** 发送数据缓存 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> data_to_send[<span class="number">50</span>]; <span class="comment">//用于绘图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @brief 向上位机发送发送4个uint16_t数据</span></span><br><span class="line"><span class="comment">* @param data1： 发送给上位机显示波形 (可以自己加)</span></span><br><span class="line"><span class="comment">* @return 无</span></span><br><span class="line"><span class="comment">* @note 通过F1帧发送4个uint16类型数据</span></span><br><span class="line"><span class="comment">* @see ANO_DT_Send_F1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ANO_DT_Send_F1</span><span class="params">(<span class="keyword">uint16_t</span> data1, <span class="keyword">uint16_t</span> data2, <span class="keyword">uint16_t</span> data3, <span class="keyword">uint16_t</span> data4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> _cnt=<span class="number">0</span>; <span class="comment">//计数值</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> sumcheck = <span class="number">0</span>; <span class="comment">//和校验</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> addcheck = <span class="number">0</span>; <span class="comment">//附加和校验</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xAA</span>; <span class="comment">//帧头 0xAA</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xFF</span>; <span class="comment">//目标地址</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xF1</span>; <span class="comment">//功能码0xF1</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">8</span>; <span class="comment">//数据长度8个字节</span></span><br><span class="line">    <span class="comment">//单片机为小端模式-低地址存放低位数据 匿名上位机要求先发低位数据， 所以先发低地址</span></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data1);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data1);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data2);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data2);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data3);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data3);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data4);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data4);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; (data_to_send[<span class="number">3</span>]+<span class="number">4</span>); i++) <span class="comment">//数据校验</span></span><br><span class="line">    &#123;</span><br><span class="line">        sumcheck += data_to_send[i]; <span class="comment">//从帧头开始，对每一字节进行求和，直到DATA区结束</span></span><br><span class="line">        addcheck += sumcheck; <span class="comment">//每一字节的求和操作，进行一次sumcheck的累加</span></span><br><span class="line">    &#125;;</span><br><span class="line">    data_to_send[_cnt++]=sumcheck;</span><br><span class="line">    data_to_send[_cnt++]=addcheck;</span><br><span class="line">    HAL_UART_Transmit(&amp;huart1, data_to_send,_cnt,<span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @brief 向上位机发送发送4个int16_t数据</span></span><br><span class="line"><span class="comment">* @param data1： 发送给上位机显示波形 (可以自己加)</span></span><br><span class="line"><span class="comment">* @return 无</span></span><br><span class="line"><span class="comment">* @note 通过F2帧发送4个int16类型数据</span></span><br><span class="line"><span class="comment">* @see ANO_DT_Send_F2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ANO_DT_Send_F2</span><span class="params">(<span class="keyword">int16_t</span> data1, <span class="keyword">int16_t</span> data2, <span class="keyword">int16_t</span> data3, <span class="keyword">int16_t</span> data4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> _cnt=<span class="number">0</span>; <span class="comment">//计数值</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> sumcheck = <span class="number">0</span>; <span class="comment">//和校验</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> addcheck = <span class="number">0</span>; <span class="comment">//附加和校验</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xAA</span>; <span class="comment">//帧头 0xAA</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xFF</span>; <span class="comment">//目标地址</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xF2</span>; <span class="comment">//功能码0xF2</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">8</span>; <span class="comment">//数据长度8个字节</span></span><br><span class="line">    <span class="comment">//单片机为小端模式-低地址存放低位数据 匿名上位机要求先发低位数据， 所以先发低地址</span></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data1);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data1);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data2);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data2);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data3);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data3);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data4);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data4);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; (data_to_send[<span class="number">3</span>]+<span class="number">4</span>); i++) <span class="comment">//数据校验</span></span><br><span class="line">    &#123;</span><br><span class="line">        sumcheck += data_to_send[i]; <span class="comment">//从帧头开始，对每一字节进行求和，直到DATA区结束</span></span><br><span class="line">        addcheck += sumcheck; <span class="comment">//每一字节的求和操作，进行一次sumcheck的累加</span></span><br><span class="line">    &#125;;</span><br><span class="line">    data_to_send[_cnt++]=sumcheck;</span><br><span class="line">    data_to_send[_cnt++]=addcheck;</span><br><span class="line">    HAL_UART_Transmit(&amp;huart1, data_to_send,_cnt,<span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @brief 向上位机发送发送2个int16_t和1个int32_t数据</span></span><br><span class="line"><span class="comment">* @param data1： 发送给上位机显示波形 (可以自己加)</span></span><br><span class="line"><span class="comment">* @return 无</span></span><br><span class="line"><span class="comment">* @note 通过F3帧发送2个int16_t和1个int32_t数据</span></span><br><span class="line"><span class="comment">* @see ANO_DT_Send_F3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ANO_DT_Send_F3</span><span class="params">(<span class="keyword">int16_t</span> data1, <span class="keyword">int16_t</span> data2, <span class="keyword">int32_t</span> data3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> _cnt=<span class="number">0</span>; <span class="comment">//计数值</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> sumcheck = <span class="number">0</span>; <span class="comment">//和校验</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> addcheck = <span class="number">0</span>; <span class="comment">//附加和校验</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xAA</span>; <span class="comment">//帧头 0xAA</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xFF</span>; <span class="comment">//目标地址</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">0xF3</span>; <span class="comment">//功能码0xF2</span></span><br><span class="line">    data_to_send[_cnt++] = <span class="number">8</span>; <span class="comment">//数据长度8个字节</span></span><br><span class="line">    <span class="comment">//单片机为小端模式-低地址存放低位数据 匿名上位机要求先发低位数据， 所以先发低地址</span></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data1);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data1);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data2);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data2);</span><br><span class="line"></span><br><span class="line">    data_to_send[_cnt++]=BYTE0(data3);</span><br><span class="line">    data_to_send[_cnt++]=BYTE1(data3);</span><br><span class="line">    data_to_send[_cnt++]=BYTE2(data3);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; (data_to_send[<span class="number">3</span>]+<span class="number">4</span>); i++) <span class="comment">//数据校验</span></span><br><span class="line">    &#123;</span><br><span class="line">        sumcheck += data_to_send[i]; <span class="comment">//从帧头开始，对每一字节进行求和，直到DATA区结束</span></span><br><span class="line">        addcheck += sumcheck; <span class="comment">//每一字节的求和操作，进行一次sumcheck的累加</span></span><br><span class="line">    &#125;;</span><br><span class="line">    data_to_send[_cnt++]=sumcheck;</span><br><span class="line">    data_to_send[_cnt++]=addcheck;</span><br><span class="line">    HAL_UART_Transmit(&amp;huart1, data_to_send,_cnt,<span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用F2帧模式发送4个int16类型数据</span></span><br><span class="line">ANO_DT_Send_F2(motor1_speed*<span class="number">100</span>, motor2_speed*<span class="number">100</span>, <span class="number">1.0</span>*<span class="number">100</span>, <span class="number">1.0</span>*<span class="number">100</span>);</span><br></pre></td></tr></table></figure>
<p><strong>显示</strong></p>
<p>目标值为1.0</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/pid.gif" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/pid.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="pid"></p>
<p>最终</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824200902554.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230824200902554.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230824200902554"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32用HAL库驱动OLED</title>
    <url>/2022/07/22/STM32%E7%94%A8HAL%E5%BA%93%E9%A9%B1%E5%8A%A8OLED/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>以下使用GPIO模拟I2C通信，不用在STM32CubeMX对I2C配置</p>
<p><code>oled.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __OLED_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __OLED_H </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f1xx_hal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span>    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="comment">//-----------------测试LED端口定义---------------- </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED_ON HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED_OFF HAL_GPIO_WritePin(GPIOB,GPIO_PIN_8, GPIO_PIN_SET)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------OLED端口定义---------------- </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_SCLK_Clr() HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5, GPIO_PIN_RESET)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_SCLK_Set() HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5, GPIO_PIN_SET)<span class="comment">//SCL</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_SDIN_Clr() HAL_GPIO_WritePin(GPIOA,GPIO_PIN_7, GPIO_PIN_RESET)<span class="comment">//DIN</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_SDIN_Set() HAL_GPIO_WritePin(GPIOA,GPIO_PIN_7, GPIO_PIN_SET)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_RST_Clr() HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0, GPIO_PIN_RESET)<span class="comment">//RES</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_RST_Set() HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0, GPIO_PIN_SET)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_DC_Clr() HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1, GPIO_PIN_RESET)<span class="comment">//RES</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD  0    <span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_DATA 1    <span class="comment">//写数据</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> u8 unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> u32 unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ClearPoint</span><span class="params">(u8 x,u8 y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ColorTurn</span><span class="params">(u8 i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DisplayTurn</span><span class="params">(u8 i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2C_Start</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2C_Stop</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2C_WaitAck</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Send_Byte</span><span class="params">(u8 dat)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_WR_Byte</span><span class="params">(u8 dat,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DisPlay_On</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DisPlay_Off</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_Refresh</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_Clear</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawPoint</span><span class="params">(u8 x,u8 y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawLine</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawCircle</span><span class="params">(u8 x,u8 y,u8 r)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 size1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 size1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowChinese</span><span class="params">(u8 x,u8 y,u8 num,u8 size1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ScrollDisplay</span><span class="params">(u8 num,u8 space)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_WR_BP</span><span class="params">(u8 x,u8 y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowPicture</span><span class="params">(u8 x0,u8 y0,u8 x1,u8 y1,u8 BMP[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>oledfont.h</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __OLEDFONT_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __OLEDFONT_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//常用ASCII表</span></span><br><span class="line"><span class="comment">//偏移量32</span></span><br><span class="line"><span class="comment">//ASCII字符集</span></span><br><span class="line"><span class="comment">//偏移量32</span></span><br><span class="line"><span class="comment">//大小:12*6</span></span><br><span class="line"><span class="comment">/************************************6*8的点阵************************************/</span></span><br><span class="line"><span class="comment">//12*12 ASCII字符集点阵</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> asc2_1206[<span class="number">95</span>][<span class="number">12</span>]=&#123;</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot; &quot;,0*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;!&quot;,1*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&quot;&quot;,2*/</span></span><br><span class="line">&#123;<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x0B</span>,<span class="number">0xC0</span>,<span class="number">0x3D</span>,<span class="number">0x00</span>,<span class="number">0x0B</span>,<span class="number">0xC0</span>,<span class="number">0x3D</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;#&quot;,3*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0xE0</span>,<span class="number">0x22</span>,<span class="number">0x40</span>,<span class="number">0x31</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;$&quot;,4*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x24</span>,<span class="number">0xC0</span>,<span class="number">0x1B</span>,<span class="number">0x00</span>,<span class="number">0x0D</span>,<span class="number">0x80</span>,<span class="number">0x32</span>,<span class="number">0x40</span>,<span class="number">0x01</span>,<span class="number">0x80</span>&#125;,<span class="comment">/*&quot;%&quot;,5*/</span></span><br><span class="line">&#123;<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x1C</span>,<span class="number">0x40</span>,<span class="number">0x27</span>,<span class="number">0x40</span>,<span class="number">0x1C</span>,<span class="number">0x80</span>,<span class="number">0x07</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;&amp;&quot;,6*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#x27;&quot;,7*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;(&quot;,8*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;)&quot;,9*/</span></span><br><span class="line">&#123;<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;*&quot;,10*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;+&quot;,11*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;,&quot;,12*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;-&quot;,13*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;.&quot;,14*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;/&quot;,15*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;0&quot;,16*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;1&quot;,17*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0xC0</span>,<span class="number">0x21</span>,<span class="number">0x40</span>,<span class="number">0x22</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x18</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;2&quot;,18*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x1B</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;3&quot;,19*/</span></span><br><span class="line">&#123;<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x0D</span>,<span class="number">0x00</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x01</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;4&quot;,20*/</span></span><br><span class="line">&#123;<span class="number">0x3C</span>,<span class="number">0x80</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x23</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;5&quot;,21*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x34</span>,<span class="number">0x40</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;6&quot;,22*/</span></span><br><span class="line">&#123;<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x27</span>,<span class="number">0xC0</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;7&quot;,23*/</span></span><br><span class="line">&#123;<span class="number">0x1B</span>,<span class="number">0x80</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x1B</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;8&quot;,24*/</span></span><br><span class="line">&#123;<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0xC0</span>,<span class="number">0x22</span>,<span class="number">0x40</span>,<span class="number">0x22</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;9&quot;,25*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;:&quot;,26*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;;&quot;,27*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x0A</span>,<span class="number">0x00</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;&lt;&quot;,28*/</span></span><br><span class="line">&#123;<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;=&quot;,29*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x80</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x0A</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&gt;&quot;,30*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;?&quot;,31*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x27</span>,<span class="number">0x40</span>,<span class="number">0x29</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;@&quot;,32*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x39</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;A&quot;,33*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x1B</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;B&quot;,34*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x30</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;C&quot;,35*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;D&quot;,36*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x2E</span>,<span class="number">0x40</span>,<span class="number">0x30</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;E&quot;,37*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x2E</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;F&quot;,38*/</span></span><br><span class="line">&#123;<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x22</span>,<span class="number">0x40</span>,<span class="number">0x33</span>,<span class="number">0x80</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;G&quot;,39*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;H&quot;,40*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;I&quot;,41*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;J&quot;,42*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x0B</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;K&quot;,43*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>&#125;,<span class="comment">/*&quot;L&quot;,44*/</span></span><br><span class="line">&#123;<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;M&quot;,45*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x0C</span>,<span class="number">0x40</span>,<span class="number">0x23</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;N&quot;,46*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;O&quot;,47*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;P&quot;,48*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x21</span>,<span class="number">0x40</span>,<span class="number">0x21</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0xE0</span>,<span class="number">0x1F</span>,<span class="number">0xA0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Q&quot;,49*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x26</span>,<span class="number">0x00</span>,<span class="number">0x19</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;R&quot;,50*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x22</span>,<span class="number">0x40</span>,<span class="number">0x31</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;S&quot;,51*/</span></span><br><span class="line">&#123;<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;T&quot;,52*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;U&quot;,53*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;V&quot;,54*/</span></span><br><span class="line">&#123;<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;W&quot;,55*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x39</span>,<span class="number">0xC0</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x39</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;X&quot;,56*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x38</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Y&quot;,57*/</span></span><br><span class="line">&#123;<span class="number">0x30</span>,<span class="number">0x40</span>,<span class="number">0x21</span>,<span class="number">0xC0</span>,<span class="number">0x26</span>,<span class="number">0x40</span>,<span class="number">0x38</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Z&quot;,58*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0xE0</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;[&quot;,59*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;\&quot;,60*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x7F</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;]&quot;,61*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;^&quot;,62*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>&#125;,<span class="comment">/*&quot;_&quot;,63*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;`&quot;,64*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x80</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;a&quot;,65*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;b&quot;,66*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x06</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;c&quot;,67*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;d&quot;,68*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x03</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;e&quot;,69*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x1F</span>,<span class="number">0xC0</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x24</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;f&quot;,70*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0xE0</span>,<span class="number">0x05</span>,<span class="number">0x50</span>,<span class="number">0x05</span>,<span class="number">0x50</span>,<span class="number">0x06</span>,<span class="number">0x50</span>,<span class="number">0x04</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;g&quot;,71*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;h&quot;,72*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x27</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;i&quot;,73*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x27</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;j&quot;,74*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x01</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;k&quot;,75*/</span></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;l&quot;,76*/</span></span><br><span class="line">&#123;<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;m&quot;,77*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;n&quot;,78*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;o&quot;,79*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x04</span>,<span class="number">0x50</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;p&quot;,80*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x50</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x10</span>&#125;,<span class="comment">/*&quot;q&quot;,81*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;r&quot;,82*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x40</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;s&quot;,83*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;t&quot;,84*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;u&quot;,85*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0xC0</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;v&quot;,86*/</span></span><br><span class="line">&#123;<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;w&quot;,87*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x06</span>,<span class="number">0xC0</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;x&quot;,88*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x07</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0xE0</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;y&quot;,89*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x05</span>,<span class="number">0xC0</span>,<span class="number">0x06</span>,<span class="number">0x40</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;z&quot;,90*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x7B</span>,<span class="number">0xE0</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#123;&quot;,91*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;|&quot;,92*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x7B</span>,<span class="number">0xE0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#125;&quot;,93*/</span></span><br><span class="line">&#123;<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;~&quot;,94*/</span></span><br><span class="line">&#125;;  </span><br><span class="line"><span class="comment">//16*16 ASCII字符集点阵</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> asc2_1608[<span class="number">95</span>][<span class="number">16</span>]=&#123;      </span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot; &quot;,0*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xCC</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;!&quot;,1*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&quot;&quot;,2*/</span></span><br><span class="line">&#123;<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x03</span>,<span class="number">0xFC</span>,<span class="number">0x1E</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x03</span>,<span class="number">0xFC</span>,<span class="number">0x1E</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;#&quot;,3*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x18</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x0C</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;$&quot;,4*/</span></span><br><span class="line">&#123;<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x0F</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x07</span>,<span class="number">0x78</span>,<span class="number">0x18</span>,<span class="number">0x84</span>,<span class="number">0x00</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;%&quot;,5*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x78</span>,<span class="number">0x0F</span>,<span class="number">0x84</span>,<span class="number">0x10</span>,<span class="number">0xC4</span>,<span class="number">0x11</span>,<span class="number">0x24</span>,<span class="number">0x0E</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0xE4</span>,<span class="number">0x00</span>,<span class="number">0x84</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;&amp;&quot;,6*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x68</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#x27;&quot;,7*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x04</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;(&quot;,8*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;)&quot;,9*/</span></span><br><span class="line">&#123;<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x0F</span>,<span class="number">0xF0</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;*&quot;,10*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x0F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;+&quot;,11*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x0D</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;,&quot;,12*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>&#125;,<span class="comment">/*&quot;-&quot;,13*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;.&quot;,14*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;/&quot;,15*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;0&quot;,16*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;1&quot;,17*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x0C</span>,<span class="number">0x10</span>,<span class="number">0x14</span>,<span class="number">0x10</span>,<span class="number">0x24</span>,<span class="number">0x10</span>,<span class="number">0x44</span>,<span class="number">0x11</span>,<span class="number">0x84</span>,<span class="number">0x0E</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;2&quot;,18*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x12</span>,<span class="number">0x88</span>,<span class="number">0x0C</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;3&quot;,19*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x20</span>,<span class="number">0x04</span>,<span class="number">0x24</span>,<span class="number">0x08</span>,<span class="number">0x24</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x24</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;4&quot;,20*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x98</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x88</span>,<span class="number">0x10</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;5&quot;,21*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;6&quot;,22*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0xFC</span>,<span class="number">0x13</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;7&quot;,23*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x38</span>,<span class="number">0x11</span>,<span class="number">0x44</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x11</span>,<span class="number">0x44</span>,<span class="number">0x0E</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;8&quot;,24*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x8C</span>,<span class="number">0x10</span>,<span class="number">0x44</span>,<span class="number">0x10</span>,<span class="number">0x44</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;9&quot;,25*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;:&quot;,26*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;;&quot;,27*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&lt;&quot;,28*/</span></span><br><span class="line">&#123;<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;=&quot;,29*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&gt;&quot;,30*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x12</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x10</span>,<span class="number">0x6C</span>,<span class="number">0x10</span>,<span class="number">0x80</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;?&quot;,31*/</span></span><br><span class="line">&#123;<span class="number">0x03</span>,<span class="number">0xE0</span>,<span class="number">0x0C</span>,<span class="number">0x18</span>,<span class="number">0x13</span>,<span class="number">0xE4</span>,<span class="number">0x14</span>,<span class="number">0x24</span>,<span class="number">0x17</span>,<span class="number">0xC4</span>,<span class="number">0x08</span>,<span class="number">0x28</span>,<span class="number">0x07</span>,<span class="number">0xD0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;@&quot;,32*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x03</span>,<span class="number">0xC4</span>,<span class="number">0x1C</span>,<span class="number">0x40</span>,<span class="number">0x07</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0xE4</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;A&quot;,33*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x0E</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;B&quot;,34*/</span></span><br><span class="line">&#123;<span class="number">0x03</span>,<span class="number">0xE0</span>,<span class="number">0x0C</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x1C</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;C&quot;,35*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;D&quot;,36*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x17</span>,<span class="number">0xC4</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;E&quot;,37*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x17</span>,<span class="number">0xC0</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;F&quot;,38*/</span></span><br><span class="line">&#123;<span class="number">0x03</span>,<span class="number">0xE0</span>,<span class="number">0x0C</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x44</span>,<span class="number">0x1C</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;G&quot;,39*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;H&quot;,40*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;I&quot;,41*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x10</span>,<span class="number">0x01</span>,<span class="number">0x10</span>,<span class="number">0x01</span>,<span class="number">0x1F</span>,<span class="number">0xFE</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;J&quot;,42*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x14</span>,<span class="number">0x64</span>,<span class="number">0x18</span>,<span class="number">0x1C</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;K&quot;,43*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;L&quot;,44*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;M&quot;,45*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x0C</span>,<span class="number">0x04</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;N&quot;,46*/</span></span><br><span class="line">&#123;<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;O&quot;,47*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x10</span>,<span class="number">0x80</span>,<span class="number">0x10</span>,<span class="number">0x80</span>,<span class="number">0x10</span>,<span class="number">0x80</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;P&quot;,48*/</span></span><br><span class="line">&#123;<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x24</span>,<span class="number">0x10</span>,<span class="number">0x24</span>,<span class="number">0x10</span>,<span class="number">0x1C</span>,<span class="number">0x08</span>,<span class="number">0x0A</span>,<span class="number">0x07</span>,<span class="number">0xF2</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Q&quot;,49*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x11</span>,<span class="number">0xC0</span>,<span class="number">0x11</span>,<span class="number">0x30</span>,<span class="number">0x0E</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;R&quot;,50*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x1C</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x10</span>,<span class="number">0x44</span>,<span class="number">0x1C</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;S&quot;,51*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;T&quot;,52*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x10</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;U&quot;,53*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>,<span class="number">0x11</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x13</span>,<span class="number">0x80</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;V&quot;,54*/</span></span><br><span class="line">&#123;<span class="number">0x1F</span>,<span class="number">0xC0</span>,<span class="number">0x10</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x3C</span>,<span class="number">0x1F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;W&quot;,55*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x0C</span>,<span class="number">0x16</span>,<span class="number">0x34</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x16</span>,<span class="number">0x34</span>,<span class="number">0x18</span>,<span class="number">0x0C</span>,<span class="number">0x10</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;X&quot;,56*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x13</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0x13</span>,<span class="number">0x04</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Y&quot;,57*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x1C</span>,<span class="number">0x10</span>,<span class="number">0x64</span>,<span class="number">0x10</span>,<span class="number">0x84</span>,<span class="number">0x13</span>,<span class="number">0x04</span>,<span class="number">0x1C</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Z&quot;,58*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0xFE</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;[&quot;,59*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;\&quot;,60*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x7F</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;]&quot;,61*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;^&quot;,62*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>&#125;,<span class="comment">/*&quot;_&quot;,63*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;`&quot;,64*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x98</span>,<span class="number">0x01</span>,<span class="number">0x24</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;a&quot;,65*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;b&quot;,66*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;c&quot;,67*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x08</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;d&quot;,68*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;e&quot;,69*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x0F</span>,<span class="number">0xFC</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x04</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;f&quot;,70*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xD6</span>,<span class="number">0x01</span>,<span class="number">0x29</span>,<span class="number">0x01</span>,<span class="number">0x29</span>,<span class="number">0x01</span>,<span class="number">0x29</span>,<span class="number">0x01</span>,<span class="number">0xC9</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;g&quot;,71*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x84</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;h&quot;,72*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x19</span>,<span class="number">0x04</span>,<span class="number">0x19</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;i&quot;,73*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x19</span>,<span class="number">0x01</span>,<span class="number">0x19</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;j&quot;,74*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x24</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x01</span>,<span class="number">0xB4</span>,<span class="number">0x01</span>,<span class="number">0x0C</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;k&quot;,75*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;l&quot;,76*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0xFC</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xFC</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>&#125;,<span class="comment">/*&quot;m&quot;,77*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x84</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;n&quot;,78*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;o&quot;,79*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x85</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;p&quot;,80*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x05</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x01</span>&#125;,<span class="comment">/*&quot;q&quot;,81*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x84</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;r&quot;,82*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xCC</span>,<span class="number">0x01</span>,<span class="number">0x24</span>,<span class="number">0x01</span>,<span class="number">0x24</span>,<span class="number">0x01</span>,<span class="number">0x24</span>,<span class="number">0x01</span>,<span class="number">0x24</span>,<span class="number">0x01</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;s&quot;,83*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xF8</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;t&quot;,84*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x08</span>,<span class="number">0x01</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x04</span>&#125;,<span class="comment">/*&quot;u&quot;,85*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x01</span>,<span class="number">0x60</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;v&quot;,86*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0xF0</span>,<span class="number">0x01</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x01</span>,<span class="number">0x0C</span>,<span class="number">0x01</span>,<span class="number">0xF0</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;w&quot;,87*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x8C</span>,<span class="number">0x00</span>,<span class="number">0x74</span>,<span class="number">0x01</span>,<span class="number">0x70</span>,<span class="number">0x01</span>,<span class="number">0x8C</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;x&quot;,88*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x81</span>,<span class="number">0x01</span>,<span class="number">0x71</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x01</span>,<span class="number">0x60</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;y&quot;,89*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x84</span>,<span class="number">0x01</span>,<span class="number">0x0C</span>,<span class="number">0x01</span>,<span class="number">0x34</span>,<span class="number">0x01</span>,<span class="number">0x44</span>,<span class="number">0x01</span>,<span class="number">0x84</span>,<span class="number">0x01</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;z&quot;,90*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0xFC</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>&#125;,<span class="comment">/*&quot;&#123;&quot;,91*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;|&quot;,92*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x3E</span>,<span class="number">0xFC</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#125;&quot;,93*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;~&quot;,94*/</span></span><br><span class="line">&#125;;  </span><br><span class="line"><span class="comment">//24*24 ASICII字符集点阵</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> asc2_2412[<span class="number">95</span>][<span class="number">36</span>]=&#123;      </span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot; &quot;,0*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x80</span>,<span class="number">0x38</span>,<span class="number">0x0F</span>,<span class="number">0xFE</span>,<span class="number">0x38</span>,<span class="number">0x0F</span>,<span class="number">0x80</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;!&quot;,1*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&quot;&quot;,2*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x67</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xF9</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x67</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xF9</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;#&quot;,3*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0xE0</span>,<span class="number">0xF0</span>,<span class="number">0x06</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x1F</span>,<span class="number">0xFF</span>,<span class="number">0xFE</span>,<span class="number">0x04</span>,<span class="number">0x0E</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0x87</span>,<span class="number">0xF0</span>,<span class="number">0x03</span>,<span class="number">0x81</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;$&quot;,4*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x0C</span>,<span class="number">0x70</span>,<span class="number">0x01</span>,<span class="number">0xF9</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3B</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0xEC</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;%&quot;,5*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x03</span>,<span class="number">0xF8</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x1C</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x17</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xE1</span>,<span class="number">0xD0</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0xB0</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&amp;&quot;,6*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#x27;&quot;,7*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;(&quot;,8*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;)&quot;,9*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x42</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x66</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x66</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x66</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x66</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x42</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;*&quot;,10*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;+&quot;,11*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;,&quot;,12*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;-&quot;,13*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;.&quot;,14*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;/&quot;,15*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;0&quot;,16*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x03</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;1&quot;,17*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x38</span>,<span class="number">0x02</span>,<span class="number">0xC0</span>,<span class="number">0x58</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x98</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,<span class="number">0x1C</span>,<span class="number">0x18</span>,<span class="number">0x03</span>,<span class="number">0xF8</span>,<span class="number">0x18</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;2&quot;,18*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0xF0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x03</span>,<span class="number">0xF4</span>,<span class="number">0x18</span>,<span class="number">0x01</span>,<span class="number">0xE7</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;3&quot;,19*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0D</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x61</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x81</span>,<span class="number">0x08</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;4&quot;,20*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x07</span>,<span class="number">0xFC</span>,<span class="number">0xD0</span>,<span class="number">0x06</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x38</span>,<span class="number">0x06</span>,<span class="number">0x0F</span>,<span class="number">0xF0</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;5&quot;,21*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x84</span>,<span class="number">0x30</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x03</span>,<span class="number">0x0F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;6&quot;,22*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0xF8</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;7&quot;,23*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE1</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0xF7</span>,<span class="number">0xF0</span>,<span class="number">0x06</span>,<span class="number">0x34</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x16</span>,<span class="number">0x18</span>,<span class="number">0x03</span>,<span class="number">0xF3</span>,<span class="number">0xF0</span>,<span class="number">0x01</span>,<span class="number">0xC1</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;8&quot;,24*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xFC</span>,<span class="number">0x30</span>,<span class="number">0x03</span>,<span class="number">0x06</span>,<span class="number">0x38</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x03</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;9&quot;,25*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;:&quot;,26*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x1A</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;;&quot;,27*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x14</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&lt;&quot;,28*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;=&quot;,29*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x41</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x14</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&gt;&quot;,30*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x0F</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;?&quot;,31*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x02</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x06</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0x04</span>,<span class="number">0xC0</span>,<span class="number">0x88</span>,<span class="number">0x04</span>,<span class="number">0x83</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x7F</span>,<span class="number">0x88</span>,<span class="number">0x02</span>,<span class="number">0xC0</span>,<span class="number">0x90</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;@&quot;,32*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x08</span>,<span class="number">0x01</span>,<span class="number">0xC2</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE2</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xC8</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;A&quot;,33*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x03</span>,<span class="number">0xF4</span>,<span class="number">0x18</span>,<span class="number">0x01</span>,<span class="number">0xE7</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;B&quot;,34*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;C&quot;,35*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;D&quot;,36*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x3E</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;E&quot;,37*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;F&quot;,38*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0xF0</span>,<span class="number">0x07</span>,<span class="number">0x83</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;G&quot;,39*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;H&quot;,40*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;I&quot;,41*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xFE</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xFC</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;J&quot;,42*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0xC7</span>,<span class="number">0x80</span>,<span class="number">0x05</span>,<span class="number">0x03</span>,<span class="number">0xC8</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;K&quot;,43*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;L&quot;,44*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;M&quot;,45*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x03</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;N&quot;,46*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;O&quot;,47*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;P&quot;,48*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x70</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x88</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xE6</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x84</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Q&quot;,49*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x0B</span>,<span class="number">0xC0</span>,<span class="number">0x06</span>,<span class="number">0x10</span>,<span class="number">0xF0</span>,<span class="number">0x03</span>,<span class="number">0xF0</span>,<span class="number">0x38</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;R&quot;,50*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0xF8</span>,<span class="number">0x03</span>,<span class="number">0xF0</span>,<span class="number">0x30</span>,<span class="number">0x06</span>,<span class="number">0x30</span>,<span class="number">0x10</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x08</span>,<span class="number">0x02</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x02</span>,<span class="number">0x07</span>,<span class="number">0xF0</span>,<span class="number">0x07</span>,<span class="number">0x81</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;S&quot;,51*/</span></span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;T&quot;,52*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;U&quot;,53*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0x04</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;V&quot;,54*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x07</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x04</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;W&quot;,55*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x78</span>,<span class="number">0x05</span>,<span class="number">0xF1</span>,<span class="number">0xC8</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x80</span>,<span class="number">0x04</span>,<span class="number">0x63</span>,<span class="number">0xE8</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0xF8</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;X&quot;,56*/</span></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x7C</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0xE0</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Y&quot;,57*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x04</span>,<span class="number">0x03</span>,<span class="number">0xE8</span>,<span class="number">0x04</span>,<span class="number">0x0F</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x7C</span>,<span class="number">0x08</span>,<span class="number">0x05</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Z&quot;,58*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0xFE</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;[&quot;,59*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;\&quot;,60*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;]&quot;,61*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;^&quot;,62*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>&#125;,<span class="comment">/*&quot;_&quot;,63*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;`&quot;,64*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x19</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x1B</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x26</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x24</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x24</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>&#125;,<span class="comment">/*&quot;a&quot;,65*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;b&quot;,66*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;c&quot;,67*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;d&quot;,68*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x12</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;e&quot;,69*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x03</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x06</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;f&quot;,70*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x6E</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF3</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0xB1</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0xB1</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0xB1</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0x91</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x13</span>,<span class="number">0x00</span>,<span class="number">0x2E</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;g&quot;,71*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;h&quot;,72*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x06</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;i&quot;,73*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x03</span>,<span class="number">0x06</span>,<span class="number">0x3F</span>,<span class="number">0xFE</span>,<span class="number">0x06</span>,<span class="number">0x3F</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;j&quot;,74*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x2F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;k&quot;,75*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;l&quot;,76*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>&#125;,<span class="comment">/*&quot;m&quot;,77*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;n&quot;,78*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;o&quot;,79*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;p&quot;,80*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x09</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;q&quot;,81*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;r&quot;,82*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x33</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;s&quot;,83*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xF0</span>,<span class="number">0x03</span>,<span class="number">0xFF</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;t&quot;,84*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;u&quot;,85*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;v&quot;,86*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x27</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;w&quot;,87*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x68</span>,<span class="number">0x00</span>,<span class="number">0x27</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0xC8</span>,<span class="number">0x00</span>,<span class="number">0x2C</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;x&quot;,88*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x83</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0xEC</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;y&quot;,89*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x23</span>,<span class="number">0xE8</span>,<span class="number">0x00</span>,<span class="number">0x2F</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;z&quot;,90*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x14</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0xF7</span>,<span class="number">0xFC</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#123;&quot;,91*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;|&quot;,92*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x1F</span>,<span class="number">0xF7</span>,<span class="number">0xFC</span>,<span class="number">0x00</span>,<span class="number">0x14</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#125;&quot;,93*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;~&quot;,94*/</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> Hzk1[<span class="number">22</span>][<span class="number">16</span>]=&#123;</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xFF</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0xFF</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;中&quot;,0*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x5F</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x75</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x5F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x0F</span>,<span class="number">0x09</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0x79</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x0F</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;景&quot;,1*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x02</span>,<span class="number">0x42</span>,<span class="number">0x4A</span>,<span class="number">0xCA</span>,<span class="number">0x4A</span>,<span class="number">0x4A</span>,<span class="number">0xCA</span>,<span class="number">0x4A</span>,<span class="number">0x4A</span>,<span class="number">0x42</span>,<span class="number">0x02</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x40</span>,<span class="number">0x50</span>,<span class="number">0x4C</span>,<span class="number">0x43</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x4F</span>,<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="number">0x5C</span>,<span class="number">0x40</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;园&quot;,2*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xFF</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x7F</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x9F</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;电&quot;,3*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0xE2</span>,<span class="number">0xA2</span>,<span class="number">0x92</span>,<span class="number">0x8A</span>,<span class="number">0x86</span>,<span class="number">0x82</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;子&quot;,4*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0xA4</span>,<span class="number">0xFE</span>,<span class="number">0xA3</span>,<span class="number">0x22</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0xCC</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0xFF</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;科&quot;,5*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xFF</span>,<span class="number">0x10</span>,<span class="number">0x90</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xFF</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x44</span>,<span class="number">0x82</span>,<span class="number">0x7F</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x43</span>,<span class="number">0x2C</span>,<span class="number">0x10</span>,<span class="number">0x28</span>,<span class="number">0x46</span>,<span class="number">0x81</span>,<span class="number">0x80</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;技&quot;,6*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0xE4</span>,<span class="number">0x3C</span>,<span class="number">0x27</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0xE4</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;有&quot;,0*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x22</span>,<span class="number">0x5A</span>,<span class="number">0x86</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x14</span>,<span class="number">0x22</span>,<span class="number">0x41</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;限&quot;,1*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x70</span>,<span class="number">0x28</span>,<span class="number">0x26</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x24</span>,<span class="number">0x38</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;公&quot;,2*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x12</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x12</span>,<span class="number">0x12</span>,<span class="number">0x02</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;司&quot;,3*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p><code>oled.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oledfont.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f1xx_hal.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">u8 OLED_GRAM[<span class="number">144</span>][<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//反显函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ColorTurn</span><span class="params">(u8 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">         OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//正常显示</span></span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">         OLED_WR_Byte(<span class="number">0xA7</span>,OLED_CMD);<span class="comment">//反色显示</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕旋转180度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DisplayTurn</span><span class="params">(u8 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">         OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//正常显示</span></span><br><span class="line">         OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">         OLED_WR_Byte(<span class="number">0xC0</span>,OLED_CMD);<span class="comment">//反转显示</span></span><br><span class="line">         OLED_WR_Byte(<span class="number">0xA0</span>,OLED_CMD);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//起始信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2C_Start</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   OLED_SDIN_Set();</span><br><span class="line">   OLED_SCLK_Set();</span><br><span class="line">   OLED_SDIN_Clr();</span><br><span class="line">   OLED_SCLK_Clr();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结束信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2C_Stop</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   OLED_SCLK_Set();</span><br><span class="line">   OLED_SDIN_Clr();</span><br><span class="line">   OLED_SDIN_Set();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//等待信号响应</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2C_WaitAck</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//测数据信号的电平</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   OLED_SCLK_Set();</span><br><span class="line">   OLED_SCLK_Clr();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入一个字节</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Send_Byte</span><span class="params">(u8 dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">      OLED_SCLK_Clr();<span class="comment">//将时钟信号设置为低电平</span></span><br><span class="line">      <span class="keyword">if</span>(dat&amp;<span class="number">0x80</span>)<span class="comment">//将dat的8位从最高位依次写入</span></span><br><span class="line">      &#123;</span><br><span class="line">         OLED_SDIN_Set();</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">         OLED_SDIN_Clr();</span><br><span class="line">    &#125;</span><br><span class="line">      OLED_SCLK_Set();<span class="comment">//将时钟信号设置为高电平</span></span><br><span class="line">      OLED_SCLK_Clr();<span class="comment">//将时钟信号设置为低电平</span></span><br><span class="line">      dat&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送一个字节</span></span><br><span class="line"><span class="comment">//向SSD1306写入一个字节。</span></span><br><span class="line"><span class="comment">//mode:数据/命令标志 0,表示命令;1,表示数据;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_WR_Byte</span><span class="params">(u8 dat,u8 mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   I2C_Start();</span><br><span class="line">   Send_Byte(<span class="number">0x78</span>);</span><br><span class="line">   I2C_WaitAck();</span><br><span class="line">   <span class="keyword">if</span>(mode)&#123;Send_Byte(<span class="number">0x40</span>);&#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;Send_Byte(<span class="number">0x00</span>);&#125;</span><br><span class="line">   I2C_WaitAck();</span><br><span class="line">   Send_Byte(dat);</span><br><span class="line">   I2C_WaitAck();</span><br><span class="line">   I2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启OLED显示 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DisPlay_On</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//电荷泵使能</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//开启电荷泵</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//点亮屏幕</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭OLED显示 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DisPlay_Off</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//电荷泵使能</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//关闭电荷泵</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//关闭屏幕</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新显存到OLED    </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_Refresh</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i,n;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">      OLED_WR_Byte(<span class="number">0xb0</span>+i,OLED_CMD); <span class="comment">//设置行起始地址</span></span><br><span class="line">      OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);   <span class="comment">//设置低列起始地址</span></span><br><span class="line">      OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);   <span class="comment">//设置高列起始地址</span></span><br><span class="line">      <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">       OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清屏函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_Clear</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i,n;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">         &#123;</span><br><span class="line">          OLED_GRAM[n][i]=<span class="number">0</span>;<span class="comment">//清除所有数据</span></span><br><span class="line">         &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   OLED_Refresh();<span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画点 </span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawPoint</span><span class="params">(u8 x,u8 y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i,m,n;</span><br><span class="line">   i=y/<span class="number">8</span>;</span><br><span class="line">   m=y%<span class="number">8</span>;</span><br><span class="line">   n=<span class="number">1</span>&lt;&lt;m;</span><br><span class="line">   OLED_GRAM[x][i]|=n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清除一个点</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ClearPoint</span><span class="params">(u8 x,u8 y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i,m,n;</span><br><span class="line">   i=y/<span class="number">8</span>;</span><br><span class="line">   m=y%<span class="number">8</span>;</span><br><span class="line">   n=<span class="number">1</span>&lt;&lt;m;</span><br><span class="line">   OLED_GRAM[x][i]=~OLED_GRAM[x][i];</span><br><span class="line">   OLED_GRAM[x][i]|=n;</span><br><span class="line">   OLED_GRAM[x][i]=~OLED_GRAM[x][i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="comment">//x:0~128</span></span><br><span class="line"><span class="comment">//y:0~64</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawLine</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i,k,k1,k2,y0;</span><br><span class="line">   <span class="keyword">if</span>((x1&lt;<span class="number">0</span>)||(x2&gt;<span class="number">128</span>)||(y1&lt;<span class="number">0</span>)||(y2&gt;<span class="number">64</span>)||(x1&gt;x2)||(y1&gt;y2))<span class="keyword">return</span>;</span><br><span class="line">   <span class="keyword">if</span>(x1==x2)    <span class="comment">//画竖线</span></span><br><span class="line">   &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(y2-y1);i++)</span><br><span class="line">         &#123;</span><br><span class="line">            OLED_DrawPoint(x1,y1+i);</span><br><span class="line">         &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(y1==y2)   <span class="comment">//画横线</span></span><br><span class="line">   &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(x2-x1);i++)</span><br><span class="line">         &#123;</span><br><span class="line">            OLED_DrawPoint(x1+i,y1);</span><br><span class="line">         &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">else</span>      <span class="comment">//画斜线</span></span><br><span class="line">   &#123;</span><br><span class="line">      k1=y2-y1;</span><br><span class="line">      k2=x2-x1;</span><br><span class="line">      k=k1*<span class="number">10</span>/k2;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(x2-x1);i++)</span><br><span class="line">         &#123;</span><br><span class="line">           OLED_DrawPoint(x1+i,y1+i*k/<span class="number">10</span>);</span><br><span class="line">         &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//x,y:圆心坐标</span></span><br><span class="line"><span class="comment">//r:圆的半径</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawCircle</span><span class="params">(u8 x,u8 y,u8 r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> a, b,num;</span><br><span class="line">    a = <span class="number">0</span>;</span><br><span class="line">    b = r;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">2</span> * b * b &gt;= r * r)      </span><br><span class="line">    &#123;</span><br><span class="line">        OLED_DrawPoint(x + a, y - b);</span><br><span class="line">        OLED_DrawPoint(x - a, y - b);</span><br><span class="line">        OLED_DrawPoint(x - a, y + b);</span><br><span class="line">        OLED_DrawPoint(x + a, y + b);</span><br><span class="line"> </span><br><span class="line">        OLED_DrawPoint(x + b, y + a);</span><br><span class="line">        OLED_DrawPoint(x + b, y - a);</span><br><span class="line">        OLED_DrawPoint(x - b, y - a);</span><br><span class="line">        OLED_DrawPoint(x - b, y + a);</span><br><span class="line">        </span><br><span class="line">        a++;</span><br><span class="line">        num = (a * a + b * b) - r*r;<span class="comment">//计算画的点离圆心的距离</span></span><br><span class="line">        <span class="keyword">if</span>(num &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b--;</span><br><span class="line">            a--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//size:选择字体 12/16/24</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 size1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i,m,temp,size2,chr1;</span><br><span class="line">   u8 y0=y;</span><br><span class="line">   size2=(size1/<span class="number">8</span>+((size1%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*(size1/<span class="number">2</span>);  <span class="comment">//得到字体一个字符对应点阵集所占的字节数</span></span><br><span class="line">   chr1=chr-<span class="string">&#x27; &#x27;</span>;  <span class="comment">//计算偏移后的值</span></span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size2;i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">if</span>(size1==<span class="number">12</span>)</span><br><span class="line">        &#123;temp=asc2_1206[chr1][i];&#125; <span class="comment">//调用1206字体</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">16</span>)</span><br><span class="line">        &#123;temp=asc2_1608[chr1][i];&#125; <span class="comment">//调用1608字体</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">24</span>)</span><br><span class="line">        &#123;temp=asc2_2412[chr1][i];&#125; <span class="comment">//调用2412字体</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)           <span class="comment">//写入数据</span></span><br><span class="line">            &#123;</span><br><span class="line">               <span class="keyword">if</span>(temp&amp;<span class="number">0x80</span>)OLED_DrawPoint(x,y);</span><br><span class="line">               <span class="keyword">else</span> OLED_ClearPoint(x,y);</span><br><span class="line">               temp&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">               y++;</span><br><span class="line">               <span class="keyword">if</span>((y-y0)==size1)</span><br><span class="line">               &#123;</span><br><span class="line">                  y=y0;</span><br><span class="line">                  x++;</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">            &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示字符串</span></span><br><span class="line"><span class="comment">//x,y:起点坐标  </span></span><br><span class="line"><span class="comment">//size1:字体大小 </span></span><br><span class="line"><span class="comment">//*chr:字符串起始地址 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 size1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>((*chr&gt;=<span class="string">&#x27; &#x27;</span>)&amp;&amp;(*chr&lt;=<span class="string">&#x27;~&#x27;</span>))<span class="comment">//判断是不是非法字符!</span></span><br><span class="line">   &#123;</span><br><span class="line">      OLED_ShowChar(x,y,*chr,size1);</span><br><span class="line">      x+=size1/<span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span>(x&gt;<span class="number">128</span>-size1)  <span class="comment">//换行</span></span><br><span class="line">      &#123;</span><br><span class="line">         x=<span class="number">0</span>;</span><br><span class="line">         y+=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">      chr++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m^n</span></span><br><span class="line"><span class="function">u32 <span class="title">OLED_Pow</span><span class="params">(u8 m,u8 n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u32 result=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">while</span>(n--)</span><br><span class="line">   &#123;</span><br><span class="line">     result*=m;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">////显示2个数字</span></span><br><span class="line"><span class="comment">////x,y :起点坐标   </span></span><br><span class="line"><span class="comment">////len :数字的位数</span></span><br><span class="line"><span class="comment">////size:字体大小</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 t,temp;</span><br><span class="line">   <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">   &#123;</span><br><span class="line">      temp=(num/OLED_Pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line">         <span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">            OLED_ShowChar(x+(size1/<span class="number">2</span>)*t,y,<span class="string">&#x27;0&#x27;</span>,size1);</span><br><span class="line">      &#125;</span><br><span class="line">         <span class="keyword">else</span> </span><br><span class="line">         &#123;</span><br><span class="line">           OLED_ShowChar(x+(size1/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size1);</span><br><span class="line">         &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置写入数据的起始位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_WR_BP</span><span class="params">(u8 x,u8 y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);<span class="comment">//设置行起始地址</span></span><br><span class="line">   OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">   OLED_WR_Byte((x&amp;<span class="number">0x0f</span>)|<span class="number">0x01</span>,OLED_CMD);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//x0,y0：起点坐标</span></span><br><span class="line"><span class="comment">//x1,y1：终点坐标</span></span><br><span class="line"><span class="comment">//BMP[]：要写入的图片数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowPicture</span><span class="params">(u8 x0,u8 y0,u8 x1,u8 y1,u8 BMP[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u32 j=<span class="number">0</span>;</span><br><span class="line">   u8 x=<span class="number">0</span>,y=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">if</span>(y%<span class="number">8</span>==<span class="number">0</span>)y=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">else</span> y+=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">    &#123;</span><br><span class="line">       OLED_WR_BP(x0,y);</span><br><span class="line">       <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">       &#123;</span><br><span class="line">          OLED_WR_Byte(BMP[j],OLED_DATA);</span><br><span class="line">          j++;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//OLED的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* GPIO Ports Clock Enable */</span></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Configure GPIO pin Output Level */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Configure GPIO pin : PC13 */</span></span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">   OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--turn off oled panel</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD);<span class="comment">//--set contrast control register</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xCF</span>,OLED_CMD);<span class="comment">// Set SEG Output Current Brightness</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--set normal display</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x3f</span>,OLED_CMD);<span class="comment">//--1/64 duty</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset  Shift Mapping RAM Counter (0x00~0x3F)</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//-not offset</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xd5</span>,OLED_CMD);<span class="comment">//--set display clock divide ratio/oscillator frequency</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//--set divide ratio, Set Clock as 100 Frames/Sec</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//--set pre-charge period</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//Set Pre-Charge as 15 Clocks &amp; Discharge as 1 Clock</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//--set com pins hardware configuration</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);</span><br><span class="line">   OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//--set vcomh</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//Set VCOM Deselect Level</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x20</span>,OLED_CMD);<span class="comment">//-Set Page Addressing Mode (0x00/0x01/0x02)</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x02</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//--set Charge Pump enable/disable</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//--set(0x10) disable</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xA4</span>,OLED_CMD);<span class="comment">// Disable Entire Display On (0xa4/0xa5)</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">// Disable Inverse Display On (0xa6/a7) </span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);</span><br><span class="line">   OLED_Clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>main.c</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* MCU Configuration--------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span></span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END Init */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Configure the system clock */</span></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysInit */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize all configured peripherals */</span></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">    OLED_ColorTurn(<span class="number">0</span>);<span class="comment">//0姝ｅ父鏄剧ず锛?1 鍙嶈壊鏄剧ず</span></span><br><span class="line">    OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0姝ｅ父鏄剧ず 1 灞忓箷缈昏浆鏄剧ず</span></span><br><span class="line">    OLED_Clear();</span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);</span><br><span class="line">      OLED_ShowString(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;OLED&quot;</span>,<span class="number">16</span>);</span><br><span class="line">      OLED_Refresh();</span><br><span class="line">      HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END 3 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32蓝牙小车二</title>
    <url>/2021/11/14/STM32%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6%E4%BA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32基础项目：基于stm32f1的蓝牙遥控小车（二）"><a href="#STM32基础项目：基于stm32f1的蓝牙遥控小车（二）" class="headerlink" title="STM32基础项目：基于stm32f1的蓝牙遥控小车（二）"></a>STM32基础项目：基于stm32f1的蓝牙遥控小车（二）</h1><span id="more"></span>
<h3 id="STM32控制电机的转动方向和速度"><a href="#STM32控制电机的转动方向和速度" class="headerlink" title="STM32控制电机的转动方向和速度"></a>STM32控制电机的转动方向和速度</h3><h4 id="GPIO配置控制电机转向"><a href="#GPIO配置控制电机转向" class="headerlink" title="GPIO配置控制电机转向"></a>GPIO配置控制电机转向</h4><p>首先我们知道在stm32控制led灯的时候，我们将led灯的引脚输出高电平就会亮，led灯引脚输出低电平是就会灭。同理我们在简单控制直流电机转动方向时，因为直流电机有两个引脚，所以我们需要用单片机的两个IO口来控制直流电机，例如当第一路输出高电平，第二路输出低电平，就可以使电机正转；反之第一路输出低电平，第二路输出高点平，就可以使电机反转。</p>
<p><strong>程序实现</strong></p>
<p>==motor.h==</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Motor_1 PAout(5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Motor_2 PAout(6)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Turn_A</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Turn_B</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Turn_stop</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>==motor.c==</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">	</span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="comment">//开启GPIOA时钟</span></span><br><span class="line">	<span class="comment">//GPIO初始化配置</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//推挽输出</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6;<span class="comment">//设置PA5、PA6控制电机IO口</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//IO口速度为50MHz</span></span><br><span class="line">	GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Turn_A</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//正转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Motor_1 = <span class="number">1</span>;</span><br><span class="line">	Motor_2 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Turn_B</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//反转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Motor_1 = <span class="number">0</span>;</span><br><span class="line">	Motor_2 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Turn_stop</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//停止</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Motor_1 = <span class="number">0</span>;</span><br><span class="line">	Motor_2 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>接线图</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080003046.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080003046.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725080003046"></p>
<p>L298N接STM32的PA5和PA6引脚</p>
<h4 id="PWM配置直流电机的速度与方向"><a href="#PWM配置直流电机的速度与方向" class="headerlink" title="PWM配置直流电机的速度与方向"></a>PWM配置直流电机的速度与方向</h4><p>由上面程序可看到只能实现对电机转动方向的控制，电机的速度一直是5v电源供给，速度保持恒定值，无法实现对电机速度的控制。下面我们就来使用PWM来调节直流电机的速度，PWM即脉冲宽度调制(PWM)，是利用微处理器的数字输出来对模拟电路进行控制的一种非常有效的技术。即对脉冲宽度的控制。在STM32例程中有通过PWM实现呼吸灯的实验，通过占空比的大小变化来使led灯的亮度变化。<br>通过PWM调速有两种方法：一种是拔掉跳线帽通道使能，在通道使能处输入一个pwm信号，在逻辑输入逻辑信号；一种是不拔掉跳线帽，在逻辑输入两个pwm信号来控制电机速度和转向。<br>我们这里使用不拔掉跳线帽，即第二种方法。<br><strong>原理</strong><br>占空比可以实现对电机转速的调节，我们知道，占空比是高电平在一个周期之中的比值，高电平的所占的比值越大，占空比就越大，对于直流电机来讲，电机输出端引脚是高电平电机就可以转动，当输出端高电平时，电机会转动，但是是一点一点的提速，在高电平突然转向低电平时，电机由于电感有防止电流突变的作用是不会停止的，会保持这原有的转速，以此往复，电机的转速就是周期内输出的平均电压值，所以实质上我们调速是将电机处于一种，似停非停，似全速转动又非全速转动的状态，那么在一个周期的平均速度就是我们占空比调出来的速度了。<br>总结： 在电机控制中，电压越大，电机转速越快，而通过PWM输出不同的模拟电压，便可以使电机达到不同的输出转速。<br><strong>程序实现</strong><br>==motor.h==</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_TIM3_Init</span><span class="params">(u16 arr,u16 psc)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>==motor.c==</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//PA6,PA7 TIM3CH12</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_TIM3_Init</span><span class="params">(u16 arr,u16 psc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">	TIM_OCInitTypeDef TIM_OCInitStruct;</span><br><span class="line">	</span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);<span class="comment">//开启GPIOA时钟</span></span><br><span class="line">	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);<span class="comment">//开启TIM3时钟</span></span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//开启端口复用功能</span></span><br><span class="line">	<span class="comment">//GPIOA初始化</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Mode=GPIO_Mode_AF_PP;<span class="comment">//复用推挽</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Pin=GPIO_Pin_6|GPIO_Pin_7;</span><br><span class="line">	GPIO_InitStruct.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">	<span class="comment">//定时器初始化</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_ClockDivision=TIM_CKD_DIV1;<span class="comment">//分频因子</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_CounterMode=TIM_CounterMode_Up;<span class="comment">//向上计数</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_Period=arr;<span class="comment">//自动重装载值</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_Prescaler=psc;<span class="comment">//预分频系数</span></span><br><span class="line">	<span class="comment">//输出比较初始化</span></span><br><span class="line">	TIM_OCInitStruct.TIM_OCMode=TIM_OCMode_PWM1;</span><br><span class="line">	TIM_OCInitStruct.TIM_OCNPolarity=TIM_OCPolarity_High;</span><br><span class="line">	TIM_OCInitStruct.TIM_OutputState=TIM_OutputState_Enable;</span><br><span class="line">	</span><br><span class="line">	TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseInitStruct);</span><br><span class="line">	TIM_OC1Init(TIM3,&amp;TIM_OCInitStruct);<span class="comment">//通道1</span></span><br><span class="line">	TIM_OC2Init(TIM3,&amp;TIM_OCInitStruct);<span class="comment">//通道2</span></span><br><span class="line">	</span><br><span class="line">	TIM_OC1PreloadConfig(TIM3,TIM_OCPreload_Enable);<span class="comment">//使能预装载寄存器</span></span><br><span class="line">	TIM_OC2PreloadConfig(TIM3,TIM_OCPreload_Enable);</span><br><span class="line">  	TIM_Cmd(TIM3,ENABLE);        <span class="comment">//使能TIM3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里使用了TIM3的CH1和CH2，所以对PA6和PA7的引脚进行配置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725075921592.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725075921592.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725075921592"></p>
<p>然后我们可以使用</p>
<p><code>TIM_SetComparex(TIM3, PWM);</code>这个函数来对直流电机的控制</p>
<p>==main.c==</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	delay_init(); <span class="comment">//延时函数初始化</span></span><br><span class="line">	My_TIM3_Init((<span class="number">20000</span><span class="number">-1</span>),(<span class="number">72</span><span class="number">-1</span>)); <span class="comment">//周期为20ms  （arr+1）(psc+1)/Tclk</span></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">2000</span>);<span class="comment">//正慢转2s</span></span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">0</span>);</span><br><span class="line">        delay_s(<span class="number">2</span>);</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">10000</span>);<span class="comment">//正快转2s</span></span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">0</span>); </span><br><span class="line">        delay_s(<span class="number">2</span>);</span><br><span class="line">        TIM_SetCompare1(TIM3, <span class="number">0</span>);<span class="comment">//反慢转2s</span></span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">2000</span>);</span><br><span class="line">        delay_s(<span class="number">2</span>);</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">0</span>);<span class="comment">//反快转2s</span></span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">10000</span>); </span><br><span class="line">        delay_s(<span class="number">2</span>);</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">0</span>);<span class="comment">//停止</span></span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>由于stm32中自带的延时函数观察电机转动的现象不明显，所以我们可以自己写一段以秒为单位的延时，在==delay.c==中添加以下代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_s</span><span class="params">(u16 ns)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ns; i++)</span><br><span class="line">	delay_ms(<span class="number">1000</span>);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>将程序烧录到stm32中，我们就可以实现电机的速度和转向的调节了。</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32蓝牙小车三</title>
    <url>/2021/11/14/STM32%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6%E4%B8%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32基础项目：基于stm32f1的蓝牙遥控小车（三）"><a href="#STM32基础项目：基于stm32f1的蓝牙遥控小车（三）" class="headerlink" title="STM32基础项目：基于stm32f1的蓝牙遥控小车（三）"></a>STM32基础项目：基于stm32f1的蓝牙遥控小车（三）</h1><span id="more"></span>
<h3 id="STM32通过串口实现蓝牙通信"><a href="#STM32通过串口实现蓝牙通信" class="headerlink" title="STM32通过串口实现蓝牙通信"></a>STM32通过串口实现蓝牙通信</h3><p>我们这里仅使用蓝牙串口通信实现单字节数据的传输，这些就足以控制小车的运动了。我们这里用Usart1来实现蓝牙通信，然后通过检测蓝牙发送的单字节数来简单控制单片机led灯的亮灭。<br>stm32f103c8t6的led灯的引脚为PC13，所以对PC13进行配置。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line"> GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"> 	</span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);	 <span class="comment">//使能GPIOC端口时钟</span></span><br><span class="line">	</span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;				 <span class="comment">//LED--&gt;PC.5 端口配置</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 <span class="comment">//推挽输出</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		 <span class="comment">//IO口速度为50MHz</span></span><br><span class="line"> GPIO_Init(GPIOC, &amp;GPIO_InitStructure);					 <span class="comment">//根据设定参数初始化GPIOC.13</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对Usart1进行配置</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart1_Init</span><span class="params">(u32 bound)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//GPIO端口设置</span></span><br><span class="line">  	GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">	USART_InitTypeDef USART_InitStructure;</span><br><span class="line">	NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">	 </span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1|RCC_APB2Periph_GPIOA, ENABLE);	<span class="comment">//使能USART1，GPIOA时钟</span></span><br><span class="line">	<span class="comment">//USART1_TX   GPIOA.9</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; <span class="comment">//PA.9</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;	<span class="comment">//复用推挽输出</span></span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIOA.9</span></span><br><span class="line">  <span class="comment">//USART1_RX	  GPIOA.10初始化</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;<span class="comment">//PA10</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;<span class="comment">//浮空输入</span></span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIOA.10  </span></span><br><span class="line">  <span class="comment">//Usart1 NVIC 配置</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;</span><br><span class="line">	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority= <span class="number">3</span>;<span class="comment">//抢占优先级3</span></span><br><span class="line">	NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;		<span class="comment">//子优先级3</span></span><br><span class="line">	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			<span class="comment">//IRQ通道使能</span></span><br><span class="line">	NVIC_Init(&amp;NVIC_InitStructure);	<span class="comment">//根据指定的参数初始化VIC寄存器</span></span><br><span class="line">   <span class="comment">//USART 初始化设置</span></span><br><span class="line">	USART_InitStructure.USART_BaudRate = bound;<span class="comment">//串口波特率</span></span><br><span class="line">	USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class="comment">//字长为8位数据格式</span></span><br><span class="line">	USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class="comment">//一个停止位</span></span><br><span class="line">	USART_InitStructure.USART_Parity = USART_Parity_No;<span class="comment">//无奇偶校验位</span></span><br><span class="line">	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;<span class="comment">//无硬件数据流控制</span></span><br><span class="line">	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;	<span class="comment">//收发模式</span></span><br><span class="line"></span><br><span class="line">    USART_Init(USART1, &amp;USART_InitStructure); <span class="comment">//初始化串口1</span></span><br><span class="line">    USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);<span class="comment">//开启串口接受中断</span></span><br><span class="line">    USART_Cmd(USART1, ENABLE);                    <span class="comment">//使能串口1 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>连接</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">JDY-31</th>
<th style="text-align:center">stm32f103c8t6</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">RX</td>
<td style="text-align:center">PA9</td>
</tr>
<tr>
<td style="text-align:center">TX</td>
<td style="text-align:center">PA10</td>
</tr>
<tr>
<td style="text-align:center">VCC</td>
<td style="text-align:center">VCC</td>
</tr>
<tr>
<td style="text-align:center">GND</td>
<td style="text-align:center">GND</td>
</tr>
</tbody>
</table>
</div>
<p>我们这里设置当串口检测到蓝牙发送数字0，LED亮，发送数字1，LED灭。<br>首先对LED进行定义<br><code>#define LED PCout(13)</code><br>再写串口中断服务函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">USART1_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	u8 res;</span><br><span class="line">	<span class="keyword">if</span>(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) <span class="comment">//接收中断</span></span><br><span class="line">	&#123;</span><br><span class="line">	res = USART_ReceiveData(USART1);</span><br><span class="line">	<span class="keyword">if</span>(res == <span class="number">0</span>)</span><br><span class="line">		LED = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(res == <span class="number">1</span>)</span><br><span class="line">		LED = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="蓝牙APP制作"><a href="#蓝牙APP制作" class="headerlink" title="蓝牙APP制作"></a>蓝牙APP制作</h3><p>下面我们来用蓝牙app发送信号给串口，蓝牙APP制作网站：<a href="http://app.gzjkw.net/login/">http://app.gzjkw.net/login/</a><br>登<img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080041885.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080041885.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725080041885"></p>
<p>各个组件的属性可根据自己的爱好配置。<br>组件设计完后，下面进入到蓝牙APP的逻辑设计，在网页右上角点击进入逻辑设计。<br><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080110716.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080110716.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725080110716"></p>
<p>点击相应的组件，可出现对应的逻辑板块，在进行选择与配置。<br><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080125560.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080125560.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725080125560"></p>
<p>最后在菜单栏里找到打包apk选项，点击打包apk并显示二维码，手机扫描二维码下载，然后在手机设置中，找到蓝牙模块的广播名，输入PIN连接，打开app，点击蓝牙选择，找到蓝牙模块，连接即可。<br>这时你会看到，点击开灯按钮，LED亮；关灯按钮，LED灭。</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32蓝牙小车一</title>
    <url>/2021/11/14/STM32%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6%E4%B8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32基础项目：基于stm32f1的蓝牙遥控小车（一）"><a href="#STM32基础项目：基于stm32f1的蓝牙遥控小车（一）" class="headerlink" title="STM32基础项目：基于stm32f1的蓝牙遥控小车（一）"></a>STM32基础项目：基于stm32f1的蓝牙遥控小车（一）</h1><span id="more"></span>
<h3 id="元件准备"><a href="#元件准备" class="headerlink" title="元件准备"></a>元件准备</h3><ol>
<li>STM32F103C8T6核心板</li>
</ol>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008222554533.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008222554533.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211008222554533"></p>
<ol>
<li>蓝牙串口模块 JDY-31</li>
</ol>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008222833390.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008222833390.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211008222833390"></p>
<ol>
<li><p>2WD智能小车底盘套件（包含小车底盘、两个直流电机和橡胶轮）</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223222256.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223222256.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211008223222256"></p>
</li>
<li><p>L298N电机驱动板模块 </p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223358782.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223358782.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211008223358782"></p>
</li>
<li><p>12v锂电池18650锂电池</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223643286.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223643286.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211008223643286"></p>
</li>
<li><p>LM2596S DC-DC可调降压模块</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223947022.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211008223947022.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211008223947022"></p>
</li>
<li><p>若干杜邦线</p>
</li>
</ol>
<h3 id="模块的使用"><a href="#模块的使用" class="headerlink" title="模块的使用"></a>模块的使用</h3><h4 id="L298N的使用"><a href="#L298N的使用" class="headerlink" title="L298N的使用"></a>L298N的使用</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009095636180.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009095636180.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211009095636180"></p>
<p>由于一般的控制芯片起到控制作用，但是驱动能力不强，而电机所需要的电流一般比较大，控制芯片的IO口不能提供大电流，所以一般不<br>能直接驱动电机。L298是驱动芯片，可以将控制芯片的输出转换成较高的电压和能够输出较大的电流，是比较常用的电机驱动芯片。</p>
<p><strong>使用方法：</strong><br>输出A：通道A输出，连接直流电机<br>输出B:通道B输出，连接直流电机<br>12V供电：主电源正极输入<br>GND：主电源正负极输入<br>5V输出：5V电压输出端，可用于给STM32开发板进行供电<br>ENA:通道A使能<br>ENB:通道B使能<br>IN1—IN4：逻辑输入IN1-IN2接单片机IO口控制通道A，逻辑输入IN3-IN4接单片机IO口控制通道B<br>（靠近ENA的两个引脚为IN1，IN2；同理靠近ENB的两个引脚为IN3，IN4）</p>
<h4 id="LM2596S-DC-DC可调降压模块的使用"><a href="#LM2596S-DC-DC可调降压模块的使用" class="headerlink" title="LM2596S DC-DC可调降压模块的使用"></a>LM2596S DC-DC可调降压模块的使用</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009103358957.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009103358957.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211009103358957"></p>
<p><strong>引脚定义</strong><br>IN+：输入正极，接12v锂电池电源正极<br>IN-:   输入负极，接12v锂电池电源负极<br>OUT+：输出正极，引出杜邦线接单片机Vcc<br>OUT-：输出负极，引出杜邦线接单片机GND<br><strong>使用说明：</strong></p>
<p>①接入电源（3-40V），电源指示灯亮，模块正常工作<br>②调整蓝色电位器旋钮（一般顺时针旋转升压逆时针降压）并用万用表检测输出电压达到所需电压为止</p>
<h4 id="蓝牙模块的使用"><a href="#蓝牙模块的使用" class="headerlink" title="蓝牙模块的使用"></a>蓝牙模块的使用</h4><p>在蓝牙模块的使用时，我们需要用到USB转TTL模块</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009110653822.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009110653822.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211009110653822"></p>
<p><strong>连接方式</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">JDY-31</th>
<th style="text-align:center">USB转TTL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">RXD</td>
<td style="text-align:center">TXD</td>
</tr>
<tr>
<td style="text-align:center">TXD</td>
<td style="text-align:center">RXD</td>
</tr>
<tr>
<td style="text-align:center">GND</td>
<td style="text-align:center">GND</td>
</tr>
<tr>
<td style="text-align:center">VCC</td>
<td style="text-align:center">VCC</td>
</tr>
<tr>
<td style="text-align:center">EN</td>
<td style="text-align:center">3.3V或5V</td>
</tr>
</tbody>
</table>
</div>
<p>(进入AT指令模式只需要将EN引脚拉高即可，所以接3.3v或5v都可）</p>
<p><strong>串口配置</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009110653822.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009110653822.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211009110653822">初次连接波特率、停止位、数据位、校验位按图中配置，勾选发送新行</p>
<p><strong>指令</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">操作</th>
<th style="text-align:center">指令</th>
<th style="text-align:center">响应</th>
<th style="text-align:center">参数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">版本号</td>
<td style="text-align:center">AT+VERSION</td>
<td style="text-align:center">+VERSION=JDY-31-V1.35,Bluetooth V3.0</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">复位</td>
<td style="text-align:center">AT+RESET</td>
<td style="text-align:center">+OK</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">断开连接</td>
<td style="text-align:center">AT+DISC</td>
<td style="text-align:center">+OK</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">MAC地址</td>
<td style="text-align:center">AT+LADDR</td>
<td style="text-align:center">+LADDR=<Param></td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center">波特率查询</td>
<td style="text-align:center">AT+BAUD</td>
<td style="text-align:center">+BAUD=<Param></td>
<td style="text-align:center">Param:(4到9) 4：9600; 5：19200; 6：38400; 7：57600; 8：115200; 9：128000</td>
</tr>
<tr>
<td style="text-align:center">波特率设置</td>
<td style="text-align:center">AT+BAUD<Param></td>
<td style="text-align:center">+OK</td>
<td style="text-align:center">Param同上一行</td>
</tr>
<tr>
<td style="text-align:center">密码查询</td>
<td style="text-align:center">AT+PIN</td>
<td style="text-align:center">+PIN=<Param></td>
<td style="text-align:center">Param：4位密码 默认PIN：1234</td>
</tr>
<tr>
<td style="text-align:center">密码修改</td>
<td style="text-align:center">AT+PIN<Param></td>
<td style="text-align:center">+OK</td>
<td style="text-align:center">Param同上一行</td>
</tr>
<tr>
<td style="text-align:center">广播名查询</td>
<td style="text-align:center">AT+NAME</td>
<td style="text-align:center">+NAME=<Param></td>
<td style="text-align:center">Param：BLE广播名; 最长：18字节; 默认广播名：JDY-31-SPP</td>
</tr>
<tr>
<td style="text-align:center">广播名修改</td>
<td style="text-align:center">AT+NAME<Param></td>
<td style="text-align:center">+OK</td>
<td style="text-align:center">Param同上一行</td>
</tr>
<tr>
<td style="text-align:center">恢复出厂配置</td>
<td style="text-align:center">AT+DEFAULT</td>
<td style="text-align:center">OK</td>
<td style="text-align:center">无</td>
</tr>
</tbody>
</table>
</div>
<p><strong>执行指令</strong><br><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009113537868.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20211009113537868.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20211009113537868">下面只需要在串口助手发送窗口输入指定指令即可</p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32蓝牙小车四</title>
    <url>/2021/11/14/STM32%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6%E5%9B%9B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="STM32基础项目：基于stm32f1的蓝牙遥控小车（四）"><a href="#STM32基础项目：基于stm32f1的蓝牙遥控小车（四）" class="headerlink" title="STM32基础项目：基于stm32f1的蓝牙遥控小车（四）"></a>STM32基础项目：基于stm32f1的蓝牙遥控小车（四）</h1><span id="more"></span>
<p>接下来我们只需要简单的修改下程序及蓝牙app就完成蓝牙遥控小车的制作了。</p>
<h3 id="电机驱动"><a href="#电机驱动" class="headerlink" title="电机驱动"></a>电机驱动</h3><p>由于小车为二轮驱动，所以我们用TIM3的CH1~CH4,引脚为别为PA6、PA7、PB0、PB1。</p>
<h4 id="motor-c"><a href="#motor-c" class="headerlink" title="motor.c"></a>motor.c</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_TIM3_Init</span><span class="params">(u16 arr,u16 psc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">	TIM_OCInitTypeDef TIM_OCInitStruct;</span><br><span class="line">	</span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line">	GPIO_InitStruct.GPIO_Mode=GPIO_Mode_AF_PP;<span class="comment">//复用推挽</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Pin=GPIO_Pin_6|GPIO_Pin_7;</span><br><span class="line">	GPIO_InitStruct.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">	</span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_ClockDivision=TIM_CKD_DIV1;<span class="comment">//分频因子</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_CounterMode=TIM_CounterMode_Up;<span class="comment">//向上计数</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_Period=arr;<span class="comment">//自动重装载值</span></span><br><span class="line">	TIM_TimeBaseInitStruct.TIM_Prescaler=psc;<span class="comment">//预分频系数</span></span><br><span class="line">	</span><br><span class="line">	TIM_OCInitStruct.TIM_OCMode=TIM_OCMode_PWM1;</span><br><span class="line">	TIM_OCInitStruct.TIM_OCNPolarity=TIM_OCPolarity_High;</span><br><span class="line">	TIM_OCInitStruct.TIM_OutputState=TIM_OutputState_Enable;</span><br><span class="line">	GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">	GPIO_InitStruct.GPIO_Mode=GPIO_Mode_AF_PP;<span class="comment">//复用推挽</span></span><br><span class="line">	GPIO_InitStruct.GPIO_Pin=GPIO_Pin_0|GPIO_Pin_1;</span><br><span class="line">	GPIO_InitStruct.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">	GPIO_Init(GPIOB, &amp;GPIO_InitStruct);</span><br><span class="line">	TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseInitStruct);</span><br><span class="line">	TIM_OC1Init(TIM3,&amp;TIM_OCInitStruct);<span class="comment">//通道1</span></span><br><span class="line">	TIM_OC2Init(TIM3,&amp;TIM_OCInitStruct);<span class="comment">//通道2</span></span><br><span class="line">	</span><br><span class="line">	TIM_OC1PreloadConfig(TIM3,TIM_OCPreload_Enable);        <span class="comment">//使能预装载寄存器</span></span><br><span class="line">	TIM_OC2PreloadConfig(TIM3,TIM_OCPreload_Enable);</span><br><span class="line">	</span><br><span class="line">	TIM_OC3Init(TIM3,&amp;TIM_OCInitStruct);<span class="comment">//通道3</span></span><br><span class="line">	TIM_OC4Init(TIM3,&amp;TIM_OCInitStruct);<span class="comment">//通道4</span></span><br><span class="line">	</span><br><span class="line">	TIM_OC3PreloadConfig(TIM3,TIM_OCPreload_Enable);        <span class="comment">//使能预装载寄存器</span></span><br><span class="line">	TIM_OC4PreloadConfig(TIM3,TIM_OCPreload_Enable);</span><br><span class="line">  	TIM_Cmd(TIM3,ENABLE);        <span class="comment">//使能TIM3</span></span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">motor_front</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//前进</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">6000</span>);</span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">500</span>); </span><br><span class="line">		TIM_SetCompare3(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare4(TIM3, <span class="number">6000</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">motor_back</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//后退</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">6000</span>); </span><br><span class="line">		TIM_SetCompare3(TIM3, <span class="number">6000</span>);</span><br><span class="line">		TIM_SetCompare4(TIM3, <span class="number">500</span>); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">motor_left</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//左转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">500</span>); </span><br><span class="line">		TIM_SetCompare3(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare4(TIM3, <span class="number">4000</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">motor_right</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//右转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">4000</span>);</span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">500</span>); </span><br><span class="line">		TIM_SetCompare3(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare4(TIM3, <span class="number">500</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">motor_stop</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//停止</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">		TIM_SetCompare1(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare2(TIM3, <span class="number">500</span>); </span><br><span class="line">		TIM_SetCompare3(TIM3, <span class="number">500</span>);</span><br><span class="line">		TIM_SetCompare4(TIM3, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="蓝牙控制"><a href="#蓝牙控制" class="headerlink" title="蓝牙控制"></a>蓝牙控制</h3><h4 id="串口中断服务函数修改"><a href="#串口中断服务函数修改" class="headerlink" title="串口中断服务函数修改"></a>串口中断服务函数修改</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">USART1_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	u8 res;</span><br><span class="line">	<span class="keyword">if</span>(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) <span class="comment">//接收中断</span></span><br><span class="line">	&#123;</span><br><span class="line">		res = USART_ReceiveData(USART1);</span><br><span class="line">		<span class="keyword">switch</span> (res)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0x00</span>: motor_stop(); <span class="keyword">break</span>;<span class="comment">//停止</span></span><br><span class="line">			<span class="keyword">case</span> <span class="number">0x01</span>: motor_front(); <span class="keyword">break</span>;<span class="comment">//前进</span></span><br><span class="line">			<span class="keyword">case</span> <span class="number">0x02</span>: motor_back(); <span class="keyword">break</span>;<span class="comment">//后退</span></span><br><span class="line">			<span class="keyword">case</span> <span class="number">0x03</span>: motor_left(); <span class="keyword">break</span>;<span class="comment">//左转</span></span><br><span class="line">			<span class="keyword">case</span> <span class="number">0x04</span>: motor_right(); <span class="keyword">break</span>;<span class="comment">//右转</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="蓝牙APP修改"><a href="#蓝牙APP修改" class="headerlink" title="蓝牙APP修改"></a>蓝牙APP修改</h4><p><strong>组件修改</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080158852.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080158852.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725080158852"></p>
<p><strong>逻辑修改</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080213532.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220725080213532.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220725080213532"></p>
<p>最后烧录程序，一个简单的蓝牙遥控小车就完成了。</p>
<p>视频演示地址：<a href="https://www.bilibili.com/video/BV1cq4y1Z72B?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1cq4y1Z72B?spm_id_from=333.999.0.0</a></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu18.04连接摄像头蓝屏</title>
    <url>/2021/11/28/Ubuntu18-04%E8%BF%9E%E6%8E%A5%E6%91%84%E5%83%8F%E5%A4%B4%E8%93%9D%E5%B1%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>最近在使用Ubuntu18.04时，尝试用<code>cheese</code>命令打开摄像头,一开始发现虚拟机设置选项中没有USB控制器，于是手动添加了USB控制器，当开启虚拟机后，连接摄像头时电脑出现蓝屏重启问题。</p>
<p><img src="问题.png" class="lazyload placeholder" data-srcset="问题.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h4 id="问题解决："><a href="#问题解决：" class="headerlink" title="问题解决："></a>问题解决：</h4><p>我使用的是VMware15，可能存在版本兼容问题，下载VMware16问题就解决了。</p>
<p><img src="解决.png" class="lazyload placeholder" data-srcset="解决.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="成功连接"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora+PicGo+阿里云OSS服务配置图床</title>
    <url>/2022/07/16/Typora-PicGo-%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Typora下载"><a href="#Typora下载" class="headerlink" title="Typora下载"></a>Typora下载</h2><p><a href="https://typoraio.cn/">Typora </a>是一款非常受欢迎且功能强大的Markdown编辑器，具有功能之强大、设计之冷静、体验之美妙、理念之先进的一众优点。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345908.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345908.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716221558273"></p>
<h2 id="购买阿里云OSS服务"><a href="#购买阿里云OSS服务" class="headerlink" title="购买阿里云OSS服务"></a>购买阿里云OSS服务</h2><p>登录<a href="https://www.aliyun.com/">阿里云</a>，直接搜索OSS</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345590.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345590.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716222451418"></p>
<p>点<strong>立即购买</strong>，然后按照自己的需求购买</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345173.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345173.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716222601724"></p>
<p>购买完成之后进入OSS服务的管理控制台，下一步<strong>创建Bucket</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345603.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345603.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716222838476"></p>
<p>名称自取，地址尽量选择离自己近的地方，读写权限一定要改成<strong><em>公共读</em></strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345532.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162345532.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716223246271"></p>
<p>建完后可以在Bucket列表-&gt;文件管理,新建目录</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346238.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346238.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716223643464"></p>
<p>将鼠标移动到右上角头像处，点击<strong><em>AccessKey管理</em></strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346590.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346590.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716223810266"></p>
<p>点击<strong><em>创建AccessKey</em></strong>，安全验证之后获得一个<strong><em>AccessKey ID</em></strong>，后面要用到</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346308.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346308.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716224052930"></p>
<h2 id="PicGo下载"><a href="#PicGo下载" class="headerlink" title="PicGo下载"></a>PicGo下载</h2><p><a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346569.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346569.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716224441389"></p>
<p>安装成功界面如下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346917.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346917.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716224911176"></p>
<h2 id="PicGo配置"><a href="#PicGo配置" class="headerlink" title="PicGo配置"></a>PicGo配置</h2><p><strong><em>图床设置-&gt;阿里云OSS</em></strong></p>
<p>进行配置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346246.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346246.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716225430981"></p>
<p>设定KeyId和设定KeySecret在<strong><em>AccessKey管理</em></strong>中点击你创建好的AccessKey点击<strong>查看Secret</strong>就可以获得</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346909.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346909.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716225634885"></p>
<p>存储空间名为刚才创建的Bucket名称</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346678.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346678.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716230021230"></p>
<p>存储路径为创建的文件管理目录</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346106.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346106.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716230137979"></p>
<h2 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h2><p><strong>文件-&gt;偏好设置-&gt;图像</strong></p>
<p>按照以下红框中配置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346259.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346259.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716232221002"></p>
<p>验证图片上传时，在PicGo设置-&gt;设置server其监听地址与监听端口要一致</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346040.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346040.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716232547003"></p>
<p>上传成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346836.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img_for_typora/202207162346836.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220716234533054"></p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu18.04遇到的问题</title>
    <url>/2021/11/17/Ubuntu18-04%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Ubuntu18-04-Sogou搜狗输入法选词面板在终端乱码问题"><a href="#Ubuntu18-04-Sogou搜狗输入法选词面板在终端乱码问题" class="headerlink" title="Ubuntu18.04 Sogou搜狗输入法选词面板在终端乱码问题"></a>Ubuntu18.04 Sogou搜狗输入法选词面板在终端乱码问题</h2><span id="more"></span>
<p><img src="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/ubuntu_sougou.png" class="lazyload placeholder" data-srcset="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/ubuntu_sougou.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="Sougou输入法乱码"></p>
<p><strong>解决方法</strong></p>
<p>1.在Ubuntu中打开 系统设置—&gt;区域和语言—&gt;管理已安装语言，将键盘输入法系统设置为fcitx.</p>
<p><img src="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/ubuntu.png" class="lazyload placeholder" data-srcset="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/ubuntu.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="setting" style="zoom: 80%;" /></p>
<p>2.打开终端，输入fcitx-configtool</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fcitx-configtool</span><br></pre></td></tr></table></figure>
<p>3.不要把搜狗拼音放在第一位，如果放在第一位就会出现选词板乱码现象；通过上下箭头把Sogou Pinyin放在第二位，乱码现象自然消失，问题解决。（如果没有搜狗拼音，通过“+” 添加搜狗拼音）<br><img src="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/configtool.png" class="lazyload placeholder" data-srcset="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/configtool.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h2 id="Ubuntu18-04-鼠标箭头频闪问题"><a href="#Ubuntu18-04-鼠标箭头频闪问题" class="headerlink" title="Ubuntu18.04 鼠标箭头频闪问题"></a>Ubuntu18.04 鼠标箭头频闪问题</h2><p><img src="mouse_shake.gif" class="lazyload placeholder" data-srcset="mouse_shake.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="mouse_shake"></p>
<p><strong>解决方法</strong></p>
<p>在windows界面打开设置—&gt;设备—&gt;鼠标—&gt;其他鼠标选项—&gt;指针选项</p>
<p>打勾显示指针轨迹，并改为短<br><img src="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/mouse.png" class="lazyload placeholder" data-srcset="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/mouse.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" style="zoom:80%;" /></p>
<p>问题解决</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu22.04安装ROS2</title>
    <url>/2023/03/26/Ubuntu22-04%E5%AE%89%E8%A3%85ROS2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu22-04安装ROS2"><a href="#Ubuntu22-04安装ROS2" class="headerlink" title="Ubuntu22.04安装ROS2"></a>Ubuntu22.04安装ROS2</h1><h2 id="设置语言环境"><a href="#设置语言环境" class="headerlink" title="设置语言环境"></a>设置语言环境</h2><p>检查是否支持UTF-8编码</p>
<p><code>locale</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8d3193050687fa937666b7db679bb359.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8d3193050687fa937666b7db679bb359.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325182220960"></p>
<h2 id="启动Ubuntu-universe存储库"><a href="#启动Ubuntu-universe存储库" class="headerlink" title="启动Ubuntu universe存储库"></a>启动Ubuntu universe存储库</h2><p>打开软件和更新</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ae6ba05153aef98e90708616ae524573.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/ae6ba05153aef98e90708616ae524573.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325182807253"></p>
<h2 id="设置软件源"><a href="#设置软件源" class="headerlink" title="设置软件源"></a>设置软件源</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install curl gnupg lsb-release</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main&quot; | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null</span><br></pre></td></tr></table></figure>
<h2 id="安装ROS2"><a href="#安装ROS2" class="headerlink" title="安装ROS2"></a>安装ROS2</h2><p>更新apt存储库缓存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p>然后升级已安装的软件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure>
<p>安装桌面版ROS2 包含：ROS、RViz、示例与教程，安装命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install ros-humble-desktop</span><br></pre></td></tr></table></figure>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>终端下，执行ROS2程序时，需要调用如下命令配置环境：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /opt/ros/humble/setup.bash</span><br></pre></td></tr></table></figure>
<p>每次新开终端时，都得执行上述命令，或者也可以执行如下命令，将配置环境指令写入 ”~/.bashrc“ 文件，那么每次新启动终端时，不需要在手动配置环境：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;source /opt/ros/humble/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>到目前为止，ROS2就已经安装且配置完毕了。</p>
<h2 id="验证安装成功"><a href="#验证安装成功" class="headerlink" title="验证安装成功"></a>验证安装成功</h2><p>终端输入</p>
<p>打开小乌龟GUI界面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ros2 run turtlesim turtlesim_node</span><br></pre></td></tr></table></figure>
<p>控制小乌龟运动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ros2 run turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8959a97296875d0e95dfff73a2ca4152.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/8959a97296875d0e95dfff73a2ca4152.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325211135440"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu/Vim/Vscode常用命令</title>
    <url>/2023/03/25/UbuntuVimVscode%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu-Vim-Vscode常用命令"><a href="#Ubuntu-Vim-Vscode常用命令" class="headerlink" title="Ubuntu/Vim/Vscode常用命令"></a>Ubuntu/Vim/Vscode常用命令</h1><h2 id="Ubuntu命令"><a href="#Ubuntu命令" class="headerlink" title="Ubuntu命令"></a>Ubuntu命令</h2><p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install ..</span><br></pre></td></tr></table></figure>
<p>安装.deb文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure>
<p>解压<br>zip<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip *.zip</span><br></pre></td></tr></table></figure><br>rar<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unrar -x *.rar</span><br></pre></td></tr></table></figure><br>卸载</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get --purge remove &lt;package&gt;	</span><br></pre></td></tr></table></figure>
<p>查找文件位置<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whereis  xxx</span><br></pre></td></tr></table></figure><br>查看串口<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll /dev/tty*</span><br></pre></td></tr></table></figure></p>
<h2 id="Vim常用命令"><a href="#Vim常用命令" class="headerlink" title="Vim常用命令"></a>Vim常用命令</h2><ul>
<li><code>i</code>:编辑模式</li>
<li><code>:q</code>:不保存退出</li>
<li><code>:wq</code>:保存退出</li>
<li><code>:!q</code>:强制退出</li>
<li><code>:!wq</code>:强制保存退出</li>
<li><code>esc</code>:退回到命令模式</li>
</ul>
<h2 id="Vscode常用命令"><a href="#Vscode常用命令" class="headerlink" title="Vscode常用命令"></a>Vscode常用命令</h2><p><code>ctrl+shift+space</code>代码参数提示信息</p>
<h3 id="vscode中的代码提示自定义"><a href="#vscode中的代码提示自定义" class="headerlink" title="vscode中的代码提示自定义"></a>vscode中的代码提示自定义</h3><p>设置-&gt;用户代码片段-&gt;python.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="comment">// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line">	<span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line">	<span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line">	<span class="comment">// same ids are connected.</span></span><br><span class="line">	<span class="comment">// Example:</span></span><br><span class="line">	<span class="attr">&quot;Print to console&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span>: <span class="string">&quot;ros2_node_py&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;body&quot;</span>: [</span><br><span class="line">			<span class="string">&quot;import rclpy&quot;</span>,</span><br><span class="line">			<span class="string">&quot;from rclpy.node import Node&quot;</span>,</span><br><span class="line">			<span class="string">&quot;&quot;</span>,</span><br><span class="line">			<span class="string">&quot;class Mynode(Node):&quot;</span>,</span><br><span class="line">			<span class="string">&quot;    def __init__(self):&quot;</span>,</span><br><span class="line">			<span class="string">&quot;        super().__init__(\&quot;my_node\&quot;)&quot;</span>,</span><br><span class="line">			<span class="string">&quot;&quot;</span>,</span><br><span class="line">			<span class="string">&quot;def main():&quot;</span>,</span><br><span class="line">			<span class="string">&quot;    rclpy.init()&quot;</span>,</span><br><span class="line">			<span class="string">&quot;    rclpy.spin(Mynode())&quot;</span>,</span><br><span class="line">			<span class="string">&quot;    rclpy.shutdown()&quot;</span>,</span><br><span class="line">			<span class="string">&quot;&quot;</span>,</span><br><span class="line">			<span class="string">&quot;&quot;</span>,</span><br><span class="line">			<span class="string">&quot;if __name__ == \&quot;__main__\&quot;:&quot;</span>,</span><br><span class="line">			<span class="string">&quot;    main()&quot;</span></span><br><span class="line">		],</span><br><span class="line">		<span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Log output to console&quot;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>U盘写保护</title>
    <url>/2023/03/25/U%E7%9B%98%E5%86%99%E4%BF%9D%E6%8A%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="U盘写保护"><a href="#U盘写保护" class="headerlink" title="U盘写保护"></a>U盘写保护</h1><p>用win32烧录Ubuntu镜像时，显示U盘具有写保护。</p>
<p><code>win+R</code>输入cmd，进入dos界面</p>
<p>依次输入以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk</span><br><span class="line">select disk 1</span><br><span class="line">clean</span><br><span class="line">create partition primary</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu配置Clash-for-Linux</title>
    <url>/2023/03/25/Ubuntu%E9%85%8D%E7%BD%AEClash-for-Linux/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu配置Clash-for-Linux"><a href="#Ubuntu配置Clash-for-Linux" class="headerlink" title="Ubuntu配置Clash for Linux"></a>Ubuntu配置Clash for Linux</h1><h2 id="Clash下载"><a href="#Clash下载" class="headerlink" title="Clash下载"></a>Clash下载</h2><p>Clash 是一个基于Go语言开发的跨平台代理程序。</p>
<p>Clash For Linux 是基于 Electron 和 Clash 开发的 Linux 代理程序，可以让用户通过 GUI 直观的对 Clash 进行配置。</p>
<p>Github下载：<a href="https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325164145991.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325164145991.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325164145991"></p>
<p>1.创建你想要的存放文件的目录，解压gz包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip /clash-linux-amd64-v0.18.0.gz</span><br></pre></td></tr></table></figure>
<p>2.添加可执行权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x clash</span><br></pre></td></tr></table></figure>
<p>3.启动clash</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./clash</span><br></pre></td></tr></table></figure>
<p>第一次启动会在用户目录下自动生成Config.yaml 和Country.mmdb两个文件。</p>
<p>生成的config.yaml文件为空，需要后续填写自己的代理信息。</p>
<p>config.yaml一般在<code>/home/用户名/.config</code>文件夹里</p>
<h2 id="添加-Clash-配置订阅"><a href="#添加-Clash-配置订阅" class="headerlink" title="添加 Clash 配置订阅"></a>添加 Clash 配置订阅</h2><p>我所用的代理为<a href="https://bywa-1.art/">Bywave</a>，到官网订阅中心选择复制订阅，</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325165234311.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325165234311.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325165234311"></p>
<p>然后在浏览器中访问【 订阅地址后面加&amp;client=clash 】 ，然后右击浏览器页面，选择“另存为”保存页面</p>
<p>然后给保存的文件修改为Config.yaml （格式也要修改）</p>
<p>然后我们编辑下文件内容</p>
<p>首先把<code>port: 7890</code>这一行前面的全删掉</p>
<p>修改完成以后保存 替换掉刚才解压出的空的Config.yaml文件</p>
<h2 id="启动clash"><a href="#启动clash" class="headerlink" title="启动clash"></a>启动clash</h2><p>配置完成后重新执行命令启动clash，以加载修改的配置文件</p>
<p>打开下面的网址访问管理页面</p>
<p><a href="http://clash.razord.top/#/proxies">http://clash.razord.top/#/proxies</a></p>
<h2 id="设置虚拟机网络，配置代理"><a href="#设置虚拟机网络，配置代理" class="headerlink" title="设置虚拟机网络，配置代理"></a>设置虚拟机网络，配置代理</h2><p>打开系统设置，选择网络，点击网络代理，选择手动，按照yml配置文件中设置的端口进行配置，填写 HTTP 和  HTTPS 代理为 127.0.0.1:7890，填写 Socks 主机为 127.0.0.1:7891，即可启用系统代理</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325165331073.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230325165331073.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230325165331073"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu添加桌面图标快捷方式</title>
    <url>/2023/04/09/Ubuntu%E6%B7%BB%E5%8A%A0%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu添加桌面图标快捷方式"><a href="#Ubuntu添加桌面图标快捷方式" class="headerlink" title="Ubuntu添加桌面图标快捷方式"></a>Ubuntu添加桌面图标快捷方式</h1><p>Ubuntu不像是windows，启动程序会有桌面快捷方式，需要cd到软件根目录下，启动运行脚本，这显得非常繁琐。<br>本文以CLion为例子，创建CLion的桌面图标<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/share/applications</span><br><span class="line">sudo touch clion.desktop</span><br><span class="line">sudo gedit clion.desktop</span><br></pre></td></tr></table></figure><br>添加以下内容<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Name=Clion</span><br><span class="line">Exec=/mnt/clion-2022.3.3/bin/clion.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：Exec表示安装软件的启动快捷方式文件路径</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：Icon表示安装软件的图标路径</span></span><br><span class="line">Icon=/mnt/clion-2022.3.3/bin/clion.svg</span><br><span class="line">NoDisplay=false</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode在Ubuntu18.04空格长度减小问题</title>
    <url>/2021/11/20/VSCode%E5%9C%A8Ubuntu18-04%E7%A9%BA%E6%A0%BC%E9%95%BF%E5%BA%A6%E5%87%8F%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在Ubuntu18.04空格长度太小，难以辨识。<br><span id="more"></span><br>在网上找到两种方法。</p>
<h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p>1.<code>firacode</code>字体安装<br>在终端输入以下命令下载字体</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install fonts-firacode</span><br></pre></td></tr></table></figure>
<p>2.打开VSCode，按键<code>ctrl+p</code>输入<code>settings.json</code>找到文件</p>
<p>在文件配置中加入以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;editor.fontFamily&quot;: &quot;Fira Code&quot;,</span><br><span class="line">   &quot;editor.fontLigatures&quot;: true,</span><br></pre></td></tr></table></figure>
<h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p>打开VSCode的设置选项，直接在搜索设置项中输入<code>font</code><br><img src="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/vscode_font.png" class="lazyload placeholder" data-srcset="https://gitee.com/GHigher1026/ghigher/raw/master/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/STM32%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%EF%BC%9A%E5%9F%BA%E4%BA%8Estm32f1%E7%9A%84%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6/vscode_font.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p>选中字体，然后再字体系列框中输入<code>monospace</code></p>
<p>对比两种方法之后，采用第二种更加简单容易。</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode中的C++多文件编译cmake、json配置</title>
    <url>/2022/12/14/Vscode%E4%B8%AD%E7%9A%84C-%E5%A4%9A%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91cmake%E3%80%81json%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vscode中的C-多文件编译cmake、json配置"><a href="#Vscode中的C-多文件编译cmake、json配置" class="headerlink" title="Vscode中的C++多文件编译cmake、json配置"></a>Vscode中的C++多文件编译cmake、json配置</h1><h2 id="Vscode中编写C-文件"><a href="#Vscode中编写C-文件" class="headerlink" title="Vscode中编写C++文件"></a>Vscode中编写C++文件</h2><p><code>main.c</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp = x;</span><br><span class="line">    x = y;</span><br><span class="line">    y = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Welcome Vscode&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;before swap&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">swap</span>(a,b);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;after swap&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新建终端</p>
<p>执行命令</p>
<p><code>g++ main.cpp</code></p>
<p>生成可执行文件<code>a.exe</code></p>
<p><code>./a.exe</code></p>
<p>生成可以调试的可执行文件</p>
<p><code>g++ -g main.cpp -o my.exe</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214103923377.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214103923377.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221214103923377"></p>
<h2 id="launch-json-用于调试的配置文件"><a href="#launch-json-用于调试的配置文件" class="headerlink" title="launch.json:用于调试的配置文件"></a>launch.json:用于调试的配置文件</h2><blockquote>
<p>指定语言环境</p>
<p>指定调试类型</p>
<p>……..</p>
</blockquote>
<p>生成launch.json执行调试</p>
<p><strong><em>C\C++扩展退回到1.8.4版本</em></strong></p>
<p>调试-&gt;Creat a launch.json file-&gt;C++(GDB/LDB)-&gt;g++.exe</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221213211650910.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221213211650910.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221213211650910"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;g++.exe - 生成和调试活动文件&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,  <span class="comment">//重要</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;D:\\Exe\\mingw64\\bin\\gdb.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;为 gdb 启用整齐打印&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;将反汇编风格设置为 Intel&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-gdb-set disassembly-flavor intel&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;C/C++: g++.exe 生成活动文件&quot;</span>	<span class="comment">//重要</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>configurations</code>一个数组储存多个参数</p>
<blockquote>
<p>type : 指定编程环境(go node php…)</p>
<p>name :给配置项起一个易理解的名字</p>
<p>request: 指定调试模式(launch/attach)</p>
</blockquote>
<h3 id="手动启动应用程序："><a href="#手动启动应用程序：" class="headerlink" title="手动启动应用程序："></a>手动启动应用程序：</h3><p>开发者手动输入启动命令——&gt;程序运行——&gt;程序不支持打断点</p>
<h3 id="launch启动应用程序"><a href="#launch启动应用程序" class="headerlink" title="launch启动应用程序"></a>launch启动应用程序</h3><p>vscode根据配置生成启动命令并运行——&gt;更程序搭配调试器——&gt;程序运行——&gt;支持打断点</p>
<h2 id="编译多个文件"><a href="#编译多个文件" class="headerlink" title="编译多个文件"></a>编译多个文件</h2><p><code>g++ -g .\main.cpp .\swap.cpp -o multfiles</code></p>
<p>生成 的默认<code>task.json</code>只能编译单个文件</p>
<p>如果需要编译多个需要自己写<code>task.json</code>和<code>launch.json</code></p>
<p>修改<code>launch.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\mult_swap.exe&quot;</span>, <span class="comment">//改为g++生成的编译文件</span></span><br><span class="line">            ...</span><br><span class="line">            ],</span><br><span class="line">            <span class="comment">// &quot;preLaunchTask&quot;: &quot;C/C++: g++.exe 生成活动文件&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>task.json执行命令编译,for build before debug</p>
<p>launch.json执行, for debug</p>
<p>task.json的”label”与launch.json的”preLaunchTask”对应</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppbuild&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;C/C++: g++.exe 生成活动文件&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;D:\\Exe\\mingw64\\bin\\g++.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;-fdiagnostics-color=always&quot;</span>,</span><br><span class="line">                <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;options&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;detail&quot;</span>: <span class="string">&quot;调试器生成的任务。&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppbuild&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;C/C++: g++.exe 生成活动文件 ver(1)&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;D:\\Exe\\mingw64\\bin\\g++.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;-fdiagnostics-color=always&quot;</span>,</span><br><span class="line">                <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;options&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;detail&quot;</span>: <span class="string">&quot;调试器生成的任务。&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CMake文件"><a href="#CMake文件" class="headerlink" title="CMake文件"></a>CMake文件</h2><p>cmake的定义： ——-高级编译配置工具</p>
<p>当多个人用不同的语言或者编译器开发一个项目，最终要输出一个可执行文件或者共享库（(ll， so等等）这时候神器就出现了—-CMake!所有操</p>
<p>作都是通过编译CMakeLists.txt来完成的一简单，为将来处理大型的C/C++/JAVA项目做准备</p>
<p>首先windows安装CMake:<a href="https://cmake.org/download/">官网下载</a></p>
<p>安装过程中主要add Path,打开powershell输入命令<code>cmake</code>结果如下即安装成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214112717515.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214112717515.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221214112717515"></p>
<p>vscode中新建文件<code>CMakeLists.txt</code></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(MYSWAPCPP)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(my_cmake_swap main.cpp swap.cpp)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><code>ctrl+shiift+p</code>输入CMake-&gt;Cmake配置-&gt;gcc</p>
<p>如果出现<code>Bad CMake executable . Is it installed or settings contain the correct path (cmake.cmakePath)</code></p>
<p>解决:【Settings】-&gt;【Extensions】-&gt;【CMake Tools Configuration】-&gt;【CMake:Cmake Path】）指定 cmake.exe 的文件地址。</p>
<p>成功如下</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214112929961.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214112929961.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221214112929961"></p>
<p>在build目录下输入命令</p>
<p><code>cmake ..</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: D:/C++_CLion/Vscode_C++/build</span><br></pre></td></tr></table></figure>
<p>继续输入命令<code>mingw32-make.exe</code>(运行windows的makefile文件)</p>
<p>(linux为<code>make</code>)</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214161453848.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221214161453848.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221214161453848"></p>
<p>修改<code>launch.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\build\\swap_file.exe&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>​             </p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>CMake</tag>
        <tag>VSCode</tag>
        <tag>Json</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode远程开发RaspberryPi</title>
    <url>/2022/10/03/Vscode%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91RaspberryPi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用vscode开发raspberry-pi"><a href="#使用vscode开发raspberry-pi" class="headerlink" title="使用vscode开发raspberry pi"></a>使用vscode开发raspberry pi</h1><h2 id="下载扩展"><a href="#下载扩展" class="headerlink" title="下载扩展"></a>下载扩展</h2><p><code>Remote Development</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003154839731.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003154839731.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221003154839731"></p>
<h2 id="远程配置"><a href="#远程配置" class="headerlink" title="远程配置"></a>远程配置</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155123319.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155123319.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221003155123319"></p>
<p>依次点击远程控制-&gt;设置-&gt;后缀为(.ssh/config)</p>
<p>进入配置界面</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Read more about SSH config files: https://linux.die.net/man/5/ssh_config</span></span><br><span class="line"><span class="string">Host</span> <span class="string">raspberrypi</span></span><br><span class="line">    <span class="string">HostName</span> <span class="number">192.168</span><span class="number">.137</span><span class="number">.111</span></span><br><span class="line">    <span class="string">User</span> <span class="string">pi</span></span><br></pre></td></tr></table></figure>
<p>HostName为树莓派的ip地址</p>
<p>User为用户名</p>
<p>找到Remote SSH扩展设置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155509473.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155509473.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221003155509473"></p>
<p>划到最下面，勾选</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155620603.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155620603.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221003155620603"></p>
<h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155924562.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003155924562.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221003155924562"></p>
<p>两处连接方式相同</p>
<p>输入树莓派密码即可连接</p>
<p>打开文件夹</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003160205123.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221003160205123.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221003160205123"></p>
<p>使用vscode远程开发，就可以直接对树莓派的文件进行操作和配置</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221002203034305.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221002203034305.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221002203034305"></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客添加gif动图</title>
    <url>/2021/11/24/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gif%E5%8A%A8%E5%9B%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="坑——写在前面"><a href="#坑——写在前面" class="headerlink" title="坑——写在前面"></a>坑——写在前面</h2><p>在网上搜过很多添加gif动图的方法，但都不尽人意，其问题都出在<code>hexo s</code>后可以正常显示，但<code>hexo d</code>上传后就无法查看。</p>
<span id="more"></span>
<p>eg:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">100</span> <span class="attr">width</span>=<span class="string">100</span> <span class="attr">src</span>=<span class="string">&quot;gif 图片地址&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这是html直接插入gif图片地址，在上传之后gif无法显示。</p>
<p>下面直入正题：</p>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><h3 id="1-gif录取软件"><a href="#1-gif录取软件" class="headerlink" title="1.gif录取软件"></a>1.gif录取软件</h3><p>GifCam 是用于创建动画图像或 GIF 的免费软件。Windows工具的工作原理类似于相机或屏幕录像机，可为所需区域拍摄一系列照片。它稍后将它们保存为易于共享和播放的<strong>动画图像</strong>或<strong>AVI 文件</strong>。虽然该工具具有<strong>多种用途</strong>且易于操作，但它仅适用于 Windows。<br><a href="http://blog.bahraniapps.com/gifcam/#download">官网下载地址 </a>或者 百度网盘下载链接：<a href="https://pan.baidu.com/s/1W_wNTVyw8UJWO2Ahgi4Q8g">下载地址</a>  提取码：19c3</p>
<h3 id="2-更改配置"><a href="#2-更改配置" class="headerlink" title="2.更改配置"></a>2.更改配置</h3><p>打开hexo博客根目录下的<code>_config.yml</code>文件，更改以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为true后，执行命令<code>$ hexo new post_name</code>，在<code>source/_posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code>。将图片资源放在<code>post_name</code>中，文章就可以使用相对路径引用图片及gif资源了。</p>
<h3 id="3-设置路径并引用"><a href="#3-设置路径并引用" class="headerlink" title="3.设置路径并引用"></a>3.设置路径并引用</h3><p>用Typora软件设置好图像根目录为自己的同名文件夹，格式–&gt;图像–&gt;设置图片根目录</p>
<p>写文章是直接引用就可以了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure>
<p><img src="gif.png" class="lazyload placeholder" data-srcset="gif.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="使用方法"></p>
<p>这样上传之后gif图片就可以正常显示了。。。</p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Yolov5-detect.py代码简化（便于移植）</title>
    <url>/2023/11/01/Yolov5-detect-py%E4%BB%A3%E7%A0%81%E7%AE%80%E5%8C%96%EF%BC%88%E4%BE%BF%E4%BA%8E%E7%A7%BB%E6%A4%8D%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Yolov5-detect-py代码简化（便于移植）"><a href="#Yolov5-detect-py代码简化（便于移植）" class="headerlink" title="Yolov5-detect.py代码简化（便于移植）"></a>Yolov5-detect.py代码简化（便于移植）</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-  </span></span><br><span class="line"><span class="comment"># @Time : 2023/11/1 18:23</span></span><br><span class="line"><span class="comment"># @File : detect_iter.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="comment"># YOLOv5 🚀 by Ultralytics, GPL-3.0 license</span></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">torch.cuda.current_device()</span><br><span class="line"><span class="keyword">import</span> torch.backends.cudnn <span class="keyword">as</span> cudnn</span><br><span class="line"></span><br><span class="line">FILE = Path(__file__).resolve()</span><br><span class="line">ROOT = FILE.parents[<span class="number">0</span>]  <span class="comment"># YOLOv5 root directory</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">str</span>(ROOT) <span class="keyword">not</span> <span class="keyword">in</span> sys.path:</span><br><span class="line">    sys.path.append(<span class="built_in">str</span>(ROOT))  <span class="comment"># add ROOT to PATH</span></span><br><span class="line">ROOT = Path(os.path.relpath(ROOT, Path.cwd()))  <span class="comment"># relative</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> models.experimental <span class="keyword">import</span> attempt_load</span><br><span class="line"><span class="keyword">from</span> utils.datasets <span class="keyword">import</span> LoadImages, LoadStreams</span><br><span class="line"><span class="keyword">from</span> utils.general <span class="keyword">import</span> apply_classifier, check_img_size, check_imshow, check_requirements, check_suffix, colorstr, \</span><br><span class="line">    increment_path, non_max_suppression, print_args, save_one_box, scale_coords, set_logging, \</span><br><span class="line">    strip_optimizer, xyxy2xywh</span><br><span class="line"><span class="keyword">from</span> utils.plots <span class="keyword">import</span> Annotator, colors, plot_one_box</span><br><span class="line"><span class="keyword">from</span> utils.torch_utils <span class="keyword">import</span> load_classifier, select_device, time_sync</span><br><span class="line"><span class="keyword">from</span> utils.augmentations <span class="keyword">import</span> letterbox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@torch.no_grad()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line">    <span class="comment"># Initialize</span></span><br><span class="line">    weights = <span class="string">&#x27;./yolov5s.pt&#x27;</span>  <span class="comment"># model.pt path(s)</span></span><br><span class="line">    device = <span class="string">&#x27;cuda:0&#x27;</span>  <span class="comment"># cuda device, i.e. 0 or 0,1,2,3 or cpu</span></span><br><span class="line">    save_conf = <span class="literal">False</span></span><br><span class="line">    imgsz = <span class="number">640</span></span><br><span class="line">    line_thickness = <span class="number">3</span>  <span class="comment"># bounding box thickness (pixels)</span></span><br><span class="line">    hide_labels = <span class="literal">False</span>  <span class="comment"># hide labels</span></span><br><span class="line">    hide_conf = <span class="literal">False</span>  <span class="comment"># hide confidences</span></span><br><span class="line">    half = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    device = select_device(device)</span><br><span class="line">    half &amp;= device.<span class="built_in">type</span> != <span class="string">&#x27;cpu&#x27;</span>  <span class="comment"># half precision only supported on CUDA</span></span><br><span class="line">    <span class="comment"># Load model</span></span><br><span class="line">    model = attempt_load(weights, map_location=device)  <span class="comment"># load FP32 model</span></span><br><span class="line">    stride = <span class="number">32</span>  <span class="comment"># model stride</span></span><br><span class="line">    names = model.module.names <span class="keyword">if</span> <span class="built_in">hasattr</span>(model, <span class="string">&#x27;module&#x27;</span>) <span class="keyword">else</span> model.names  <span class="comment"># get class names</span></span><br><span class="line">    <span class="keyword">if</span> half:</span><br><span class="line">        model.half()  <span class="comment"># to FP16</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 导入图片</span></span><br><span class="line">    img = cv2.imread(<span class="string">&quot;./data/images/image2.jpg&quot;</span>)</span><br><span class="line">    im0 = img.copy()</span><br><span class="line">    <span class="comment"># 处理图片</span></span><br><span class="line">    img = letterbox(img, new_shape=(imgsz, imgsz), stride=stride)[<span class="number">0</span>]</span><br><span class="line">    img = img.transpose((<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>))[::-<span class="number">1</span>]  <span class="comment"># HWC to CHW, BGR to RGB</span></span><br><span class="line">    img = np.ascontiguousarray(img)</span><br><span class="line">    <span class="comment"># 个数统计</span></span><br><span class="line">    statistic_dic = &#123;name: <span class="number">0</span> <span class="keyword">for</span> name <span class="keyword">in</span> names&#125;</span><br><span class="line"></span><br><span class="line">    img = torch.from_numpy(img).to(device)</span><br><span class="line">    img = img.half() <span class="keyword">if</span> half <span class="keyword">else</span> img.<span class="built_in">float</span>()  <span class="comment"># uint8 to fp16/32</span></span><br><span class="line">    img = img / <span class="number">255.0</span>  <span class="comment"># 0 - 255 to 0.0 - 1.0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(img.shape) == <span class="number">3</span>:</span><br><span class="line">        img = img[<span class="literal">None</span>]  <span class="comment"># expand for batch dim</span></span><br><span class="line"></span><br><span class="line">    pred = model(img, augment=<span class="literal">False</span>, visualize=<span class="literal">False</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># classes决定检测类别</span></span><br><span class="line">    pred = non_max_suppression(pred, conf_thres=<span class="number">0.6</span>, iou_thres=<span class="number">0.45</span>, classes=<span class="literal">None</span>, max_det=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Process predictions</span></span><br><span class="line">    <span class="keyword">for</span> i, det <span class="keyword">in</span> <span class="built_in">enumerate</span>(pred):  <span class="comment"># per image</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(det):</span><br><span class="line">            <span class="comment"># Rescale boxes from img_size to im0 size</span></span><br><span class="line">            det[:, :<span class="number">4</span>] = scale_coords(img.shape[<span class="number">2</span>:], det[:, :<span class="number">4</span>], im0.shape).<span class="built_in">round</span>()</span><br><span class="line">            <span class="comment"># Write results</span></span><br><span class="line">            <span class="keyword">for</span> *xyxy, conf, cls <span class="keyword">in</span> <span class="built_in">reversed</span>(det):</span><br><span class="line">                c = <span class="built_in">int</span>(cls)</span><br><span class="line">                statistic_dic[names[c]] += <span class="number">1</span></span><br><span class="line">                xywh = (xyxy2xywh(torch.tensor(xyxy).view(<span class="number">1</span>, <span class="number">4</span>))).view(-<span class="number">1</span>).tolist()  <span class="comment"># normalized xywh</span></span><br><span class="line">                line = (cls, *xywh, conf) <span class="keyword">if</span> save_conf <span class="keyword">else</span> (cls, *xywh)  <span class="comment"># label format</span></span><br><span class="line">                label = <span class="literal">None</span> <span class="keyword">if</span> hide_labels <span class="keyword">else</span> (names[c] <span class="keyword">if</span> hide_conf <span class="keyword">else</span> <span class="string">f&#x27;<span class="subst">&#123;names[c]&#125;</span> <span class="subst">&#123;conf:<span class="number">.2</span>f&#125;</span>&#x27;</span>)</span><br><span class="line">                plot_one_box(xyxy, im0, label=label, color=colors(c, <span class="literal">True</span>), line_thickness=line_thickness)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(statistic_dic)</span><br><span class="line">        cv2.imshow(<span class="string">&quot;img&quot;</span>, im0)</span><br><span class="line">        cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">        cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run()</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231101193632854.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231101193632854.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231101193632854"></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客绑定域名的问题</title>
    <url>/2021/11/25/hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>绑定域名，参照学长的文章<a href="http://zhangguixin.top/2021/11/06/hexo/hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/">【地址】</a></p>
<h2 id="1-ipv6解析地址"><a href="#1-ipv6解析地址" class="headerlink" title="1.ipv6解析地址"></a>1.ipv6解析地址</h2><p>我的博客地址并非ipv4地址，而是ipv6地址</p>
<p><img src="ipv6.png" class="lazyload placeholder" data-srcset="ipv6.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p>阿里云解析地址的新手引导只针对为ipv4地址，因此ipv6地址需要自己手动添加。</p>
<p><img src="ipv4.png" class="lazyload placeholder" data-srcset="ipv4.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<p>手动添加配置如下：</p>
<p><img src="ipv6手动添加.png" class="lazyload placeholder" data-srcset="ipv6手动添加.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
<h2 id="2-加速方法"><a href="#2-加速方法" class="headerlink" title="2.加速方法"></a>2.加速方法</h2><p><a href="https://blog.csdn.net/i_do_not_know_you/article/details/105594269">参考文章</a></p>
<p>但说实话我感觉不到什么区别，借鉴以下还是不错的</p>
<h2 id="3-解决上传后需重新绑定域名的问题"><a href="#3-解决上传后需重新绑定域名的问题" class="headerlink" title="3.解决上传后需重新绑定域名的问题"></a>3.解决上传后需重新绑定域名的问题</h2><p>绑定域名后，每次<code>hexo d</code>，网页就会出现404，然后再需要重新再绑定域名，非常麻烦</p>
<p>解决方法：</p>
<p>在hexo博客目录下<code>source</code>创建一个<code>CNAME</code>文件，在里面添加上你的新域名，例如我的就是: <code>yuchanghui.top</code></p>
<p>⚠：注意没有后缀！！！</p>
<p>然后<code>hexo g</code>重新生成</p>
<p><code>hexo d</code>重新上传就好了。。。</p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>python与stm32通信</title>
    <url>/2022/01/19/python%E4%B8%8Estm32%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python与stm32通信"><a href="#python与stm32通信" class="headerlink" title="python与stm32通信"></a>python与stm32通信</h1><p>学习了python也学习了stm32，而如何将他们结合起来呢，于是我上网寻找资料，终于发现python早已给我们提供了优质的串口函数库——pyserial。</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>可以直接在<code>cmd</code>输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install pyserial</span><br></pre></td></tr></table></figure>
<p>或者在pycharm中下载相应的packages。（注意是pyserial库，而不是serial库）</p>
<h3 id="stm32代码"><a href="#stm32代码" class="headerlink" title="stm32代码"></a>stm32代码</h3><p>代码直接照搬正点原子的串口函数代码，只做了个简单的修改。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 串口中断函数无改变</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">USART1_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span>                	<span class="comment">//串口1中断服务程序</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	u8 Res;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SYSTEM_SUPPORT_OS 		<span class="comment">//如果SYSTEM_SUPPORT_OS为真，则需要支持OS.</span></span></span><br><span class="line">	OSIntEnter();    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">	<span class="keyword">if</span>(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)  <span class="comment">//接收中断(接收到的数据必须是0x0d 0x0a结尾)</span></span><br><span class="line">		&#123;</span><br><span class="line">		Res =USART_ReceiveData(USART1);	<span class="comment">//读取接收到的数据</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>((USART_RX_STA&amp;<span class="number">0x8000</span>)==<span class="number">0</span>)<span class="comment">//接收未完成</span></span><br><span class="line">			&#123;</span><br><span class="line">			<span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x4000</span>)<span class="comment">//接收到了0x0d</span></span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">if</span>(Res!=<span class="number">0x0a</span>)USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收错误,重新开始</span></span><br><span class="line">				<span class="keyword">else</span> USART_RX_STA|=<span class="number">0x8000</span>;	<span class="comment">//接收完成了 </span></span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="comment">//还没收到0X0D</span></span><br><span class="line">				&#123;	</span><br><span class="line">				<span class="keyword">if</span>(Res==<span class="number">0x0d</span>)USART_RX_STA|=<span class="number">0x4000</span>;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">					USART_RX_BUF[USART_RX_STA&amp;<span class="number">0X3FFF</span>]=Res ;</span><br><span class="line">					USART_RX_STA++;</span><br><span class="line">					<span class="keyword">if</span>(USART_RX_STA&gt;(USART_REC_LEN<span class="number">-1</span>))USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收数据错误,重新开始接收	  </span></span><br><span class="line">					&#125;		 </span><br><span class="line">				&#125;</span><br><span class="line">			&#125;   		 </span><br><span class="line">     &#125; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SYSTEM_SUPPORT_OS 	<span class="comment">//如果SYSTEM_SUPPORT_OS为真，则需要支持OS.</span></span></span><br><span class="line">	OSIntExit();  											 </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// main.c</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123;	 </span><br><span class="line">	delay_init();	    	 <span class="comment">//延时函数初始化	</span></span><br><span class="line">	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">// 设置中断优先级分组2</span></span><br><span class="line">	uart_init(<span class="number">9600</span>);	 <span class="comment">//串口初始化为9600</span></span><br><span class="line">	LED_Init();		  	 <span class="comment">//初始化与LED连接的硬件接口 </span></span><br><span class="line"> </span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;/r/nhello python/r/n&quot;</span>);</span><br><span class="line">	&#125;	 </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="python代码"><a href="#python代码" class="headerlink" title="python代码"></a>python代码</h3><p>这里也是随便写了写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> serial</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        port = <span class="string">&#x27;COM10&#x27;</span>  <span class="comment"># 串口号</span></span><br><span class="line">        baud = <span class="number">9600</span>  <span class="comment"># 波特率</span></span><br><span class="line">        ser = serial.Serial(port, baud, timeout=<span class="number">0.5</span>)</span><br><span class="line">        flag = ser.isOpen()</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;串口打开成功&quot;</span>)</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                send_datas = <span class="built_in">input</span>(<span class="string">&quot;请输入要发送的数据:&quot;</span>)</span><br><span class="line">                ser.write(<span class="built_in">str</span>(send_datas).encode(<span class="string">&quot;gbk&quot;</span>))</span><br><span class="line">                <span class="keyword">if</span> send_datas == <span class="string">&#x27;close&#x27;</span>:</span><br><span class="line">                    ser.close()</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;关闭串口&#x27;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                data = ser.read(ser.in_waiting).decode(<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> data != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;已接受到数据:&quot;</span>, data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;串口打开异常&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>还有就是stm32烧录后，不用打开串口助手（如XCOM)，这样会使串口占用，发生异常。</p>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="python_serial.png" class="lazyload placeholder" data-srcset="python_serial.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt=""></p>
]]></content>
      <categories>
        <category>单片机</category>
        <category>STM32</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>solidworks小车模型转urdf文件</title>
    <url>/2023/04/01/solidworks%E5%B0%8F%E8%BD%A6%E6%A8%A1%E5%9E%8B%E8%BD%ACurdf%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="solidworks小车模型转urdf文件"><a href="#solidworks小车模型转urdf文件" class="headerlink" title="solidworks小车模型转urdf文件"></a>solidworks小车模型转urdf文件</h1><h2 id="下载sw2urdf插件"><a href="#下载sw2urdf插件" class="headerlink" title="下载sw2urdf插件"></a>下载sw2urdf插件</h2><p><a href="https://github.com/ros/solidworks_urdf_exporter/releases">sw2urdf插件安装github地址</a></p>
<p>选择适合自己SolidWorks版本下载</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401175317811.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401175317811.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230401175317811"></p>
<h2 id="SolidWorks建模"><a href="#SolidWorks建模" class="headerlink" title="SolidWorks建模"></a>SolidWorks建模</h2><ul>
<li>装配零件</li>
<li>在joint为旋转的地方建立参考基准轴</li>
<li>每个零件建立参考坐标系</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401172720912.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401172720912.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230401172720912"></p>
<h2 id="sw2urdf"><a href="#sw2urdf" class="headerlink" title="sw2urdf"></a>sw2urdf</h2><p><code>工具-&gt;Tools-&gt;Export as urdf</code></p>
<p>首先选择主体部分base_link,然后选择参考坐标系和base_link相关联的link数目，我的为6包括4个轮子1个雷达1个摄像头</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401173144435.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401173144435.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230401173144435"></p>
<p>然后对每一个link配置，由于步骤相似，现以一个轮子为例：</p>
<p>重命名link和joint，选择参考坐标系与基准轴，选择joint类型，由于轮子为旋转关节，则<code>Joint Type</code>为<code>continous</code></p>
<ul>
<li>continuous: 旋转关节，可以绕单轴无限旋转</li>
<li>revolute: 旋转关节，类似于 continues,但是有旋转角度限制</li>
<li>prismatic: 滑动关节，沿某一轴线移动的关节，有位置极限</li>
<li>planer: 平面关节，允许在平面正交方向上平移或旋转</li>
<li>floating: 浮动关节，允许进行平移、旋转运动</li>
<li>fixed: 固定关节，不允许运动的特殊关节</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401173530599.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401173530599.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230401173530599"></p>
<p>雷达也是旋转关节与轮子的配置类似，摄像头只需要修改Joint Type为fixed即可。</p>
<p>配置完成之后，选择Preview and Export as URDF</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401174131957.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401174131957.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230401174131957"></p>
<p>配置没问题，Next</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401174146551.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20230401174146551.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230401174146551"></p>
<p>然后选择Export URDF and Meshes,不要选Only URDF，因为URDF文件里会引入mesh标签里要用到meshes文件夹下的STL模型，否则在运行机器人模型时出现错误。</p>
<p>生成的文件架构</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">│  CMakeLists.txt</span><br><span class="line">│  export.log</span><br><span class="line">│  package.xml</span><br><span class="line">│</span><br><span class="line">├─config</span><br><span class="line">│      joint_names_ros2_car.yaml</span><br><span class="line">│</span><br><span class="line">├─launch</span><br><span class="line">│      display.launch</span><br><span class="line">│      gazebo.launch</span><br><span class="line">│</span><br><span class="line">├─meshes</span><br><span class="line">│      base_link.STL</span><br><span class="line">│      Camera_Link.STL</span><br><span class="line">│      LB_Link.STL</span><br><span class="line">│      LF_Link.STL</span><br><span class="line">│      Radar_Link.STL</span><br><span class="line">│      RB_Link.STL</span><br><span class="line">│      RF_Link.STL</span><br><span class="line">│</span><br><span class="line">├─textures</span><br><span class="line">└─urdf</span><br><span class="line">        ros2_car.csv</span><br><span class="line">        ros2_car.urdf</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ROS</tag>
        <tag>Solidworks</tag>
      </tags>
  </entry>
  <entry>
    <title>torchvision中的数据集使用</title>
    <url>/2022/07/31/torchvision%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据集的下载、组织"><a href="#数据集的下载、组织" class="headerlink" title="数据集的下载、组织"></a>数据集的下载、组织</h2><p>进入Pytorch官网</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731173639596.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731173639596.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731173639596"></p>
<ul>
<li>torchaudio处理语音</li>
<li>torchtext处理文本</li>
<li>torchviison处理视觉</li>
</ul>
<h2 id="torchvision-dataset的使用"><a href="#torchvision-dataset的使用" class="headerlink" title="torchvision dataset的使用"></a>torchvision dataset的使用</h2><p>以<code>CIFAR10</code>数据集为例</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731174108374.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731174108374.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731174108374"></p>
<ul>
<li>root：数据集的根目录</li>
<li>train：bool类型，True为训练集，False为测试集</li>
<li>transform：对图像的一些transform变换操作</li>
<li>target_transform：接收并转换目标的函数/转换</li>
<li>download:为True时可以自动下载数据集，避免自己搜索下载数据集的麻烦</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class="line">train_dataset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./datasets&#x27;</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>)</span><br><span class="line">test_dataset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./datasets&#x27;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>加入ssl库是因为urllib发送请求报错</p>
<p><code>urllib.error.URLError: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1131)&gt;</code></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731175528860.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731175528860.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731175528860"></p>
<p>下载成功</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731175553014.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731175553014.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731175553014"></p>
<p>一个是压缩文件一个是解压文件</p>
<p>输出数据集的类型、元素组成和类</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(train_dataset))</span><br><span class="line"><span class="built_in">print</span>(train_dataset[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(train_dataset.classes)</span><br><span class="line">“”“</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">torchvision</span>.<span class="title">datasets</span>.<span class="title">cifar</span>.<span class="title">CIFAR10</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">(<span class="params">&lt;PIL.Image.Image image mode=RGB size=32x32 at <span class="number">0x226C2A995E0</span>&gt;, <span class="number">6</span></span>)</span></span><br><span class="line"><span class="class">[&#x27;<span class="title">airplane</span>&#x27;, &#x27;<span class="title">automobile</span>&#x27;, &#x27;<span class="title">bird</span>&#x27;, &#x27;<span class="title">cat</span>&#x27;, &#x27;<span class="title">deer</span>&#x27;, &#x27;<span class="title">dog</span>&#x27;, &#x27;<span class="title">frog</span>&#x27;, &#x27;<span class="title">horse</span>&#x27;, &#x27;<span class="title">ship</span>&#x27;, &#x27;<span class="title">truck</span>&#x27;]</span></span><br><span class="line"><span class="class">“”“</span></span><br></pre></td></tr></table></figure>
<p>可以看出数据集的元素组成分别为一张图片和target</p>
<p>其中数字6为target，所对应的类为一个label即frog青蛙</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img, target = train_dataset[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(train_dataset.classes[target])</span><br><span class="line">img.show()</span><br><span class="line">“”“</span><br><span class="line">frog</span><br><span class="line">“”“</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731181503226.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731181503226.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731181503226"></p>
<p>CIFAR10数据集一共有60000张32x32的图像，其中每一类有6000张，数据集分为五个训练批次和一个测试批次，每个批次有 10000 张图像。测试批次恰好包含来自每个类别的 1000 个随机选择的图像。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731181807163.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731181807163.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731181807163"></p>
<p>将PIL图像类型转换为Tensor类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"></span><br><span class="line">dataset_transform = torchvision.transforms.Compose([torchvision.transforms.ToTensor()])</span><br><span class="line">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class="line">train_dataset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./datasets&#x27;</span>, train=<span class="literal">True</span>, transform=dataset_transform,download=<span class="literal">True</span>)</span><br><span class="line">test_dataset = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./datasets&#x27;</span>, train=<span class="literal">False</span>, transform=dataset_transform, download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(train_dataset[<span class="number">0</span>][<span class="number">0</span>])  <span class="comment"># &lt;class &#x27;torch.Tensor&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p>上传到tensorboard中</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorboardX <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;cifar&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    img, target = train_dataset[i]</span><br><span class="line">    writer.add_image(<span class="string">&quot;test_img&quot;</span>, img, i)</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731222621836.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220731222621836.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220731222621836"></p>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客美化</title>
    <url>/2021/11/22/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="博客添加live2d小人"><a href="#博客添加live2d小人" class="headerlink" title="博客添加live2d小人"></a>博客添加live2d小人</h2><h3 id="1-安装模块"><a href="#1-安装模块" class="headerlink" title="1.安装模块"></a>1.安装模块</h3><p>在hexo博客根目录下，打开Git，输入下面命令：</p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d  </span><br></pre></td></tr></table></figure>
<h3 id="2-下载live2d模型"><a href="#2-下载live2d模型" class="headerlink" title="2.下载live2d模型"></a>2.下载live2d模型</h3><p>模型选择<a href="https://gitcode.net/mirrors/xiazeyu/live2d-widget-models?utm_source=csdn_github_accelerator">点击此处</a>，模型预览<a href="https://huaji8.top/post/live2d-plugin-2.0/">点击此处</a>，这里我用的是<code>live2d-widget-model-hijiki</code>，输入以下命令下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install live2d-widget-model-hijiki</span><br></pre></td></tr></table></figure>
<p>根据自己的喜好选择相应模型，修改即可。</p>
<h3 id="3-配置-config-yml文件"><a href="#3-配置-config-yml文件" class="headerlink" title="3.配置_config.yml文件"></a>3.配置<code>_config.yml</code>文件</h3><p>打开hexo根目录下的<code>_config.yml</code>文件，添加如下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">	<span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">	<span class="attr">model:</span> </span><br><span class="line">		<span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span> <span class="comment">#模型选择</span></span><br><span class="line">	<span class="attr">display:</span> </span><br><span class="line">		<span class="attr">position:</span> <span class="string">left</span>  <span class="comment">#模型位置</span></span><br><span class="line">		<span class="attr">width:</span> <span class="number">150</span>       <span class="comment">#模型宽度</span></span><br><span class="line">		<span class="attr">height:</span> <span class="number">300</span>      <span class="comment">#模型高度</span></span><br><span class="line">	<span class="attr">mobile:</span> </span><br><span class="line">		<span class="attr">show:</span> <span class="literal">true</span>      <span class="comment">#是否在手机端显示</span></span><br></pre></td></tr></table></figure>
<h3 id="4-效果图"><a href="#4-效果图" class="headerlink" title="4.效果图"></a>4.效果图</h3><p><img src="hijiki.gif" class="lazyload placeholder" data-srcset="hijiki.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="hijiki"></p>
<h2 id="博客添加canvas-nest背景特效"><a href="#博客添加canvas-nest背景特效" class="headerlink" title="博客添加canvas-nest背景特效"></a>博客添加canvas-nest背景特效</h2><p>Bamboo主题自带的只有ribbon一种背景特效，nest需要手动添加。</p>
<h3 id="1-修改主题下的layout-ejs文件"><a href="#1-修改主题下的layout-ejs文件" class="headerlink" title="1. 修改主题下的layout.ejs文件"></a>1. 修改主题下的<code>layout.ejs</code>文件</h3><p>仿照ribbon部分的代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	...</span><br><span class="line">	...</span><br><span class="line">	&lt;% if(theme.nest.on === true ) &#123; %&gt;</span><br><span class="line">      &lt;script type=&quot;text/javascript&quot; color=&quot;0,0,0&quot; opacity=&#x27;0.6&#x27; zIndex=&quot;-1&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2-参数修改"><a href="#2-参数修改" class="headerlink" title="2.参数修改"></a>2.参数修改</h3><ul>
<li><strong><code>color</code></strong>: 线条颜色, 默认: <code>&#39;0,0,0&#39;</code> ；三个数字分别为(R,G,B)，注意用,分割</li>
<li><strong><code>opacity</code></strong>: 线条透明度（0~1）, 默认: <code>0.5</code></li>
<li><strong><code>count</code></strong>: 线条的总数量, 默认: <code>150</code></li>
<li><strong><code>zIndex</code></strong>: 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li>
</ul>
<h3 id="3-修改主题下的-config-yml文件"><a href="#3-修改主题下的-config-yml文件" class="headerlink" title="3.修改主题下的_config.yml文件"></a>3.修改主题下的<code>_config.yml</code>文件</h3><p>同样仿照ribbon代码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">on:</span> <span class="literal">false</span> <span class="comment"># 关闭ribbon背景特效</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nest:</span></span><br><span class="line">  <span class="attr">on:</span> <span class="literal">true</span> <span class="comment"># 开启nest背景特效</span></span><br></pre></td></tr></table></figure>
<h3 id="4-效果图-1"><a href="#4-效果图-1" class="headerlink" title="4.效果图"></a>4.效果图</h3><p><img src="nest.gif" class="lazyload placeholder" data-srcset="nest.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="nest"></p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>typora中PicGo-Core插件的使用</title>
    <url>/2022/07/18/typora%E4%B8%ADPicGo-Core%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在使用PicGo(APP)时第一天还可以好好的上传成功，但是第二天就出现了问题：</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718102426012.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718102426012.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220718102426012"></p>
<p>可以上传成功，但是在typora里会一直Uploading，所以会一直上传。</p>
<p>于是改用PicGo-Core (command line)插件，效果挺好。</p>
<p>打开<strong>typora文件-&gt;偏好设置-&gt;图像</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718102702539.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220718102702539.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220718102702539"></p>
<p>将上传服务选用PicGo-Core (command line)，然后点击<strong>下载或更新</strong></p>
<p>下载完成后，<strong>打开配置文件</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;aliyun&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;aliyun&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;accessKeyId&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;accessKeySecret&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;bucket&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;area&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;customUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;options&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>只需修改这几项即可<code>accessKeyId</code>、<code>accessKeySecre</code>、<code>bucket</code>、 <code>area</code>、<code>path</code>，配置参考上篇文章<a href="http://yuchanghui.top/2022/07/16/Typora-PicGo-%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/">Typora-PicGo-阿里云OSS服务配置图床</a>。</p>
]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>不调用CV库实现图像的平移、镜像、旋转</title>
    <url>/2023/04/08/%E4%B8%8D%E8%B0%83%E7%94%A8CV%E5%BA%93%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%83%8F%E7%9A%84%E5%B9%B3%E7%A7%BB%E3%80%81%E9%95%9C%E5%83%8F%E3%80%81%E6%97%8B%E8%BD%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python实现图像的平移、镜像、旋转（不调用CV自身函数）"><a href="#Python实现图像的平移、镜像、旋转（不调用CV自身函数）" class="headerlink" title="Python实现图像的平移、镜像、旋转（不调用CV自身函数）"></a>Python实现图像的平移、镜像、旋转（不调用CV自身函数）</h1><h2 id="平移图像"><a href="#平移图像" class="headerlink" title="平移图像"></a>平移图像</h2><p>图像的平移在几何变换中算是最简单的变换之一，话不多说，直奔主题</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/84c3ce114fd6303ecf48105d3e50ec5a.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/84c3ce114fd6303ecf48105d3e50ec5a.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413220258017"></p>
<p>由图可知，在opencv中图像的原点一般为左上角，设初始坐标为$(x_{0}, x_{0})$的经过平移$(\bigtriangleup x, \bigtriangleup y)$后，坐标变为$(x_{1}, y_{1})$</p>
<p>则很容易得出两点之间的位置关系:</p>
<script type="math/tex; mode=display">
\begin{cases}
 x_{1} = x_{0} + \bigtriangleup x
\\y_{1} = y_{0} + \bigtriangleup y
\end{cases}</script><p>在python中我们可以使用简单for循环实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_Img</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv.imshow(name, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">translate_img</span>(<span class="params">img, move_y, move_x</span>):</span></span><br><span class="line">    h, w, c = img.shape</span><br><span class="line">    translated_img = np.zeros((h, w, c), dtype=np.uint8)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">            <span class="keyword">if</span> i &gt;= move_y <span class="keyword">and</span> j &gt;= move_x:</span><br><span class="line">                translated_img[i, j] = img[i - move_y, j - move_x]</span><br><span class="line">    <span class="keyword">return</span> translated_img</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img = cv.imread(<span class="string">&quot;images/cat.jpg&quot;</span>)</span><br><span class="line">h, w, c = img.shape</span><br><span class="line">translated_img = translate_img(img, h // <span class="number">3</span>, w // <span class="number">3</span>)</span><br><span class="line">img_all = np.hstack((img, translated_img))</span><br><span class="line">show_Img(<span class="string">&quot;img&quot;</span>, img_all)</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/a3736d88b6a1b8c92fa0885d029ec5db.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/a3736d88b6a1b8c92fa0885d029ec5db.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413221349660"></p>
<p>而通常我们一般是用矩阵形式表示：</p>
<script type="math/tex; mode=display">
\left [ x_{1} , y_{1}, 1\right ] = \left [ x_{0} , y_{0} , 1 \right ]  \begin{bmatrix}
 1 & 0 & 0\\
 0 & 1 & 0\\
 \bigtriangleup x & \bigtriangleup  y&1
\end{bmatrix}</script><p>python实现为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">translate_image</span>(<span class="params">image, move_x, move_y</span>):</span></span><br><span class="line">    <span class="comment"># 平移矩阵</span></span><br><span class="line">    translation_matrix = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [move_x, move_y, <span class="number">1</span>]])</span><br><span class="line">    height, width = image.shape[:<span class="number">2</span>]</span><br><span class="line">    translated_image = np.zeros([height, width, <span class="number">3</span>], dtype=np.uint8)</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            translated_x, translated_y, _ = np.dot([x, y, <span class="number">1</span>], translation_matrix)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= translated_x &lt; width <span class="keyword">and</span> <span class="number">0</span> &lt;= translated_y &lt; height:</span><br><span class="line">                translated_image[translated_y, translated_x] = image[y, x]</span><br><span class="line">    <span class="keyword">return</span> translated_image</span><br></pre></td></tr></table></figure>
<h2 id="镜像图像"><a href="#镜像图像" class="headerlink" title="镜像图像"></a>镜像图像</h2><p>图像镜像也是最为常用的一种变换，镜像就是相对某一参照面旋转180°的图像，又通常成为对称变换。</p>
<p>这里主要介绍三种镜像方式：</p>
<ul>
<li>水平镜像</li>
<li>垂直镜像</li>
<li>斜对角线镜像</li>
</ul>
<h3 id="水平镜像"><a href="#水平镜像" class="headerlink" title="水平镜像"></a>水平镜像</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/5e6f640321f1da382d946c4bf41a5353.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/5e6f640321f1da382d946c4bf41a5353.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413222438042"></p>
<p>经数学分析得水平镜像后的x1与x0和为图像宽度，而y点不变，所以:</p>
<script type="math/tex; mode=display">
\begin{cases}
 x_{1} = w - x_{0}\\
y_{1} = y_{0}
\end{cases}</script><p>转换为矩阵得：</p>
<script type="math/tex; mode=display">
\left [ x_{1}, y_{1}, 1 \right ] = \left[x_{0}, y_{0}, 1 \right]\begin{bmatrix}
 -1 & 0 & 0\\
 0 & 1 & 0 \\
 w & 0 & 1
\end{bmatrix}</script><h3 id="垂直镜像"><a href="#垂直镜像" class="headerlink" title="垂直镜像"></a>垂直镜像</h3><p>同理：</p>
<script type="math/tex; mode=display">
\left [ x_{1}, y_{1}, 1 \right ] = \left[x_{0}, y_{0}, 1 \right]\begin{bmatrix}
 1 & 0 & 0\\
 0 & -1 & 0 \\
 0 & h & 1
\end{bmatrix}</script><h3 id="斜对角线镜像"><a href="#斜对角线镜像" class="headerlink" title="斜对角线镜像"></a>斜对角线镜像</h3><p>同理：</p>
<script type="math/tex; mode=display">
\left [ x_{1}, y_{1}, 1 \right ] = \left[x_{0}, y_{0}, 1 \right]\begin{bmatrix}
 -1 & 0 & 0\\
 0 & -1 & 0 \\
 w & h & 1
\end{bmatrix}</script><p>综上所述，用python实现为:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flip_image</span>(<span class="params">image, flip</span>):</span></span><br><span class="line">    h, w = image.shape[:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    fliped_image = np.zeros((h, w, <span class="number">3</span>), dtype=np.uint8)</span><br><span class="line">    <span class="comment"># 矩阵的w-1和y-1是防止图片的索引值超出范围</span></span><br><span class="line">    <span class="keyword">if</span> flip == <span class="string">&quot;x&quot;</span>:</span><br><span class="line">        flip_matrix = np.array([[-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [w - <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">    <span class="keyword">elif</span> flip == <span class="string">&quot;y&quot;</span>:</span><br><span class="line">        flip_matrix = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, h - <span class="number">1</span>, <span class="number">1</span>]])</span><br><span class="line">    <span class="keyword">elif</span> flip == <span class="string">&quot;x-y&quot;</span>:</span><br><span class="line">        flip_matrix = np.array([[-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>], [w - <span class="number">1</span>, h - <span class="number">1</span>, <span class="number">1</span>]])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flip_matrix = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">            flip_x, flip_y, _ = np.dot([x, y, <span class="number">1</span>], flip_matrix)</span><br><span class="line">            fliped_image[flip_y, flip_x] = image[y, x]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fliped_image</span><br><span class="line">img = cv.imread(<span class="string">&quot;images/dog2.jpg&quot;</span>)</span><br><span class="line">h, w, c = img.shape</span><br><span class="line">img = cv.resize(img, (w // <span class="number">4</span>, h // <span class="number">4</span>))</span><br><span class="line">fliped_img_x = flip_image(img, <span class="string">&quot;x&quot;</span>)</span><br><span class="line">fliped_img_y = flip_image(img, <span class="string">&quot;y&quot;</span>)</span><br><span class="line">fliped_img_x_y = flip_image(img, <span class="string">&quot;x-y&quot;</span>)</span><br><span class="line">img_up = np.hstack((img, fliped_img_x))</span><br><span class="line">img_down = np.hstack((fliped_img_y, fliped_img_x_y))</span><br><span class="line">img_all = np.vstack((img_up, img_down))</span><br><span class="line">show_Img(<span class="string">&quot;img_all&quot;</span>, img_all)</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/4e15836f3af28ed6dd3a85130da6d007.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/4e15836f3af28ed6dd3a85130da6d007.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413224058277"></p>
<h2 id="旋转图像"><a href="#旋转图像" class="headerlink" title="旋转图像"></a>旋转图像</h2><p>图像的旋转相比平移和镜像就稍微复杂了一些</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/35ca717a56db2519cf6575bac4d771be.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/35ca717a56db2519cf6575bac4d771be.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413224354192"></p>
<p>如图可知，初始点为$(x, y)$逆时针旋转$\beta$角度后为$(x’, y’)$</p>
<p>数学分析：</p>
<script type="math/tex; mode=display">
\begin{cases}
x = Dcos\alpha
\\y = Dsin\alpha
\end{cases}</script><script type="math/tex; mode=display">
\begin{cases}
 x'=Dcos(\alpha+\beta)=D(cos\alpha cos\beta - sin\alpha sin\beta) = xcos\beta - ysin\beta\\
 y'=Dsin(\alpha+\beta)=D(sin\alpha cos\beta + cos\alpha sin\beta) = ycos\beta + xsin\beta
\end{cases}</script><p>用矩阵表示为：</p>
<script type="math/tex; mode=display">
\left [ x', y', 1 \right ] = \left[x, y, 1\right]\begin{bmatrix}
cos\beta  & sin\beta & 0\\
 -sin\beta & cos\beta & 0\\
 0 & 0 & 1
\end{bmatrix}</script><p>但这并不是整个图像旋转的原理，因为还要指定旋转点，这里假设图像旋转点为图像的中心，即$(w/2, h/2)$,则在旋转时需要将图像的坐标系移动到原本图像的中心上：</p>
<script type="math/tex; mode=display">
\left [ x' , y', 1\right ] = \left [ x , y , 1 \right ]  \begin{bmatrix}
 1 & 0 & 0\\
 0 & 1 & 0\\
 -w/2 & -h/2&1
\end{bmatrix}</script><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/523f8dcca220e1d4f580d68e0aa75e30.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/523f8dcca220e1d4f580d68e0aa75e30.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413231431473"></p>
<p>由上图可知，旋转时，整个图像的大小也随之改变，新的高度与宽度为：</p>
<script type="math/tex; mode=display">
\begin{cases}
 w' = w*|cos\beta|+ h*|sin\beta|
\\ h' = h * |cos\beta| + w * |sin\beta|
\end{cases}</script><p>旋转完后的图像在需要平移到原来的位置：</p>
<script type="math/tex; mode=display">
\begin{cases}
\bigtriangleup x = (w' - w) * 0.5 + (w/2 - 1)
\\ \bigtriangleup y = (h'- h) * 0.5 + (h/2 - 1)
\end{cases}</script><p>总的矩阵为:</p>
<script type="math/tex; mode=display">
\left [ x' , y', 1\right ] = \left [ x , y , 1 \right ]  \begin{bmatrix}
 1 & 0 & 0\\
 0 & 1 & 0\\
 -w/2 & -h/2&1
\end{bmatrix}\begin{bmatrix}
cos\beta  & sin\beta & 0\\
 -sin\beta & cos\beta & 0\\
 0 & 0 & 1
\end{bmatrix} \begin{bmatrix}
 1 & 0 & 0\\
 0 & 1 & 0\\
 \bigtriangleup x & \bigtriangleup  y&1
\end{bmatrix}</script><h3 id="前向映射"><a href="#前向映射" class="headerlink" title="前向映射"></a>前向映射</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_Img</span>(<span class="params">name, img</span>):</span></span><br><span class="line">    cv.imshow(name, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前向映射旋转</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">front_rotate_image</span>(<span class="params">image, angle</span>):</span></span><br><span class="line">    <span class="comment"># 将角度转换为弧度</span></span><br><span class="line">    radians = np.deg2rad(angle)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算旋转矩阵</span></span><br><span class="line">    cos_theta = np.around(np.cos(radians), decimals=<span class="number">4</span>)</span><br><span class="line">    sin_theta = np.around(np.sin(radians), decimals=<span class="number">4</span>)</span><br><span class="line">    rotation_matrix = np.array([[cos_theta, sin_theta, <span class="number">0</span>], [-sin_theta, cos_theta, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算旋转后的图像大小</span></span><br><span class="line">    height, width = image.shape[:<span class="number">2</span>]</span><br><span class="line">    new_width = <span class="built_in">int</span>(np.<span class="built_in">round</span>(width * <span class="built_in">abs</span>(cos_theta) + height * <span class="built_in">abs</span>(sin_theta)))</span><br><span class="line">    new_height = <span class="built_in">int</span>(np.<span class="built_in">round</span>(height * <span class="built_in">abs</span>(cos_theta) + width * <span class="built_in">abs</span>(sin_theta)))</span><br><span class="line">    <span class="built_in">print</span>(new_width, new_height)</span><br><span class="line">    <span class="comment"># 创建新图像</span></span><br><span class="line">    rotated_image = np.zeros((new_height, new_width, <span class="number">3</span>), dtype=np.uint8)</span><br><span class="line">    <span class="comment"># 计算旋转中心点</span></span><br><span class="line">    center_x = width / <span class="number">2</span></span><br><span class="line">    center_y = height / <span class="number">2</span></span><br><span class="line">    <span class="comment"># 将坐标系平移回原来的位置，加上自定义旋转点的偏移量</span></span><br><span class="line">    x_step = (new_width - width) * (center_x / width) + (center_x - <span class="number">1</span>)</span><br><span class="line">    y_step = (new_height - height) * (center_y / height) + (center_y - <span class="number">1</span>)</span><br><span class="line">    translation_matrix1 = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [-center_x, -center_y, <span class="number">1</span>]])</span><br><span class="line">    translation_matrix2 = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [x_step, y_step, <span class="number">1</span>]])</span><br><span class="line">    <span class="comment"># 遍历每个像素并进行变换</span></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            <span class="comment"># 将坐标系平移至中心点</span></span><br><span class="line">            translated_x, translated_y, _ = np.dot([x, y, <span class="number">1</span>], translation_matrix1)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 计算旋转后的坐标</span></span><br><span class="line">            rotated_x, rotated_y, _ = np.dot([translated_x, translated_y, <span class="number">1</span>], rotation_matrix)</span><br><span class="line"></span><br><span class="line">            rotated_x, rotated_y, _ = np.dot([rotated_x, rotated_y, <span class="number">1</span>], translation_matrix2)</span><br><span class="line">            <span class="comment"># 如果旋转后的坐标在原图像范围内，则将该像素复制到新图像中</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= rotated_x &lt; new_width <span class="keyword">and</span> <span class="number">0</span> &lt;= rotated_y &lt; new_height:</span><br><span class="line">                rotated_image[<span class="built_in">int</span>(np.<span class="built_in">round</span>(rotated_y)), <span class="built_in">int</span>(np.<span class="built_in">round</span>(rotated_x))] = image[y, x]</span><br><span class="line">    <span class="keyword">return</span> rotated_image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img = cv.imread(<span class="string">&quot;images/kunkun.jpg&quot;</span>)</span><br><span class="line">theta = <span class="number">45</span></span><br><span class="line">h, w, c = img.shape</span><br><span class="line">img = cv.resize(img, (w // <span class="number">2</span>, h // <span class="number">2</span>))</span><br><span class="line">img_rotated = front_rotate_image(img, theta)</span><br><span class="line">show_Img(<span class="string">&quot;img_rotated&quot;</span>, img_rotated)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>原图：</p>
<p><img src="https://img-blog.csdnimg.cn/e40b5352ae374217b3c5e150e3eb3f67.jpeg#pic_center" class="lazyload placeholder" data-srcset="https://img-blog.csdnimg.cn/e40b5352ae374217b3c5e150e3eb3f67.jpeg#pic_center" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="在这里插入图片描述"></p>
<p>结果：</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/1161290e190741b392fd2e3ebb669987.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/1161290e190741b392fd2e3ebb669987.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20230413232930045"></p>
<p>从上面看来，使用前向映射会造成许多网格状，这是因为有原图到旋转后的图，会生成小数坐标，导致丢失一部分像素，而后面会使用后向映射加线性插值的方法解决此问题。</p>
<h3 id="后向映射"><a href="#后向映射" class="headerlink" title="后向映射"></a>后向映射</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 反向映射旋转</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">back_rotate_image</span>(<span class="params">image, angle</span>):</span></span><br><span class="line">    <span class="comment"># 将角度转换为弧度</span></span><br><span class="line">    radians = np.deg2rad(angle)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算旋转矩阵</span></span><br><span class="line">    cos_theta = np.around(np.cos(radians), decimals=<span class="number">4</span>)</span><br><span class="line">    sin_theta = np.around(np.sin(radians), decimals=<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># /////</span></span><br><span class="line">    rotation_matrix = np.array([[-sin_theta, cos_theta, <span class="number">0</span>], [-cos_theta, -sin_theta, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">    <span class="comment"># 计算旋转后的图像大小</span></span><br><span class="line">    height, width = image.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="built_in">print</span>(height, width)</span><br><span class="line">    new_width = <span class="built_in">int</span>(np.<span class="built_in">round</span>(width * <span class="built_in">abs</span>(cos_theta) + height * <span class="built_in">abs</span>(sin_theta)))</span><br><span class="line">    new_height = <span class="built_in">int</span>(np.<span class="built_in">round</span>(height * <span class="built_in">abs</span>(cos_theta) + width * <span class="built_in">abs</span>(sin_theta)))</span><br><span class="line">    <span class="built_in">print</span>(new_width, new_height)</span><br><span class="line">    <span class="comment"># 创建新图像</span></span><br><span class="line">    rotated_image = np.zeros((new_height, new_width, <span class="number">3</span>), dtype=np.uint8)</span><br><span class="line">    <span class="comment"># 计算旋转中心点</span></span><br><span class="line">    center_x = width / <span class="number">2</span></span><br><span class="line">    center_y = height / <span class="number">2</span></span><br><span class="line">    translation_matrix1 = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [-center_x, -center_y, <span class="number">1</span>]])</span><br><span class="line">    <span class="comment"># 将坐标系平移回原来的位置，加上自定义旋转点的偏移量</span></span><br><span class="line">    x_step = (new_width - width) * (center_x / width) + center_x - <span class="number">1</span></span><br><span class="line">    y_step = (new_height - height) * (center_y / height) + center_y - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># x_step = new_width / 2</span></span><br><span class="line">    <span class="comment"># y_step = new_height / 2</span></span><br><span class="line">    <span class="comment"># /////</span></span><br><span class="line">    translation_matrix2 = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [y_step, x_step, <span class="number">1</span>]])</span><br><span class="line">    <span class="comment"># 遍历每个像素并进行变换</span></span><br><span class="line">    matrix = np.dot(translation_matrix1, rotation_matrix)</span><br><span class="line">    matrix = np.around(np.dot(matrix, translation_matrix2), decimals=<span class="number">4</span>)</span><br><span class="line">    matrix_inv = np.around(np.linalg.inv(matrix), decimals=<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(matrix_inv)</span><br><span class="line">    <span class="built_in">print</span>(matrix)</span><br><span class="line">    x_list = []</span><br><span class="line">    y_list = []</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(new_height):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(new_width):</span><br><span class="line">            <span class="comment"># 将坐标系平移至中心点</span></span><br><span class="line">            translated_x, translated_y, _ = np.dot([y, x, <span class="number">1</span>], matrix_inv)</span><br><span class="line">            <span class="comment"># x_list.append(translated_x)</span></span><br><span class="line">            <span class="comment"># y_list.append(translated_y)</span></span><br><span class="line">            rotated_image[y, x] = bilinear_interpolation(image, translated_y, translated_x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rotated_image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bilinear_interpolation</span>(<span class="params">image, y, x</span>):</span></span><br><span class="line">    height, width = image.shape[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= <span class="built_in">int</span>(x) &lt; width - <span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span> &lt;= <span class="built_in">int</span>(y) &lt; height - <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># rotated_image[y, x] = image[int(translated_y), int(translated_x)]</span></span><br><span class="line">        left = <span class="built_in">int</span>(np.floor(y))</span><br><span class="line">        right = <span class="built_in">int</span>(np.ceil(y))</span><br><span class="line">        bottom = <span class="built_in">int</span>(np.floor(x))</span><br><span class="line">        top = <span class="built_in">int</span>(np.ceil(x))</span><br><span class="line">        <span class="comment"># print(left, right, bottom, top, sep=&quot; &quot;)</span></span><br><span class="line">        a = y - left</span><br><span class="line">        b = x - bottom</span><br><span class="line">        <span class="comment"># print(image[left, bottom])</span></span><br><span class="line">        p1 = image[left, bottom]</span><br><span class="line">        p2 = image[right, bottom]</span><br><span class="line">        p3 = image[left, top]</span><br><span class="line">        p4 = image[right, top]</span><br><span class="line">        color = (<span class="number">1</span> - a) * (<span class="number">1</span> - b) * p1 + a * (<span class="number">1</span> - b) * p2 + (<span class="number">1</span> - a) * b * p3 + a * b * p4</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> color</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Opencv</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下安装WSL2</title>
    <url>/2022/04/14/windows%E4%B8%8B%E5%AE%89%E8%A3%85WSL2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="windows下安装WSL2"><a href="#windows下安装WSL2" class="headerlink" title="windows下安装WSL2"></a>windows下安装WSL2</h1><h2 id="为Linux启用Windows子系统"><a href="#为Linux启用Windows子系统" class="headerlink" title="为Linux启用Windows子系统"></a>为Linux启用Windows子系统</h2><p>以管理员身份打开powershell</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows</span><span class="literal">-Subsystem</span><span class="literal">-Linux</span> /all /norestart</span><br></pre></td></tr></table></figure>
<h2 id="运行WSL2要求"><a href="#运行WSL2要求" class="headerlink" title="运行WSL2要求"></a>运行WSL2要求</h2><p>要更新到 WSL 2，您必须运行 Windows 10。</p>
<ul>
<li>对于 x64 系统：<strong>版本 1903</strong>或更高版本，带有<strong>Build 18362</strong>或更高版本。</li>
<li>对于 ARM64 系统：<strong>版本 2004</strong>或更高版本，带有<strong>Build 19041</strong>或更高版本。</li>
<li>低于 18362 的内部版本不支持 WSL 2。使用<a href="https://www.microsoft.com/software-download/windows10">Windows 更新助手</a>更新您的 Windows 版本。</li>
</ul>
<h2 id="启用虚拟机功能"><a href="#启用虚拟机功能" class="headerlink" title="启用虚拟机功能"></a>启用虚拟机功能</h2><p>在安装 WSL 2 之前，您必须启用<strong>虚拟机平台</strong>可选功能。您的机器将需要<a href="https://docs.microsoft.com/en-us/windows/wsl/troubleshooting#error-0x80370102-the-virtual-machine-could-not-be-started-because-a-required-feature-is-not-installed">虚拟化功能</a>才能使用此功能。</p>
<p>管理员身份打开powershell</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure>
<h2 id="下载Linux内核更新"><a href="#下载Linux内核更新" class="headerlink" title="下载Linux内核更新"></a>下载Linux内核更新</h2><ul>
<li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">适用于 x64 机器的 WSL2 Linux 内核更新包</a></li>
</ul>
<h2 id="设置WSL2为默认版本"><a href="#设置WSL2为默认版本" class="headerlink" title="设置WSL2为默认版本"></a>设置WSL2为默认版本</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl -<span class="literal">-set</span><span class="literal">-default</span><span class="literal">-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>请启用虚拟机平台 Windows 功能并确保在 BIOS 中启用虚拟化。<br>有关信息，请访问 <a href="https://aka.ms/wsl2-install">https://aka.ms/wsl2-install</a></p>
<p><strong><em>出现Error：</em></strong></p>
<p>回溯开启VMware兼容步骤，解决问题：</p>
<p>开启vmware需要关闭hyper-v<br>所以我们如果重新开启wsl2时要：</p>
<p>在windows功能中重新勾选hyper-v</p>
<p><a href="https://blog.csdn.net/zerostruggle/article/details/117608185">https://blog.csdn.net/zerostruggle/article/details/117608185</a></p>
<p>又发现win10没有Hyper-V功能</p>
<p><a href="https://blog.csdn.net/qq_39496303/article/details/109378350">https://blog.csdn.net/qq_39496303/article/details/109378350</a></p>
<p><img src="01.png" class="lazyload placeholder" data-srcset="01.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220414210957957"></p>
<p>okk</p>
<h2 id="下载Ubuntu"><a href="#下载Ubuntu" class="headerlink" title="下载Ubuntu"></a>下载Ubuntu</h2><p>在Microsoft Store搜索WSL，找到并下载Ubuntu</p>
<p><img src="02.png" class="lazyload placeholder" data-srcset="02.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220414213024040"></p>
<p>打开ubuntu输入用户名时，显示参考的对象不支持尝试的操作</p>
<p><a href="https://blog.csdn.net/weixin_43347283/article/details/107006275">https://blog.csdn.net/weixin_43347283/article/details/107006275</a></p>
<p><img src="03.png" class="lazyload placeholder" data-srcset="03.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220414212620280"></p>
<p>Sucesss！！！</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>WSL</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>控制实体小车cartographer建图</title>
    <url>/2023/11/22/%E6%8E%A7%E5%88%B6%E5%AE%9E%E4%BD%93%E5%B0%8F%E8%BD%A6cartographer%E5%BB%BA%E5%9B%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="cartographer建图"><a href="#cartographer建图" class="headerlink" title="cartographer建图"></a>cartographer建图</h1><h2 id="跑通官方例程"><a href="#跑通官方例程" class="headerlink" title="跑通官方例程"></a>跑通官方例程</h2><h3 id="下载官方bag"><a href="#下载官方bag" class="headerlink" title="下载官方bag"></a>下载官方bag</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag</span><br></pre></td></tr></table></figure>
<h3 id="运行bag"><a href="#运行bag" class="headerlink" title="运行bag"></a>运行bag</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:=<span class="variable">$&#123;HOME&#125;</span>/workspace/carto_ws/src/cartographer_paper_deutsches_museum.bag</span><br></pre></td></tr></table></figure>
<h3 id="添加map话题-map"><a href="#添加map话题-map" class="headerlink" title="添加map话题/map"></a>添加map话题/map</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120172440456.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120172440456.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231120172440456"></p>
<h3 id="保存地图"><a href="#保存地图" class="headerlink" title="保存地图"></a>保存地图</h3><p>如果运行ERROR</p>
<p><code>ERROR: Unable to load type [cartographer_ros_msgs/FinishTrajectory].
Have you typed &#39;make&#39; in [cartographer_ros_msgs]?</code></p>
<p><strong>进入工作空间</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ./install_isolated/setup.bash </span><br></pre></td></tr></table></figure>
<p>停止地图构建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rosservice call /finish_trajectory 0</span><br></pre></td></tr></table></figure>
<p>生成地图文件(后缀为<code>.pbstream</code>)</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rosservice call /write_state <span class="string">&quot;&#123;filename: &#x27;<span class="variable">$&#123;HOME&#125;</span>/Downloads/carto_map.pbstream&#x27;&#125;&quot;</span></span><br></pre></td></tr></table></figure>
<p>将地图文件转换为map和yaml文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rosrun cartographer_ros cartographer_pbstream_to_ros_map -map_filestem=<span class="variable">$&#123;HOME&#125;</span>/Downloads/carto_map -pbstream_filename=<span class="variable">$&#123;HOME&#125;</span>/Downloads/carto_map.pbstream -resolution=0.05</span><br></pre></td></tr></table></figure>
<p>map文件</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120173549879.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120173549879.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231120173549879" style="zoom:50%;" /></p>
<p>yaml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">/home/autobot/Downloads/carto_map.pgm</span></span><br><span class="line"><span class="attr">resolution:</span> <span class="number">0.05</span></span><br><span class="line"><span class="attr">origin:</span> [<span class="number">-109.515</span>, <span class="number">-75.0479</span>, <span class="number">0.0</span>]</span><br><span class="line"><span class="attr">negate:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">occupied_thresh:</span> <span class="number">0.65</span></span><br><span class="line"><span class="attr">free_thresh:</span> <span class="number">0.196</span></span><br></pre></td></tr></table></figure>
<h2 id="实体小车建图"><a href="#实体小车建图" class="headerlink" title="实体小车建图"></a>实体小车建图</h2><h3 id="修改文件revo-lds-lua"><a href="#修改文件revo-lds-lua" class="headerlink" title="修改文件revo_lds.lua"></a>修改文件<code>revo_lds.lua</code></h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">include <span class="string">&quot;map_builder.lua&quot;</span></span><br><span class="line">include <span class="string">&quot;trajectory_builder.lua&quot;</span></span><br><span class="line"></span><br><span class="line">options = &#123;</span><br><span class="line">  map_builder = MAP_BUILDER,</span><br><span class="line">  trajectory_builder = TRAJECTORY_BUILDER,</span><br><span class="line">  map_frame = <span class="string">&quot;map&quot;</span>,</span><br><span class="line">  tracking_frame = <span class="string">&quot;laser&quot;</span>,</span><br><span class="line">  published_frame = <span class="string">&quot;laser&quot;</span>,</span><br><span class="line">  odom_frame = <span class="string">&quot;odom&quot;</span>,</span><br><span class="line">  provide_odom_frame = <span class="literal">true</span>,</span><br><span class="line">  publish_frame_projected_to_2d = <span class="literal">false</span>,</span><br><span class="line">  use_pose_extrapolator = <span class="literal">true</span>,</span><br><span class="line">  use_odometry = <span class="literal">false</span>,</span><br><span class="line">  use_nav_sat = <span class="literal">false</span>,</span><br><span class="line">  use_landmarks = <span class="literal">false</span>,</span><br><span class="line">  num_laser_scans = <span class="number">1</span>,</span><br><span class="line">  num_multi_echo_laser_scans = <span class="number">0</span>,</span><br><span class="line">  num_subdivisions_per_laser_scan = <span class="number">1</span>,</span><br><span class="line">  num_point_clouds = <span class="number">0</span>,</span><br><span class="line">  lookup_transform_timeout_sec = <span class="number">0.2</span>,</span><br><span class="line">  submap_publish_period_sec = <span class="number">0.3</span>,</span><br><span class="line">  pose_publish_period_sec = <span class="number">5e-3</span>,</span><br><span class="line">  trajectory_publish_period_sec = <span class="number">30e-3</span>,</span><br><span class="line">  rangefinder_sampling_ratio = <span class="number">1.</span>,</span><br><span class="line">  odometry_sampling_ratio = <span class="number">1.</span>,</span><br><span class="line">  fixed_frame_pose_sampling_ratio = <span class="number">1.</span>,</span><br><span class="line">  imu_sampling_ratio = <span class="number">1.</span>,</span><br><span class="line">  landmarks_sampling_ratio = <span class="number">1.</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MAP_BUILDER.use_trajectory_builder_2d = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">TRAJECTORY_BUILDER_2D.submaps.num_range_data = <span class="number">35</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.min_range = <span class="number">0.3</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.max_range = <span class="number">8.</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.missing_data_ray_length = <span class="number">1.</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.use_imu_data = <span class="literal">false</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.use_online_correlative_scan_matching = <span class="literal">true</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.linear_search_window = <span class="number">0.1</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.translation_delta_cost_weight = <span class="number">10.</span></span><br><span class="line">TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.rotation_delta_cost_weight = <span class="number">1e-1</span></span><br><span class="line"></span><br><span class="line">POSE_GRAPH.optimization_problem.huber_scale = <span class="number">1e2</span></span><br><span class="line">POSE_GRAPH.optimize_every_n_nodes = <span class="number">35</span></span><br><span class="line">POSE_GRAPH.constraint_builder.min_score = <span class="number">0.65</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> options</span><br></pre></td></tr></table></figure>
<p><code>demo_revo_lds.launch</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;/use_sim_time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;cartographer_node&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;cartographer_ros&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">&quot;cartographer_node&quot;</span> <span class="attr">args</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">          -configuration_directory $(find cartographer_ros)/configuration_files</span></span></span><br><span class="line"><span class="string"><span class="tag">          -configuration_basename revo_lds.lua&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;scan&quot;</span> <span class="attr">to</span>=<span class="string">&quot;scan&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">type</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">required</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">args</span>=<span class="string">&quot;-d $(find cartographer_ros)/configuration_files/demo_2d.rviz&quot;</span> /&gt;</span>&quot; </span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="启动雷达"><a href="#启动雷达" class="headerlink" title="启动雷达"></a>启动雷达</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch delta_lidar delta_lidar.launch</span><br></pre></td></tr></table></figure>
<h3 id="运行与建图"><a href="#运行与建图" class="headerlink" title="运行与建图"></a>运行与建图</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch cartographer_ros demo_revo_lds.launch </span><br></pre></td></tr></table></figure>
<h3 id="键盘控制运动"><a href="#键盘控制运动" class="headerlink" title="键盘控制运动"></a>键盘控制运动</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python3 keyboard_control.py </span><br></pre></td></tr></table></figure>
<h3 id="保存地图-1"><a href="#保存地图-1" class="headerlink" title="保存地图"></a>保存地图</h3><p>参考上面</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120181556943.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120181556943.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231120181556943"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120181919987.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120181919987.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231120181919987"></p>
<p>参考文章<a href="https://blog.csdn.net/Fang_cheng_/article/details/111593210">手持雷达建立2D地图</a></p>
<h2 id="离线建图"><a href="#离线建图" class="headerlink" title="离线建图"></a>离线建图</h2><h3 id="启动雷达-1"><a href="#启动雷达-1" class="headerlink" title="启动雷达"></a>启动雷达</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch delta_lidar delta_lidar.launch</span><br></pre></td></tr></table></figure>
<h3 id="键盘控制"><a href="#键盘控制" class="headerlink" title="键盘控制"></a>键盘控制</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python3 keyboard_control.py </span><br></pre></td></tr></table></figure>
<h3 id="rosbag记录"><a href="#rosbag记录" class="headerlink" title="rosbag记录"></a>rosbag记录</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir ./workspace/bagfiles</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rosbag record -a -O 目标文件</span><br></pre></td></tr></table></figure>
<p>默认目标文件名称为<code>时间戳.bag</code></p>
<h3 id="启动cartographer"><a href="#启动cartographer" class="headerlink" title="启动cartographer"></a>启动cartographer</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">roslaunch cartographer_ros demo_revo_lds.launch </span><br></pre></td></tr></table></figure>
<h3 id="rosbag播放"><a href="#rosbag播放" class="headerlink" title="rosbag播放"></a>rosbag播放</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rosbag play --clock 2023-11-21-17-45-52.bag </span><br></pre></td></tr></table></figure>
<p>如图所示</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231122162717535.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231122162717535.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231122162717535"></p>
<h3 id="保存地图-2"><a href="#保存地图-2" class="headerlink" title="保存地图"></a>保存地图</h3><p>参考上面</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231122163739694.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231122163739694.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231122163739694"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>数据类型及强制转换</title>
    <url>/2023/11/29/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据类型范围（基本）"><a href="#数据类型范围（基本）" class="headerlink" title="数据类型范围（基本）"></a>数据类型范围（基本）</h2><div class="table-container">
<table>
<thead>
<tr>
<th>数据类型</th>
<th>占内存字节数</th>
<th>表示范围</th>
<th>数量级</th>
</tr>
</thead>
<tbody>
<tr>
<td>char（signed char）</td>
<td>1</td>
<td>-128~127</td>
<td>2</td>
</tr>
<tr>
<td>unsigned char</td>
<td>1</td>
<td>0~255</td>
<td>2</td>
</tr>
<tr>
<td>short int（signed short int）</td>
<td>2</td>
<td>-32,768~32,767</td>
<td>4</td>
</tr>
<tr>
<td>unsigned short int</td>
<td>2</td>
<td>0~65,535</td>
<td>4</td>
</tr>
<tr>
<td>int（signed int）</td>
<td>4</td>
<td>-2,147,483,648~2,147,483,647（-231 ~ 231-1）</td>
<td>9</td>
</tr>
<tr>
<td>unsigned int</td>
<td>4</td>
<td>0~4,294,967,295</td>
<td>9</td>
</tr>
<tr>
<td>long int（signed long int）</td>
<td>4</td>
<td>-2,147,483,648~2,147,483,647（-231 ~ 231-1）</td>
<td>9</td>
</tr>
<tr>
<td>unsigned long int</td>
<td>4</td>
<td>0~4,294,967,295</td>
<td>9</td>
</tr>
<tr>
<td>float</td>
<td>4</td>
<td>-3.4x10-38 ~ 3.4x1038</td>
<td>38</td>
</tr>
<tr>
<td>double</td>
<td>8</td>
<td>-1.7x10-308 ~ 1.7x10308</td>
<td>308</td>
</tr>
<tr>
<td>long double</td>
<td>8</td>
<td>-1.7x10-308 ~ 1.7x10308</td>
<td>308</td>
</tr>
</tbody>
</table>
</div>
<h2 id="有符号与无符号数据"><a href="#有符号与无符号数据" class="headerlink" title="有符号与无符号数据"></a>有符号与无符号数据</h2><ul>
<li>无符号数据（Unsigned Data）：无符号数据只能表示非负整数。在内存中，无符号数据占用固定大小的存储空间，如8位、16位、32位等，视具体类型而定。例如，8位无符号数据可以表示0到255之间的整数。如果一个数值超出了该范围，那么它将会被截断或者溢出。在编程语言如C++中，通常使用“unsigned”关键字来表示无符号数据类型。</li>
<li>有符号数据（Signed Data）：有符号数据可以表示正数、负数和零。在内存中，有符号数据同样占用固定大小的存储空间，但是可以表示的范围比无符号数据更大。例如，8位有符号数据可以表示-128到127之间的整数。这是因为存储空间的一部分被用来表示负数，所以正数的表示范围相应地减少了。在编程语言如C++中，通常使用默认的整数类型来表示有符号数据。<h2 id="无符号16位强制转换为有符号"><a href="#无符号16位强制转换为有符号" class="headerlink" title="无符号16位强制转换为有符号"></a>无符号16位强制转换为有符号</h2>python<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 强制转换为16位有符号数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_s16</span>(<span class="params">val</span>):</span></span><br><span class="line">    <span class="keyword">if</span> val &lt; <span class="number">0x8000</span>:  <span class="comment"># 32768</span></span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (val - <span class="number">0x10000</span>) <span class="comment"># val - 65536</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>参考文章:<br><a href="https://blog.csdn.net/m0_56502601/article/details/116333030#:~:text=%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%85%B6%E8%8C%83%E5%9B%B4%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8D%A0%E5%86%85%E5%AD%98%E5%AD%97%E8%8A%82%E6%95%B02%E7%9A%84%E6%AC%A1%E6%96%B9%E6%95%B0%E8%A1%A8%E7%A4%BA%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B0%E8%8C%83%E5%9B%B4char%EF%BC%88signed%20char%EF%BC%891-27~27-1-128~127unsigned%20char10~28-10~255short%20int%EF%BC%88signed,short%20int%EF%BC%892-32%2C768~32%2C767unsigned%20short%20int20~65%2C535int%EF%BC%88signed%20int%EF%BC%894-2%2C147%2C483%2C648~2%2C147%2C483%2C647unsigned_c%E8%AF%AD%E8%A8%80%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%E8%8C%83%E5%9B%B4">C语言基本数据类型及其范围</a><br><a href="https://www.cnblogs.com/yqmcu/p/11104617.html">Python中读取到16进制数如何转成有符号数值</a></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>有限元分析学习-载荷简化问题</title>
    <url>/2022/11/11/%E6%9C%89%E9%99%90%E5%85%83%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0-%E8%BD%BD%E8%8D%B7%E7%AE%80%E5%8C%96%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有限元分析学习-载荷简化问题"><a href="#有限元分析学习-载荷简化问题" class="headerlink" title="有限元分析学习-载荷简化问题"></a>有限元分析学习-载荷简化问题</h1><h2 id="载荷简化问题"><a href="#载荷简化问题" class="headerlink" title="载荷简化问题"></a>载荷简化问题</h2><blockquote>
<p>分析实例: 桌面放置物体</p>
<p>问题描述: 考察桌子正中间放置一个质量为44.6kg的长方体，考察桌子的变形情况。</p>
<p>材料: 合金钢</p>
</blockquote>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221111173844346.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221111173844346.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221111173844346"></p>
]]></content>
      <categories>
        <category>机械</category>
        <category>Simulation</category>
      </categories>
      <tags>
        <tag>Solidworks</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>有限元分析学习二</title>
    <url>/2022/10/30/%E6%9C%89%E9%99%90%E5%85%83%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0%E4%BA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有限元分析学习二"><a href="#有限元分析学习二" class="headerlink" title="有限元分析学习二"></a>有限元分析学习二</h1><h2 id="第一、二、三强度理论"><a href="#第一、二、三强度理论" class="headerlink" title="第一、二、三强度理论"></a>第一、二、三强度理论</h2><p><strong>第一强度理论:最大拉应力准则</strong></p>
<p>基本观点:材料中的最大拉应力到达材料的正断拉力时，即产生脆性断裂。适用范围:铸铁，工具钢，工业陶瓷等多数脆性材。</p>
<p><strong>第三强度理论:最大剪应力准则</strong></p>
<p>基本观点:材料中的最大剪应力到达该材料的剪切抗力时，即产生塑性屈服。适用范围:低碳钢、铜、软铝等塑性较好材料。</p>
<p><strong>第四强度理论:形状改变比能准则</strong></p>
<p>基本观点:材料中形状改变比能到达该材料的临界值时，即产生塑性屈服。</p>
<p><strong><em>适用范围:它既突出了最大主应力对塑性屈服的作用，又适当考虑了其它两个主应力的影响，它与塑性较好材料的试验结果比第三强度理</em></strong></p>
<p><strong><em>论符合得更好。</em></strong></p>
<h2 id="安全系数图解"><a href="#安全系数图解" class="headerlink" title="安全系数图解"></a>安全系数图解</h2><p>结果-&gt;安全系数</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030165726124.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030165726124.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030165726124"></p>
<p>除了Mohr-Coulomb应力，其他分别对应第一二三强度</p>
<p>以最大von Mises应力为例：</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030170008098.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030170008098.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030170008098"></p>
<p>安全系数图解反过来看，看最小值，最小是最危险的地方</p>
<h2 id="四大强度理论公式"><a href="#四大强度理论公式" class="headerlink" title="四大强度理论公式"></a>四大强度理论公式</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030170901908.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030170901908.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030170901908"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030171443899.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030171443899.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030171443899"></p>
<h2 id="第一强度理论分析（P1）"><a href="#第一强度理论分析（P1）" class="headerlink" title="第一强度理论分析（P1）"></a>第一强度理论分析（P1）</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030171559321.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030171559321.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030171559321"></p>
<h2 id="第三强度理论分析（P1-P3）"><a href="#第三强度理论分析（P1-P3）" class="headerlink" title="第三强度理论分析（P1-P3）"></a>第三强度理论分析（P1-P3）</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030171612217.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030171612217.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030171612217"></p>
<h2 id="直角L型支架的应力分析"><a href="#直角L型支架的应力分析" class="headerlink" title="直角L型支架的应力分析"></a>直角L型支架的应力分析</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote>
<p>问题描述：L型支架上端面固定，同时在下端面施加900N弯曲载荷，分别使用10mm、3mm和1mm网格求解模型，对比应力结果</p>
<p>材料: AISI 304</p>
</blockquote>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030172733296.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030172733296.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030172733296"></p>
<h3 id="创建新算例"><a href="#创建新算例" class="headerlink" title="创建新算例"></a>创建新算例</h3><h3 id="选择材料AISI-304"><a href="#选择材料AISI-304" class="headerlink" title="选择材料AISI 304"></a>选择材料AISI 304</h3><h3 id="夹具固定约束端"><a href="#夹具固定约束端" class="headerlink" title="夹具固定约束端"></a>夹具固定约束端</h3><h3 id="添加外部载荷力的大小和方向"><a href="#添加外部载荷力的大小和方向" class="headerlink" title="添加外部载荷力的大小和方向"></a>添加外部载荷力的大小和方向</h3><h3 id="生成网格"><a href="#生成网格" class="headerlink" title="生成网格"></a>生成网格</h3><p>设置网格参数分别为10mm,3mm,1mm</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030174649552.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030174649552.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030174649552" style="zoom:50%;" /></th>
<th style="text-align:center"><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030181248603.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030181248603.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030181248603" style="zoom:50%;" /></th>
<th style="text-align:center"><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030175301738.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030175301738.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030175301738" style="zoom:50%;" /></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">10mm</td>
<td style="text-align:center">3mm</td>
<td style="text-align:center">1mm</td>
</tr>
</tbody>
</table>
</div>
<h3 id="运行计算"><a href="#运行计算" class="headerlink" title="运行计算"></a>运行计算</h3><p>复制算例，分别更改网格大小10mm,3mm,1mm，进行对比分析</p>
<p>10mm<img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030174941401.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030174941401.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030174941401" style="zoom: 80%;" /></p>
<p>3mm</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030175145134.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030175145134.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030175145134" style="zoom: 80%;" /></p>
<p>1mm</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030181458625.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030181458625.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030181458625" style="zoom: 80%;" /></p>
<h2 id="L型支架加上圆角"><a href="#L型支架加上圆角" class="headerlink" title="L型支架加上圆角"></a>L型支架加上圆角</h2><blockquote>
<p>问题描述:L形支架上端面固定，同时在下端面施加900N弯曲载荷，分别使用10mm、2mm和0.5mm网格求解模型，对比应力分布和位移分布情况。</p>
<p>材料: AISI304</p>
</blockquote>
<h3 id="应力结果"><a href="#应力结果" class="headerlink" title="应力结果"></a>应力结果</h3><h4 id="10mm"><a href="#10mm" class="headerlink" title="10mm"></a>10mm</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030183642951.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030183642951.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030183642951"></p>
<p><strong>局部网格</strong></p>
<p>网格-&gt;应用网格控制</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030183934496.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030183934496.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030183934496"></p>
<p>选择想要加网格面，设置网格大小，a/b的意思为网格变化的渐进过程大小</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184121086.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184121086.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030184121086"></p>
<p>很明显可以看到网格逐步由小变大</p>
<h4 id="2mm"><a href="#2mm" class="headerlink" title="2mm"></a>2mm</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184212573.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184212573.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030184212573"></p>
<h4 id="0-5mm"><a href="#0-5mm" class="headerlink" title="0.5mm"></a>0.5mm</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184501141.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184501141.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030184501141"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184713547.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184713547.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030184713547"></p>
<h3 id="网格的密度影响"><a href="#网格的密度影响" class="headerlink" title="网格的密度影响"></a>网格的密度影响</h3><h4 id="应力结果的网格无关性检查"><a href="#应力结果的网格无关性检查" class="headerlink" title="应力结果的网格无关性检查"></a>应力结果的网格无关性检查</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184356493.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030184356493.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030184356493"></p>
<p>由以上分析可得，网格密度越小，其计算算例的时间就越长，才用局部网格可以缩短时间；而应力的结果受网格的精度影响很大。</p>
<h4 id="位移影响与网格密度"><a href="#位移影响与网格密度" class="headerlink" title="位移影响与网格密度"></a>位移影响与网格密度</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030185459727.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030185459727.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030185459727"></p>
<p>位移影响与网格密度不大。</p>
]]></content>
      <categories>
        <category>机械</category>
        <category>Simulation</category>
      </categories>
      <tags>
        <tag>Solidworks</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>有限元分析学习一</title>
    <url>/2022/10/29/%E6%9C%89%E9%99%90%E5%85%83%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0%E4%B8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有限元分析学习一"><a href="#有限元分析学习一" class="headerlink" title="有限元分析学习一"></a>有限元分析学习一</h1><h2 id="什么是有限元分析"><a href="#什么是有限元分析" class="headerlink" title="什么是有限元分析"></a>什么是有限元分析</h2><p><strong>有限元分析（FEA，Finite Element Analysis）</strong>利用数学近似的方法对真实物理系统(几何和载荷工况）进行模拟。利用简单而又相互作</p>
<p>用的元素（即单元），就可以用有限数量的未知量去逼近无限未知量的真实系统。有限元分析是用较简单的问题代替复杂问题后再求解。</p>
<p>它将求解域看成是由许多称为有限元的小的互连子域成，对每一单元假定一个合适的（较简单的）近似解，然后推导求解这个域点的满足</p>
<p>条件（如结构的平衡条件），从而得到问题的解。因为实际问题被较简单的问题所代替，所以这个解不是准确解，而是近似解。由于大多</p>
<p>数实际问题难以得到准确解，而有限元不仅计算精度高，而且能适应各种复杂形状，因而成为行之有效的工程分析手段。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030105333851.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030105333851.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030105333851"></p>
<h2 id="SolidWorks-Simulation模块"><a href="#SolidWorks-Simulation模块" class="headerlink" title="SolidWorks-Simulation模块"></a>SolidWorks-Simulation模块</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030111040508.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030111040508.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030111040508"></p>
<h2 id="零件静态分析"><a href="#零件静态分析" class="headerlink" title="零件静态分析"></a>零件静态分析</h2><h3 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h3><p><strong>Simulation-&gt;选项-&gt;默认选项-&gt;单位</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030155921406.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030155921406.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030155921406"></p>
<h3 id="分析实例：带孔矩形板"><a href="#分析实例：带孔矩形板" class="headerlink" title="分析实例：带孔矩形板"></a>分析实例：带孔矩形板</h3><blockquote>
<p>问题描述:带孔矩形板一侧面分别均布110000N载荷和11000N载荷，另一侧固定，利用Simulation求解两种工况下的应力和位移，并</p>
<p>对分析结果进行解释。</p>
<p>材料:AISI 304</p>
</blockquote>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030160218830.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030160218830.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030160218830"></p>
<p><strong>已知：</strong></p>
<ul>
<li>三维模型</li>
<li>分析类型：静态分析</li>
<li>材料：AISI 304</li>
<li>约束：固定</li>
<li>载荷：110000N/11000N</li>
<li>接触：无</li>
</ul>
<h3 id="软件步骤"><a href="#软件步骤" class="headerlink" title="软件步骤"></a>软件步骤</h3><h4 id="新算例"><a href="#新算例" class="headerlink" title="新算例"></a>新算例</h4><p>simulation-&gt;新算例</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030160935094.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030160935094.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030160935094"></p>
<h4 id="编辑材料：AISI-304"><a href="#编辑材料：AISI-304" class="headerlink" title="编辑材料：AISI 304"></a>编辑材料：AISI 304</h4><p>零件-&gt;应用/编辑材料</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030160837703.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030160837703.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030160837703"></p>
<p><strong>属性三种颜色区分</strong></p>
<ul>
<li>红色分析必须用到的</li>
<li>蓝色分析可能用到的</li>
<li>黑色分析不必用到的</li>
</ul>
<h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><p>设置多个零件之间的接触关系，本次无接触不需要。</p>
<h4 id="夹具"><a href="#夹具" class="headerlink" title="夹具"></a>夹具</h4><p>夹具-&gt;固定几何体-&gt;选中一个侧面</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161435951.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161435951.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030161435951"></p>
<h4 id="外部载荷"><a href="#外部载荷" class="headerlink" title="外部载荷"></a>外部载荷</h4><p>外部载荷-&gt;力-&gt;选取面填写力的大小和方向</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161617604.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161617604.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030161617604"></p>
<h4 id="网格"><a href="#网格" class="headerlink" title="网格"></a>网格</h4><p>画网格离散化</p>
<p>网格-&gt;生成网格-&gt;先默认</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161751212.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161751212.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030161751212"></p>
<h4 id="计算算例"><a href="#计算算例" class="headerlink" title="计算算例"></a>计算算例</h4><p>算例名称-&gt;运行</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161841418.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030161841418.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030161841418"></p>
<h4 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h4><p>应力（对应强度）</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162036096.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162036096.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030162036096"></p>
<p>位移（对应刚度）</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162507273.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162507273.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030162507273"></p>
<p>应变</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162525507.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162525507.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030162525507"></p>
<h4 id="后处理"><a href="#后处理" class="headerlink" title="后处理"></a>后处理</h4><p><strong>变形比例调整为1</strong></p>
<p>编辑定义-&gt;真实比例</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162843305.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030162843305.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030162843305"></p>
<p><strong>自定义材料屈服强度为最大值，显示危险处更加明显</strong></p>
<p>编辑定义-&gt;图标选项-&gt;自动定义最大值</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030163300986.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030163300986.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030163300986"></p>
<p>eg:110000N</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030163424108.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030163424108.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030163424108"></p>
<p>11000N</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030163501959.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221030163501959.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221030163501959"></p>
<p>由110000N与11000N的应力分析图可知：</p>
<ul>
<li>载荷为110000N时，超过零件材料屈服强度面积较大，易破坏；</li>
<li>载荷为11000N时，零件未超过材料的屈服强度，安全</li>
</ul>
]]></content>
      <categories>
        <category>机械</category>
        <category>Simulation</category>
      </categories>
      <tags>
        <tag>Solidworks</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>有限元分析学习三</title>
    <url>/2022/10/31/%E6%9C%89%E9%99%90%E5%85%83%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0%E4%B8%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有限元分析学习三"><a href="#有限元分析学习三" class="headerlink" title="有限元分析学习三"></a>有限元分析学习三</h1><h2 id="圆角和直角应力结果对比"><a href="#圆角和直角应力结果对比" class="headerlink" title="圆角和直角应力结果对比"></a>圆角和直角应力结果对比</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031201211983.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031201211983.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031201211983"></p>
<h2 id="应力集中"><a href="#应力集中" class="headerlink" title="应力集中"></a>应力集中</h2><p>应力局部增高的现象，一般出现在物体形状急剧变化的地方，如缺口、孔洞、沟槽以及有刚性约束处。应力集中能使物体产生疲劳裂纹，也能使脆性材料制成的零件发生静载断裂。</p>
<h2 id="装配体分析"><a href="#装配体分析" class="headerlink" title="装配体分析"></a>装配体分析</h2><h3 id="分析实例：支架"><a href="#分析实例：支架" class="headerlink" title="分析实例：支架"></a>分析实例：支架</h3><blockquote>
<p>问题描述：支架两端通过地脚螺栓固定在地面上，零件凹孔面承受2000N的法向推力，求解支架的应力和位移</p>
<p>材料：AISI304</p>
</blockquote>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031204638719.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031204638719.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031204638719"></p>
<h3 id="软件分析"><a href="#软件分析" class="headerlink" title="软件分析"></a>软件分析</h3><h4 id="新建算例"><a href="#新建算例" class="headerlink" title="新建算例"></a>新建算例</h4><h4 id="定义材料AIS304"><a href="#定义材料AIS304" class="headerlink" title="定义材料AIS304"></a>定义材料AIS304</h4><h4 id="选择除支架零件不包括在分析中"><a href="#选择除支架零件不包括在分析中" class="headerlink" title="选择除支架零件不包括在分析中"></a>选择除支架零件不包括在分析中</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031205444175.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031205444175.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031205444175"></p>
<h4 id="删除连接"><a href="#删除连接" class="headerlink" title="删除连接"></a>删除连接</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031205805546.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031205805546.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031205805546"></p>
<h4 id="加载荷，零件凹孔面承受2000N的法向推力"><a href="#加载荷，零件凹孔面承受2000N的法向推力" class="headerlink" title="加载荷，零件凹孔面承受2000N的法向推力"></a>加载荷，零件凹孔面承受2000N的法向推力</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031210223651.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031210223651.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031210223651"></p>
<h4 id="固定约束"><a href="#固定约束" class="headerlink" title="固定约束"></a>固定约束</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031210302911.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031210302911.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031210302911"></p>
<h4 id="生成网格"><a href="#生成网格" class="headerlink" title="生成网格"></a>生成网格</h4><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031211152784.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031211152784.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031211152784"></p>
<h4 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h4><h5 id="应力结果"><a href="#应力结果" class="headerlink" title="应力结果"></a>应力结果</h5><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031211244125.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031211244125.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031211244125"></p>
<h5 id="显示局部区域和网格"><a href="#显示局部区域和网格" class="headerlink" title="显示局部区域和网格"></a>显示局部区域和网格</h5><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031211444162.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031211444162.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031211444162"></p>
<h5 id="位移结果"><a href="#位移结果" class="headerlink" title="位移结果"></a>位移结果</h5><h4 id="地面约束实现"><a href="#地面约束实现" class="headerlink" title="地面约束实现"></a>地面约束实现</h4><p>结果—&gt;定义位移图解-&gt;Y位移、真实比例、局部实体</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031212554374.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031212554374.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031212554374"></p>
<p>显示等高线状态</p>
<p>设定-&gt;边缘选项-&gt;直线</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031212645824.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221031212645824.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221031212645824"></p>
<p>编辑定义-&gt;图标选项-&gt;自动定义最小值0</p>
<h3 id="分析实例：虎钳"><a href="#分析实例：虎钳" class="headerlink" title="分析实例：虎钳"></a>分析实例：虎钳</h3><blockquote>
<p>问题描述：分别将225N的“挤压”力作用在钳臂的末端，平板短边两侧固定。求解模型，并查看位移和应力分布情况</p>
<p>材料：合金钢</p>
</blockquote>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101173523864.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101173523864.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221101173523864"></p>
<p>新建算例</p>
<p>编辑材料-&gt;合金钢</p>
<p>固定约束</p>
<p>施加载荷</p>
<p>生成网格</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101174345668.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101174345668.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221101174345668"></p>
<p>运行算例</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101174509014.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101174509014.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221101174509014"></p>
<p><strong><em>运行结果是错误的，需要删除全局连接</em></strong></p>
<h3 id="接触连接配置"><a href="#接触连接配置" class="headerlink" title="接触连接配置"></a>接触连接配置</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101175211091.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101175211091.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221101175211091"></p>
<p>连接-&gt;相触面组</p>
<p>自动查找接触面组</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101180230297.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101180230297.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221101180230297"></p>
<h3 id="各种报错——模型不稳定"><a href="#各种报错——模型不稳定" class="headerlink" title="各种报错——模型不稳定"></a>各种报错——模型不稳定</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101180512110.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20221101180512110.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20221101180512110"></p>
<p>属性-&gt;软弹簧</p>
]]></content>
      <categories>
        <category>机械</category>
        <category>Simulation</category>
      </categories>
      <tags>
        <tag>Solidworks</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>机械设计——曲柄滑块</title>
    <url>/2022/04/10/%E6%9C%BA%E6%A2%B0%E8%AE%BE%E8%AE%A1%E2%80%94%E2%80%94%E6%9B%B2%E6%9F%84%E6%BB%91%E5%9D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="机械设计——曲柄滑块"><a href="#机械设计——曲柄滑块" class="headerlink" title="机械设计——曲柄滑块"></a>机械设计——曲柄滑块</h1><h2 id="一、零件"><a href="#一、零件" class="headerlink" title="一、零件"></a>一、零件</h2><h3 id="1、主动杆"><a href="#1、主动杆" class="headerlink" title="1、主动杆"></a>1、主动杆</h3><p><img src="主动杆.jpg" class="lazyload placeholder" data-srcset="主动杆.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h4 id="草图："><a href="#草图：" class="headerlink" title="草图："></a>草图：</h4><p>草图1：大圆直径20mm，两圆圆心之距60mm，连接线50mm，一边绘制小圆直径8mm。</p>
<p>草图2：在凸台面上无圆孔一端绘制小圆直径8mm。</p>
<h4 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h4><p>凸台拉伸3：拉伸草图1，给定深度3mm。（圆孔用于配合圆盘）</p>
<p>凸台拉伸4：拉伸草图2，等距1.5mm，两侧堆成9mm。（用于配合连杆和圆盘）</p>
<h3 id="2、连杆"><a href="#2、连杆" class="headerlink" title="2、连杆"></a>2、连杆</h3><p><img src="连杆.jpg" class="lazyload placeholder" data-srcset="连杆.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h4 id="草图：-1"><a href="#草图：-1" class="headerlink" title="草图："></a>草图：</h4><p>草图1：大圆直径20mm，两圆圆心之距300mm，连接线290mm，一边绘制小圆直径8mm。</p>
<p>草图2：在凸台面上无圆孔一端绘制小圆直径8mm。</p>
<h4 id="特征：-1"><a href="#特征：-1" class="headerlink" title="特征："></a>特征：</h4><p>凸台拉伸3：拉伸草图1，一定深度3mm。（圆孔用于配合主动杆）</p>
<p>凸台拉伸4：拉伸草图2，给定深度10mm（用于配合滑块）</p>
<h3 id="3、圆盘"><a href="#3、圆盘" class="headerlink" title="3、圆盘"></a>3、圆盘</h3><p><img src="圆盘.jpg" class="lazyload placeholder" data-srcset="圆盘.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h4 id="草图"><a href="#草图" class="headerlink" title="草图"></a>草图</h4><p>草图1：大圆直径150mm，圆弧槽口宽度12mm，弧度60度，圆弧半径59—61mm，圆周阵列3个。</p>
<p>草图2：圆盘中心圆直径8mm。</p>
<p>草图3：圆孔直径8mm。</p>
<h4 id="特征：-2"><a href="#特征：-2" class="headerlink" title="特征："></a>特征：</h4><p>凸台拉伸1：拉伸草图1，给定深度10mm。</p>
<p>凸台拉伸2：拉伸草图2，给定深度3mm。（配合主动杆）</p>
<p>切除拉伸1：切除草图3，完全贯穿。（配合主动杆）</p>
<h3 id="4、滑块"><a href="#4、滑块" class="headerlink" title="4、滑块"></a>4、滑块</h3><p><img src="滑块.jpg" class="lazyload placeholder" data-srcset="滑块.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h4 id="草图-1"><a href="#草图-1" class="headerlink" title="草图"></a>草图</h4><p>草图1：长为100mm，宽为50mm的矩形。</p>
<p>草图2：滑块中心位置圆，直径8mm。</p>
<h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><p>凸台拉伸1：拉伸草图1，给定深度50mm。</p>
<p>切除拉伸1：切除草图2，完全贯穿。</p>
<h3 id="5、轨道"><a href="#5、轨道" class="headerlink" title="5、轨道"></a>5、轨道</h3><p><img src="轨道.jpg" class="lazyload placeholder" data-srcset="轨道.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h4 id="草图-2"><a href="#草图-2" class="headerlink" title="草图"></a>草图</h4><p>草图1：长为300mm，宽为60mm的矩形。</p>
<p>草图2：绘制与长方体上、下、左三个方向相距20mm的矩形。</p>
<p>在轨道高度1/2处建立基准面1，并绘制与原点水平方向相距360mm的轴线。（配合圆盘）</p>
<h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><p>凸台拉伸1：拉伸草图1，给定深度90mm。</p>
<p>切除拉伸1：切除草图2，完全贯穿。</p>
<h2 id="二、装配体"><a href="#二、装配体" class="headerlink" title="二、装配体"></a>二、装配体</h2><p><img src="曲柄滑块.jpg" class="lazyload placeholder" data-srcset="曲柄滑块.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p>先导入轨道，固定轨道在原点，再依次导入其他零件。</p>
<h3 id="配合"><a href="#配合" class="headerlink" title="配合"></a>配合</h3><p>重合1：连杆与滑块面重合；</p>
<p>同心1：连杆凸台与滑块圆孔同心；</p>
<p>同心2：圆盘圆孔与主动杆凸台同心；</p>
<p>重合2：主动杆与圆盘面重合；</p>
<p>同心4：主动杆圆孔与圆盘凸台同心；          </p>
<p>同心5：主动杆凸台与连杆圆孔同心；</p>
<p>重合3：连杆与主动杆面重合；</p>
<p>重合4：滑块与轨道侧面重合；</p>
<p>重合5：滑块与轨道地面重合；</p>
<p>重合6：圆盘原点与轴线重合。</p>
<h2 id="三、动画及Motion分析"><a href="#三、动画及Motion分析" class="headerlink" title="三、动画及Motion分析"></a>三、动画及Motion分析</h2><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><p>0s时间线将相机视图调整到前视，放置旋转马达在圆盘上，方向逆时针，速度20 rad/s = 20*30/pi RPM，然后计算运动算例。（视频在文件中）</p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 15%;">
<iframe src="//player.bilibili.com/player.html?aid=468119641&bvid=BV1y5411U72G&cid=572371472&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div>



<h3 id="Motion分析"><a href="#Motion分析" class="headerlink" title="Motion分析"></a>Motion分析</h3><p>选择结果与图解，类别-位移/速度/加速度，子类别-分别选取线性位移、线性速度、线性加速度，结果分量为X分量，选取滑块某一面，然后生成图解。</p>
<p><strong>线性位移</strong></p>
<p><img src="线性位移.jpg" class="lazyload placeholder" data-srcset="线性位移.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p><strong>线性速度</strong></p>
<p><img src="线性速度.jpg" class="lazyload placeholder" data-srcset="线性速度.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<p><strong>线性加速度</strong></p>
<p><img src="线性加速度.jpg" class="lazyload placeholder" data-srcset="线性加速度.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
<h2 id="四、编程计算绘图"><a href="#四、编程计算绘图" class="headerlink" title="四、编程计算绘图"></a>四、编程计算绘图</h2><p>将solidwork生成的图解导出csv文件，用matlab读取csv文件，将数据取出，用plot函数绘制滑块的实际参数曲线。根据课本给出的公式，绘制滑块的理论参数曲线。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r = <span class="number">60</span>; <span class="comment">% 主动件杆长</span></span><br><span class="line"></span><br><span class="line">l = <span class="number">300</span>; <span class="comment">% 连杆长度</span></span><br><span class="line"></span><br><span class="line">w = <span class="number">20</span>; <span class="comment">% 角速度</span></span><br><span class="line"></span><br><span class="line">theta = <span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">4</span>*<span class="built_in">pi</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">size</span> = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">1400</span>, <span class="number">400</span>];</span><br><span class="line"></span><br><span class="line">s1 = r*<span class="built_in">cos</span>(theta)+l*(<span class="number">1</span>-(r*<span class="built_in">sin</span>(theta)/l).^<span class="number">2</span>).^<span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">v1 = -r*w*(<span class="built_in">sin</span>(theta)+<span class="number">0.5</span>*(r/l)*<span class="built_in">sin</span>(<span class="number">2</span>*theta)/(l-(r*<span class="built_in">sin</span>(theta)/l).^<span class="number">2</span>).^<span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">a1 = -r*w.^<span class="number">2</span>*(<span class="built_in">cos</span>(theta)+r*(l.^<span class="number">2</span>*(<span class="number">1</span><span class="number">-2</span>*<span class="built_in">cos</span>(theta))-r.^<span class="number">2</span>*<span class="built_in">sin</span>(theta).^<span class="number">4</span>)/(l.^<span class="number">2</span>-(r*<span class="built_in">sin</span>(theta)).^<span class="number">2</span>).^<span class="number">1.5</span>);</span><br><span class="line"></span><br><span class="line">s2 = csvread(<span class="string">&#x27;滑块位移曲线.csv&#x27;</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">v2 = csvread(<span class="string">&#x27;滑块速度曲线.csv&#x27;</span>,<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">a2 = csvread(<span class="string">&#x27;滑块加速度曲线.csv&#x27;</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;滑块参数曲线&#x27;</span>);</span><br><span class="line"></span><br><span class="line">set(<span class="built_in">figure</span>(<span class="number">1</span>),<span class="string">&#x27;position&#x27;</span>,<span class="built_in">size</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">yyaxis left;</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(theta/<span class="built_in">pi</span>*<span class="number">180</span>, s1, <span class="string">&#x27;--r&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ylabel(<span class="string">&#x27;理论位移s/mm&#x27;</span>);</span><br><span class="line"></span><br><span class="line">yyaxis right;</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(s2(:, <span class="number">1</span>)*<span class="number">20</span>/<span class="built_in">pi</span>*<span class="number">180</span>, s2(:, <span class="number">2</span>), <span class="string">&#x27;-b&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ylim([<span class="number">140</span>, <span class="number">260</span>]);</span><br><span class="line"></span><br><span class="line">xlabel(<span class="string">&#x27;曲柄转角\theta/(°)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ylabel(<span class="string">&#x27;实际位移s/mm&#x27;</span>);</span><br><span class="line"></span><br><span class="line">xlim([<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line"></span><br><span class="line">x_new = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">720</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">xticks(x_new);</span><br><span class="line"></span><br><span class="line">title(<span class="string">&#x27;滑块位移曲线&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;理论滑块位移&#x27;</span>,<span class="string">&#x27;实际滑块位移&#x27;</span>);</span><br><span class="line"></span><br><span class="line">grid on;</span><br><span class="line"></span><br><span class="line"><span class="comment">% figure(2);</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(theta/<span class="built_in">pi</span>*<span class="number">180</span>, v1/<span class="number">1000</span>, <span class="string">&#x27;--r&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(v2(:, <span class="number">1</span>)*<span class="number">20</span>/<span class="built_in">pi</span>*<span class="number">180</span>,v2(:, <span class="number">2</span>)/<span class="number">1000</span>, <span class="string">&#x27;-b&#x27;</span>);</span><br><span class="line"></span><br><span class="line">xlabel(<span class="string">&#x27;曲柄转角\theta/(°)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ylabel(<span class="string">&#x27;滑块速度v/(m/s)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">xlim([<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line"></span><br><span class="line">x_new = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">720</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">xticks(x_new);</span><br><span class="line"></span><br><span class="line">title(<span class="string">&#x27;滑块的速度曲线&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;理论滑块速度&#x27;</span>,<span class="string">&#x27;实际滑块速度&#x27;</span>);</span><br><span class="line"></span><br><span class="line">grid on;</span><br><span class="line"></span><br><span class="line"><span class="comment">% figure(3);</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(theta/<span class="built_in">pi</span>*<span class="number">180</span>, a1/<span class="number">1e6</span>, <span class="string">&#x27;--r&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(a2(:, <span class="number">1</span>)*<span class="number">20</span>/<span class="built_in">pi</span>*<span class="number">180</span>, a2(:, <span class="number">2</span>)/<span class="number">1e6</span>, <span class="string">&#x27;-b&#x27;</span>);</span><br><span class="line"></span><br><span class="line">xlabel(<span class="string">&#x27;曲柄转角\theta/(°)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ylabel(<span class="string">&#x27;滑块加速度a/(m/s^2)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">xlim([<span class="number">0</span>, <span class="number">720</span>]);</span><br><span class="line"></span><br><span class="line">x_new = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">720</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">xticks(x_new);</span><br><span class="line"></span><br><span class="line">title(<span class="string">&#x27;滑块的加速度曲线&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;理论滑块加速度&#x27;</span>,<span class="string">&#x27;实际滑块加速度&#x27;</span>);</span><br><span class="line"></span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure>
<p>(其中速度公式与课本不同，取了相反数，因为绘制后的理论图与课本的图正好曲线相反，所以猜测课本的速度公式少了个负号)</p>
<h3 id="曲线图"><a href="#曲线图" class="headerlink" title="曲线图"></a>曲线图</h3><p><img src="matlab曲线图.jpg" class="lazyload placeholder" data-srcset="matlab曲线图.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>机械</category>
        <category>Solidworks</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
        <tag>Solidworks</tag>
      </tags>
  </entry>
  <entry>
    <title>直流无刷电机原理</title>
    <url>/2023/12/05/%E7%9B%B4%E6%B5%81%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="直流无刷电机原理"><a href="#直流无刷电机原理" class="headerlink" title="直流无刷电机原理"></a>直流无刷电机原理</h1><h2 id="直流无刷电机分类"><a href="#直流无刷电机分类" class="headerlink" title="直流无刷电机分类"></a>直流无刷电机分类</h2><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204161933701.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204161933701.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204161933701"></p>
<h2 id="基础理论知识"><a href="#基础理论知识" class="headerlink" title="基础理论知识"></a>基础理论知识</h2><h3 id="电生磁"><a href="#电生磁" class="headerlink" title="电生磁"></a>电生磁</h3><p><strong>奥斯特实验：通电导线周围存在磁场，电流的磁场方向跟电流的方向有关。————电流的磁效应(电生磁)</strong></p>
<h3 id="右手螺旋定则-安倍定则"><a href="#右手螺旋定则-安倍定则" class="headerlink" title="右手螺旋定则(安倍定则)"></a>右手螺旋定则(安倍定则)</h3><ul>
<li>通电直导线的判定：大拇指方向为电流方向，四指弯曲方向为磁场方向，磁场是一个同心圆。</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204164044496.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204164044496.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204164044496"></p>
<ul>
<li>通电螺线管的判定：四指弯曲方向为电流方向，大拇指方向为磁场N极所指方向，磁场与条形磁铁方向相似。</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204164023563.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204164023563.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204164023563"></p>
<h2 id="直流无刷电机原理-1"><a href="#直流无刷电机原理-1" class="headerlink" title="直流无刷电机原理"></a>直流无刷电机原理</h2><p>内部有3对电极组成</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165029520.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165029520.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204165029520"></p>
<p>分为<strong>Y型连接</strong>和<strong>三角型连接</strong>，以<strong>Y型连接</strong>为例</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165215124.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165215124.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204165215124"></p>
<p>当电流给AC通电时，根据<strong>右手螺旋定则</strong>和<strong>矢量相加原则</strong>，可求出磁场方向，转子位置与之相反，如图</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165355989.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165355989.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204165355989"></p>
<p>根据不同的通电方向，一共可以分成6组情况，相邻两组相差60度。<strong>(六步换相)</strong></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165749117.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204165749117.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204165749117"></p>
<p>💡如果磁场旋转太快，转子跟不上磁场，就会发生抖动。</p>
<p><strong><em>如何确定转子位置？</em></strong></p>
<p>当转子从上一个磁场方向旋转到下一个磁场方向后，再改变通电方向。每隔60度改变方向，<strong>使用霍尔传感器来确定转子位置</strong></p>
<h2 id="霍尔传感器"><a href="#霍尔传感器" class="headerlink" title="霍尔传感器"></a>霍尔传感器</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>磁场会对位于其中的带电导体内运动的电荷载流子施加一个垂直于其运动方向的力，该力会使得正负电荷分别积聚到导体的两侧。这在薄而平的导体中尤为明显。</p>
<p>电荷在导体两侧的积累会平衡磁场的影响，在导体两侧建立稳定的电势差。产生这一电势差的过程就叫做霍尔效应。</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204171146676.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204171146676.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204171146676"></p>
<ul>
<li>有正向磁场通过霍尔，输出”1”，高电平</li>
<li>有反向磁场通过霍尔，输出”0”，低电平</li>
</ul>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204171054927.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204171054927.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204171054927"></p>
<p>磁场旋转一圈，转子旋转一圈，但是此电机有四对磁极，所以磁场旋转四圈，转子旋转一圈。</p>
<p>以一个磁极为例，逆时针旋转一圈，分别检测霍尔1、2、3的波形</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173334525.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173334525.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204173334525"></p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173438058.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173438058.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204173438058"></p>
<p>以霍尔1上升沿为例，左移如图</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173627324.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173627324.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204173627324"></p>
<h3 id="逆时针"><a href="#逆时针" class="headerlink" title="逆时针"></a>逆时针</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173654799.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204173654799.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204173654799"></p>
<h3 id="顺时针"><a href="#顺时针" class="headerlink" title="顺时针"></a>顺时针</h3><p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204174215538.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231204174215538.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231204174215538"></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>神经网络-搭建小实战</title>
    <url>/2022/08/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C-%E6%90%AD%E5%BB%BA%E5%B0%8F%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="神经网络搭建CIFAR10"><a href="#神经网络搭建CIFAR10" class="headerlink" title="神经网络搭建CIFAR10"></a>神经网络搭建CIFAR10</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-  </span></span><br><span class="line"><span class="comment"># @Time : 2022/8/1 21:49</span></span><br><span class="line"><span class="comment"># @File : nn_seq.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> tensorboardX <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GHigher</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(GHigher, self).__init__()</span><br><span class="line">        self.conv1 = Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool1 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv2 = Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool2 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv3 = Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool3 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.flatten = Flatten()</span><br><span class="line">        self.linear1 = Linear(<span class="number">1024</span>, <span class="number">64</span>)</span><br><span class="line">        self.linear2 = Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        <span class="comment"># Sequential</span></span><br><span class="line">        self.model = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        <span class="comment"># x = self.conv1(x)</span></span><br><span class="line">        <span class="comment"># x = self.maxpool1(x)</span></span><br><span class="line">        <span class="comment"># x = self.conv2(x)</span></span><br><span class="line">        <span class="comment"># x = self.maxpool2(x)</span></span><br><span class="line">        <span class="comment"># x = self.conv3(x)</span></span><br><span class="line">        <span class="comment"># x = self.maxpool3(x)</span></span><br><span class="line">        <span class="comment"># x = self.flatten(x)</span></span><br><span class="line">        <span class="comment"># x = self.linear1(x)</span></span><br><span class="line">        <span class="comment"># x = self.linear2(x)</span></span><br><span class="line">        x = self.model(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">net_gh = GHigher()</span><br><span class="line"><span class="built_in">print</span>(net_gh)</span><br><span class="line"><span class="comment"># 检验网络是否正确</span></span><br><span class="line">test = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">result = net_gh(test)</span><br><span class="line"><span class="built_in">print</span>(result.shape)</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs_seq&quot;</span>)</span><br><span class="line">writer.add_graph(net_gh, test)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220801224623577.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220801224623577.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220801224623577"></p>
<h2 id="网络模型的保存"><a href="#网络模型的保存" class="headerlink" title="网络模型的保存"></a>网络模型的保存</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="comment"># train_data = torchvision.datasets.ImageNet(&quot;./Image_Net&quot;, split=&#x27;train&#x27;, transform=torchvision.transforms.ToTensor())</span></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 保存方式1</span></span><br><span class="line">torch.save(vgg16, <span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"><span class="comment"># 保存方式2</span></span><br><span class="line">torch.save(vgg16.state_dict(), <span class="string">&quot;vgg16_method2.pth&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802110550276.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802110550276.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220802110550276"></p>
<p>一般保存方式2比保存方式1所占的内存小，所以我们通常使用方式2保存</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802160929976.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802160929976.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220802160929976"></p>
<h2 id="网络模型的加载"><a href="#网络模型的加载" class="headerlink" title="网络模型的加载"></a>网络模型的加载</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 加载方式1</span></span><br><span class="line">model1 = torch.load(<span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model1)</span><br><span class="line"><span class="comment"># 加载方式2</span></span><br><span class="line">model2 = torch.load(<span class="string">&quot;vgg16_method2.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model2)</span><br><span class="line">vgg16.load_state_dict(model2)</span><br><span class="line"><span class="built_in">print</span>(vgg16)</span><br></pre></td></tr></table></figure>
<p><code>model1</code>返回</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">VGG(</span><br><span class="line">  (features): Sequential(</span><br><span class="line">    (<span class="number">0</span>): Conv2d(<span class="number">3</span>, <span class="number">64</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">1</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">2</span>): Conv2d(<span class="number">64</span>, <span class="number">64</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">3</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">4</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">5</span>): Conv2d(<span class="number">64</span>, <span class="number">128</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">6</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">7</span>): Conv2d(<span class="number">128</span>, <span class="number">128</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">8</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">9</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">10</span>): Conv2d(<span class="number">128</span>, <span class="number">256</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">11</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">12</span>): Conv2d(<span class="number">256</span>, <span class="number">256</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">13</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">14</span>): Conv2d(<span class="number">256</span>, <span class="number">256</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">15</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">16</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">17</span>): Conv2d(<span class="number">256</span>, <span class="number">512</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">18</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">19</span>): Conv2d(<span class="number">512</span>, <span class="number">512</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">20</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">21</span>): Conv2d(<span class="number">512</span>, <span class="number">512</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">22</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">23</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">24</span>): Conv2d(<span class="number">512</span>, <span class="number">512</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">25</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">26</span>): Conv2d(<span class="number">512</span>, <span class="number">512</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">27</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">28</span>): Conv2d(<span class="number">512</span>, <span class="number">512</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    (<span class="number">29</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">30</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">  )</span><br><span class="line">  (avgpool): AdaptiveAvgPool2d(output_size=(<span class="number">7</span>, <span class="number">7</span>))</span><br><span class="line">  (classifier): Sequential(</span><br><span class="line">    (<span class="number">0</span>): Linear(in_features=<span class="number">25088</span>, out_features=<span class="number">4096</span>, bias=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">1</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">2</span>): Dropout(p=<span class="number">0.5</span>, inplace=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">3</span>): Linear(in_features=<span class="number">4096</span>, out_features=<span class="number">4096</span>, bias=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">4</span>): ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">5</span>): Dropout(p=<span class="number">0.5</span>, inplace=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">6</span>): Linear(in_features=<span class="number">4096</span>, out_features=<span class="number">1000</span>, bias=<span class="literal">True</span>)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p><code>model2</code>返回为字典类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">OrderedDict([(<span class="string">&#x27;features.0.weight&#x27;</span>, tensor([[[[-<span class="number">4.1368e-02</span>,  <span class="number">1.2598e-02</span>, -<span class="number">3.7834e-03</span>],</span><br><span class="line">          [ <span class="number">2.3529e-02</span>,  <span class="number">4.8841e-02</span>, -<span class="number">3.7602e-02</span>],</span><br><span class="line">          [ <span class="number">3.2726e-02</span>,  <span class="number">5.5254e-02</span>,  <span class="number">6.1646e-02</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">3.3375e-02</span>, -<span class="number">9.8072e-02</span>,  <span class="number">3.3444e-02</span>],</span><br><span class="line">          [-<span class="number">3.6574e-02</span>, -<span class="number">5.2286e-02</span>, -<span class="number">8.1664e-03</span>],</span><br><span class="line">          [-<span class="number">3.8757e-02</span>,  <span class="number">3.0309e-02</span>,  <span class="number">9.3537e-03</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">6.7703e-03</span>, -<span class="number">2.8736e-02</span>, -<span class="number">1.2290e-02</span>],</span><br><span class="line">          [ <span class="number">3.2700e-02</span>, -<span class="number">4.2516e-02</span>, -<span class="number">2.9173e-02</span>],</span><br><span class="line">          [-<span class="number">1.2818e-01</span>, -<span class="number">1.7044e-02</span>,  <span class="number">3.0051e-02</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">5.4985e-02</span>, -<span class="number">6.2916e-03</span>,  <span class="number">6.8897e-02</span>],</span><br><span class="line">        .....]))])</span><br></pre></td></tr></table></figure>
<p>通常我们保存使用方式2，加载使用<code>vgg16.load_state_dict(model2)这种方式，</code></p>
<p><code>print(vgg16)</code>同<code>model1</code></p>
<p><strong><em>注意！！！</em></strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">conv</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(conv, self).__init__()</span><br><span class="line">        self.conv1 = Conv2d(<span class="number">3</span>, <span class="number">32</span>, kernel_size=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.conv1(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = conv()</span><br><span class="line">torch.save(test, <span class="string">&quot;conv_method.pth&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>当我们自己定义神经网络，保存之后，再在另一个文件加载是会报错，找不到自己定义的类</p>
<p><code>AttributeError: Can&#39;t get attribute &#39;conv&#39; on &lt;module &#39;__main__&#39; from &#39;C:/Users/25354/Desktop/Python/pytorch/model_load.py&#39;&gt;</code></p>
<p>解决方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model_save <span class="keyword">import</span> *</span><br><span class="line">test_model = torch.load(<span class="string">&quot;conv_method.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(test_model)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">conv(</span></span><br><span class="line"><span class="string">  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1))</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="完整的模型训练套路-以CIFAR10数据集"><a href="#完整的模型训练套路-以CIFAR10数据集" class="headerlink" title="完整的模型训练套路(以CIFAR10数据集)"></a>完整的模型训练套路(以CIFAR10数据集)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> tensorboardX <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(<span class="string">&quot;./datasets&quot;</span>, train=<span class="literal">True</span>, transform=torchvision.transforms.ToTensor())</span><br><span class="line">test_data = torchvision.datasets.CIFAR10(<span class="string">&quot;./datasets&quot;</span>, train=<span class="literal">False</span>, transform=torchvision.transforms.ToTensor())</span><br><span class="line"><span class="comment"># length长度</span></span><br><span class="line">train_data_size = <span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size = <span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;训练数据集的长度为:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(train_data_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试数据集的长度为:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_data_size))</span><br><span class="line"><span class="comment"># 利用DataLoader来加载数据集</span></span><br><span class="line">train_dataloader = DataLoader(train_data, batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搭建神经网络</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cifiar</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(cifiar, self).__init__()</span><br><span class="line">        <span class="comment"># Sequential</span></span><br><span class="line">        self.model = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        x = self.model(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建网络模型</span></span><br><span class="line">nn_cifai = cifiar()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 损失函数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化器</span></span><br><span class="line">learning_rate =<span class="number">1e-2</span></span><br><span class="line">optimizer = torch.optim.SGD(nn_cifai.parameters(), lr=learning_rate)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置训练网络的一些参数</span></span><br><span class="line"><span class="comment"># 记录训练的次数</span></span><br><span class="line">total_train_step = <span class="number">0</span></span><br><span class="line">total_test_step = <span class="number">0</span></span><br><span class="line"><span class="comment"># 训练的论数</span></span><br><span class="line">epoch = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加tensorboard</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;log_train&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---------第&#123;&#125;轮训练开始---------&quot;</span>.<span class="built_in">format</span>(i+<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># 训练步骤开始</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        img, target = data</span><br><span class="line">        output = nn_cifai(img)</span><br><span class="line">        loss = loss_fn(output, target)</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step = total_train_step + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数:&#123;&#125;, Loss:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step, loss.item()))</span><br><span class="line">            writer.add_scalar(<span class="string">&quot;train_loss&quot;</span>, loss.item(), total_train_step)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试步骤开始</span></span><br><span class="line">    total_test_loss = <span class="number">0</span></span><br><span class="line">    total_accuracy = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            img, target = data</span><br><span class="line">            output = nn_cifai(img)</span><br><span class="line">            loss = loss_fn(output, target)</span><br><span class="line">            total_test_loss = total_test_loss + loss.item()</span><br><span class="line">            accuray = (output.argmax(<span class="number">1</span>)==target).<span class="built_in">sum</span>()</span><br><span class="line">            total_accuracy = total_accuracy + accuray</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的Loss:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集的正确率:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_accuracy/test_data_size))</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_loss&quot;</span>, total_test_loss, total_train_step)</span><br><span class="line">    total_test_step += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># torch.save(nn_cifai, &quot;cifar_&#123;&#125;.pth&quot;.format(i))</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型已保存&quot;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802205624078.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802205624078.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220802205624078"></p>
<h2 id="利用GPU训练"><a href="#利用GPU训练" class="headerlink" title="利用GPU训练"></a>利用GPU训练</h2><h3 id="电脑存在GPU"><a href="#电脑存在GPU" class="headerlink" title="电脑存在GPU"></a>电脑存在GPU</h3><p>只需修改以下几项即可</p>
<ul>
<li>网络模型</li>
<li>损失函数</li>
<li>数据(输入，标注)</li>
</ul>
<p>两种方法</p>
<p>①后缀加<code>.cuda()</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 网络模型</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    nn_cifai = nn_cifai.cuda()</span><br><span class="line"><span class="comment"># 损失函数 </span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    loss_fn = loss_fn.cuda()</span><br><span class="line"><span class="comment"># 数据(输入，标注)  </span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    img = img.cuda()</span><br><span class="line">    target = target.cuda()</span><br></pre></td></tr></table></figure>
<p>②后缀加<code>.to(device)</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义训练的设备,如果gpu存在这样gpu否则用cpu</span></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"></span><br><span class="line">nn_cifai = nn_cifai.to(device)</span><br><span class="line">loss_fn = loss_fn.to(device)</span><br><span class="line">img = img.to(device)</span><br><span class="line">target = target.to(device)</span><br></pre></td></tr></table></figure>
<p>如果电脑上有多个GPU，<code>&quot;cuda&quot;</code>可以写为<code>&quot;cuda:0&quot;</code>或<code>&quot;cuda:1&quot;</code>…..</p>
<p>在<strong>任务管理器-&gt;性能</strong>可以查看</p>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802212554435.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20220802212554435.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20220802212554435"></p>
<h3 id="电脑不存在GPU"><a href="#电脑不存在GPU" class="headerlink" title="电脑不存在GPU"></a>电脑不存在GPU</h3><p>在线GPU</p>
<p>通过测试发现</p>
<ul>
<li>GPU运行时间为169.24s</li>
<li>CPU运行时间为788.99s</li>
</ul>
<p><strong>因此可以得出采用GPU训练可以大大提高运行时间</strong></p>
<h2 id="完整的模型验证套路"><a href="#完整的模型验证套路" class="headerlink" title="完整的模型验证套路"></a>完整的模型验证套路</h2><p>利用已经训练好的模型，然后它提供输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-  </span></span><br><span class="line"><span class="comment"># @Time : 2022/8/2 21:28</span></span><br><span class="line"><span class="comment"># @File : test.py.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"></span><br><span class="line">train_label = [<span class="string">&#x27;airplane&#x27;</span>, <span class="string">&#x27;automobile&#x27;</span>, <span class="string">&#x27;bird&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;deer&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;frog&#x27;</span>, <span class="string">&#x27;horse&#x27;</span>, <span class="string">&#x27;ship&#x27;</span>, <span class="string">&#x27;truck&#x27;</span>]</span><br><span class="line">img_path = <span class="string">&quot;airplane1.jpg&quot;</span></span><br><span class="line">img1_path = <span class="string">&quot;truck.png&quot;</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(img1_path)</span><br><span class="line">image = image.convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(image)</span><br><span class="line"></span><br><span class="line">transform = torchvision.transforms.Compose([torchvision.transforms.Resize((<span class="number">32</span>, <span class="number">32</span>)),</span><br><span class="line">                                            torchvision.transforms.ToTensor()])</span><br><span class="line">image = transform(image)</span><br><span class="line"><span class="built_in">print</span>(image.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搭建神经网络</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cifiar</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(cifiar, self).__init__()</span><br><span class="line">        <span class="comment"># Sequential</span></span><br><span class="line">        self.model = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        x = self.model(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model = torch.load(<span class="string">&quot;cifar_30.pth&quot;</span>, map_location=torch.device(<span class="string">&quot;cpu&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(model)</span><br><span class="line">image = torch.reshape(image, (<span class="number">1</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">model.<span class="built_in">eval</span>()</span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    output = model(image)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br><span class="line">index = output.argmax(<span class="number">1</span>).item()</span><br><span class="line"><span class="built_in">print</span>(index, train_label[index])</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;PIL.Image.Image image mode=RGB size=416x380 at 0x24E8447A820&gt;</span></span><br><span class="line"><span class="string">torch.Size([3, 32, 32])</span></span><br><span class="line"><span class="string">cifiar(</span></span><br><span class="line"><span class="string">  (model): Sequential(</span></span><br><span class="line"><span class="string">    (0): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span></span><br><span class="line"><span class="string">    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span></span><br><span class="line"><span class="string">    (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span></span><br><span class="line"><span class="string">    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span></span><br><span class="line"><span class="string">    (4): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span></span><br><span class="line"><span class="string">    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span></span><br><span class="line"><span class="string">    (6): Flatten(start_dim=1, end_dim=-1)</span></span><br><span class="line"><span class="string">    (7): Linear(in_features=1024, out_features=64, bias=True)</span></span><br><span class="line"><span class="string">    (8): Linear(in_features=64, out_features=10, bias=True)</span></span><br><span class="line"><span class="string">  )</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">tensor([[-0.7932,  1.5045, -0.6240,  1.7350, -5.7618,  0.1339, -0.3017, -2.6942,</span></span><br><span class="line"><span class="string">          0.0614,  5.5677]])</span></span><br><span class="line"><span class="string">9 truck</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Process finished with exit code 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>视觉处理</category>
        <category>Pytorch</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>键盘控制ROS小车运动</title>
    <url>/2023/11/20/%E9%94%AE%E7%9B%98%E6%8E%A7%E5%88%B6ROS%E5%B0%8F%E8%BD%A6%E8%BF%90%E5%8A%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="键盘控制ROS车运动"><a href="#键盘控制ROS车运动" class="headerlink" title="键盘控制ROS车运动"></a>键盘控制ROS车运动</h1><h2 id="上位机"><a href="#上位机" class="headerlink" title="上位机"></a>上位机</h2><p>使用pyseria库与stm32单片机进行通信控制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys, select, termios, tty</span><br><span class="line"><span class="keyword">import</span> serial</span><br><span class="line"></span><br><span class="line">msg = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">---------------------------</span></span><br><span class="line"><span class="string">        w     </span></span><br><span class="line"><span class="string">   a    x    d</span></span><br><span class="line"><span class="string">        s     </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">w : +x    a : +y</span></span><br><span class="line"><span class="string">s : -x    d : -y </span></span><br><span class="line"><span class="string">x : stop</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">其他按键 : stop</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">q/z : 线性速度增加/减少1RPM</span></span><br><span class="line"><span class="string">e/c : 只增加/减少角速度1RPM</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CTRL-C 退出</span></span><br><span class="line"><span class="string">---------------------------</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">moveBindings = &#123;</span><br><span class="line"><span class="string">&#x27;w&#x27;</span>:<span class="string">&#x27;w&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;s&#x27;</span>:<span class="string">&#x27;s&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;d&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x&#x27;</span>:<span class="string">&#x27;x&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;q&#x27;</span>:<span class="string">&#x27;q&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;z&#x27;</span>:<span class="string">&#x27;z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;e&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;c&#x27;</span>:<span class="string">&#x27;c&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getKey</span>():</span></span><br><span class="line">    tty.setraw(sys.stdin.fileno())</span><br><span class="line">    select.select([sys.stdin], [], [], <span class="number">0</span>)</span><br><span class="line">    key = sys.stdin.read(<span class="number">1</span>)</span><br><span class="line">    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)</span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    settings = termios.tcgetattr(sys.stdin)</span><br><span class="line">    port = <span class="string">&#x27;/dev/ttyUSB1&#x27;</span>  <span class="comment"># 串口号</span></span><br><span class="line">    baud = <span class="number">115200</span>  <span class="comment"># 波特率</span></span><br><span class="line">    ser = serial.Serial(port, baud, timeout=<span class="number">0.5</span>)</span><br><span class="line">    flag = ser.isOpen()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(msg)</span><br><span class="line">        <span class="built_in">print</span>(port, <span class="string">&quot;串口打开成功&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">                key = getKey()</span><br><span class="line">                <span class="keyword">if</span> key <span class="keyword">in</span> moveBindings.keys():</span><br><span class="line">                    data = moveBindings[key]</span><br><span class="line">                    ser.write(data.encode(<span class="string">&quot;gbk&quot;</span>))</span><br><span class="line">                    <span class="comment"># print(&#x27;串口发送数据:  &#x27;, data)</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> (key == <span class="string">&#x27;\x03&#x27;</span>):</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;串口打开异常&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="下位机"><a href="#下位机" class="headerlink" title="下位机"></a>下位机</h2><p>下位机采用USART1进行通信，轮毂电机的控制参考上篇文章<a href="https://blog.csdn.net/weixin_51002159/article/details/130904503?spm=1001.2014.3001.5501">STM32HAL库RS485-ModBus协议控制伺服电机</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">uint16_t</span> data[<span class="number">2</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">uint16_t</span> data1[<span class="number">2</span>] = &#123;<span class="number">-16</span>, <span class="number">16</span>&#125;;</span><br><span class="line"><span class="keyword">uint16_t</span> data2[<span class="number">2</span>] = &#123;<span class="number">6</span>, <span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">uint16_t</span> data3[<span class="number">2</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">uint8_t</span> RxData;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 1 */</span></span><br><span class="line">  <span class="keyword">uint16_t</span> speed_flag, turn_flag;</span><br><span class="line">  <span class="keyword">uint16_t</span> speed = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">uint16_t</span> turn = <span class="number">10</span>;</span><br><span class="line">  speed_flag = turn_flag = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">/* USER CODE END 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//....初始化省略.....</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">  HAL_UART_Receive_IT(&amp;huart1, &amp;RxData,<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//RS485发送模式</span></span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET);</span><br><span class="line">  <span class="comment">//电机初始化指令</span></span><br><span class="line">  MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X200D</span>, <span class="number">0x0003</span>, <span class="number">100</span>);</span><br><span class="line">  HAL_Delay(<span class="number">10</span>);</span><br><span class="line">  MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X200E</span>, <span class="number">0x0008</span>, <span class="number">100</span>);</span><br><span class="line">  HAL_Delay(<span class="number">10</span>);</span><br><span class="line">  MBRTUMasterWriteSingleRegister(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X200E</span>, <span class="number">0x0010</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END 2 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN WHILE */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line">      HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET);</span><br><span class="line">        <span class="keyword">if</span>(RxData == <span class="string">&#x27;w&#x27;</span>||RxData == <span class="string">&#x27;s&#x27;</span>||RxData == <span class="string">&#x27;a&#x27;</span>||RxData == <span class="string">&#x27;d&#x27;</span>||RxData == <span class="string">&#x27;x&#x27;</span>||RxData == <span class="string">&#x27;e&#x27;</span>||RxData == <span class="string">&#x27;c&#x27;</span>||RxData == <span class="string">&#x27;q&#x27;</span>||RxData == <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(RxData == <span class="string">&#x27;w&#x27;</span> || RxData == <span class="string">&#x27;s&#x27;</span>||RxData == <span class="string">&#x27;q&#x27;</span>||RxData == <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(RxData == <span class="string">&#x27;w&#x27;</span>) speed_flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(RxData == <span class="string">&#x27;s&#x27;</span>) speed_flag = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(RxData == <span class="string">&#x27;q&#x27;</span>) speed+=<span class="number">10</span>;</span><br><span class="line">                <span class="keyword">if</span>(RxData == <span class="string">&#x27;z&#x27;</span>) speed-=<span class="number">10</span>;</span><br><span class="line">                data[<span class="number">0</span>] = speed_flag * speed;</span><br><span class="line">                data[<span class="number">1</span>] = -speed_flag * speed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(RxData == <span class="string">&#x27;a&#x27;</span>||RxData == <span class="string">&#x27;d&#x27;</span>||RxData == <span class="string">&#x27;e&#x27;</span>||RxData == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (RxData == <span class="string">&#x27;a&#x27;</span>) turn_flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (RxData == <span class="string">&#x27;d&#x27;</span>) turn_flag = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(RxData == <span class="string">&#x27;e&#x27;</span>) turn+=<span class="number">10</span>;</span><br><span class="line">                <span class="keyword">if</span>(RxData == <span class="string">&#x27;c&#x27;</span>) turn-=<span class="number">10</span>;</span><br><span class="line">                data[<span class="number">0</span>] = turn_flag * turn;</span><br><span class="line">                data[<span class="number">1</span>] = turn_flag * turn;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(RxData == <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                data[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                data[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//0x10指令便于给多寄存器发送指令，电机同时启动</span></span><br><span class="line">            MBRTUMasterWriteMultipleRegisters(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X2088</span>, <span class="number">0X0002</span>, data, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        RxData = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>加入按键外部中断控制，进行测试或急停</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="keyword">uint16_t</span> GPIO_Pin)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(GPIO_Pin==WK_UP_EXTI_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(HAL_GPIO_ReadPin(WK_UP_EXTI_GPIO_Port, WK_UP_EXTI_Pin) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            MBRTUMasterWriteMultipleRegisters(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X2088</span>, <span class="number">0X0002</span>, data3, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(GPIO_Pin==KEY0_EXTI_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY0_EXTI_GPIO_Port, KEY0_EXTI_Pin) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            MBRTUMasterWriteMultipleRegisters(&amp;MBRTUHandle, 1, 0X2088, 0X0002, data1, 100);</span></span><br><span class="line">            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_RESET);</span><br><span class="line">            MBRTUMasterReadHoldingRegisters(&amp;MBRTUHandle, <span class="number">0x01</span>, <span class="number">0x20AB</span>, <span class="number">0x0002</span>, <span class="number">100</span>);</span><br><span class="line">            HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_5);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(GPIO_Pin==KEY1_EXTI_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_EXTI_GPIO_Port, KEY1_EXTI_Pin) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            MBRTUMasterWriteMultipleRegisters(&amp;MBRTUHandle, <span class="number">1</span>, <span class="number">0X2088</span>, <span class="number">0X0002</span>, data2, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>赋予串口权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 /dev/ttyUSB*</span><br><span class="line">python3 keyboard_control.py </span><br></pre></td></tr></table></figure>
<p><img src="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120164116548.png" class="lazyload placeholder" data-srcset="https://ghigher-picture-bed.oss-cn-qingdao.aliyuncs.com/img/image-20231120164116548.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="image-20231120164116548"></p>
<p>演示视频<a href="https://www.bilibili.com/video/BV1Dz4y1P7F3/?spm_id_from=333.999.0.0">键盘控制节点编写</a></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
</search>
